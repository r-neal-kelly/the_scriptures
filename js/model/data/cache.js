var __awaiter=this&&this.__awaiter||function(e,s,i,t){return new(i||(i=Promise))((function(n,_){function r(e){try{h(t.next(e))}catch(e){_(e)}}function o(e){try{h(t.throw(e))}catch(e){_(e)}}function h(e){var s;e.done?n(e.value):(s=e.value,s instanceof i?s:new i((function(e){e(s)}))).then(r,o)}h((t=t.apply(e,s||[])).next())}))};import*as Utils from"../../utils.js";import*as Circle_Buffer from"../../circle_buffer.js";import*as Compressor from"../../compressor.js";import*as Entity from"../entity.js";import*as Text from"../text.js";import*as Consts from"./consts.js";import*as Info from"./info.js";import*as Version from"./version.js";class Version_Cache{constructor({id:e,compressed_unique_parts_json:s,compressed_dictionary_json:i}){this.id=e,this.compressor=new Version.Compressor.Instance({unique_parts:JSON.parse(Compressor.LZSS_Decompress(s))}),this.dictionary=new Text.Dictionary.Instance({json:this.compressor.Decompress_Dictionary({dictionary_value:i})}),this.reference_count=0}ID(){return this.id}Compressor(){return this.compressor}Dictionary(){return this.dictionary}Reference_Count(){return this.reference_count}Increment_Reference_Count(){0,this.reference_count+=1}Decrement_Reference_Count(){0,this.reference_count-=1}}class File_Cache{constructor({id:e,version_id:s,compressed_file_text:i}){this.id=e,this.version_id=s,this.compressed_file_text=i}ID(){return this.id}Version_ID(){return this.version_id}Compressed_File_Text(){return this.compressed_file_text}}export class Instance extends Entity.Instance{constructor({version_cache_limit:e=Consts.DEFAULT_VERSION_CACHE_LIMIT,file_cache_limit:s=Consts.DEFAULT_FILE_CACHE_LIMIT}={}){super(),this.info=null,this.version_buffer=new Circle_Buffer.Instance({capacity:e,initial_unit:""}),this.version_caches={},this.file_buffer=new Circle_Buffer.Instance({capacity:s,initial_unit:""}),this.file_caches={},this.Add_Dependencies([])}String(e,{fetch_attempt_count:s=0,fetch_attempt_limit:i=Consts.DEFAULT_FETCH_ATTEMPT_LIMIT}={}){return __awaiter(this,void 0,void 0,(function*(){if(s<i){const t=yield fetch(Utils.Resolve_Path(e));return t.ok?yield t.text():this.String(e,{fetch_attempt_count:s+1,fetch_attempt_limit:i})}return null}))}Info(e=!1){return __awaiter(this,void 0,void 0,(function*(){if(e&&(this.info=null),null!=this.info)return this.info;{const e=yield this.String(Consts.INFO_PATH);return null!=e&&(this.info=new Info.Instance({json:Compressor.LZSS_Decompress(e)})),this.info}}))}Has_Version_Cache(e){return null!=this.version_caches[e]}Version_Cache(e){return 0,this.version_caches[e]}Add_Version_Cache(e){0,this.version_buffer.Is_Full()&&this.Remove_Version_Cache_By_Index(0);const s=e.ID();this.version_buffer.Add_Back(s),this.version_caches[s]=e}Remove_Version_Cache_By_Index(e){0;const s=this.version_buffer.At(e),i=this.Version_Cache(s);if(i.Reference_Count()>0){for(let e=this.file_buffer.Count(),i=0;e>i;){e-=1;const i=this.file_buffer.At(e);this.File_Cache(i).Version_ID()===s&&this.Remove_File_Cache_By_Index(e)}0,0}else delete this.version_caches[s],this.version_buffer.Remove_At(e)}Remove_Version_Cache_By_ID(e){0;const s=this.version_buffer.Index_Of(e);0,this.Remove_Version_Cache_By_Index(s)}Remove_Version_Cache(e){this.Remove_Version_Cache_By_ID(e.ID())}Has_File_Cache(e){return null!=this.file_caches[e]}File_Cache(e){return 0,this.file_caches[e]}Add_File_Cache(e){0,0,this.file_buffer.Is_Full()&&this.Remove_File_Cache_By_Index(0);const s=e.ID();this.file_buffer.Add_Back(s),this.file_caches[s]=e,this.Version_Cache(e.Version_ID()).Increment_Reference_Count()}Remove_File_Cache_By_Index(e){0;const s=this.file_buffer.At(e),i=this.File_Cache(s),t=this.Version_Cache(i.Version_ID());delete this.file_caches[s],this.file_buffer.Remove_At(e),t.Decrement_Reference_Count(),t.Reference_Count()<1&&this.Remove_Version_Cache(t)}Remove_File_Cache_By_ID(e){0;const s=this.file_buffer.Index_Of(e);0,this.Remove_File_Cache_By_Index(s)}Remove_File_Cache(e){this.Remove_File_Cache_By_ID(e.ID())}Version_And_File_Cache(e,s){return __awaiter(this,void 0,void 0,(function*(){if(!this.Has_File_Cache(s))if(this.Has_Version_Cache(e)){const i=yield this.String(s);if(this.Has_Version_Cache(e)){if(!this.Has_File_Cache(s)){if(null==i)return null;this.Add_File_Cache(new File_Cache({id:s,version_id:e,compressed_file_text:i}))}}else{if(null==i)return null;{const[t,n]=yield Promise.all([this.String(`${e}/${Consts.UNIQUE_PARTS_NAME}`),this.String(`${e}/${Consts.DICTIONARY_NAME}`)]);if(this.Has_Version_Cache(e))this.Has_File_Cache(s)||this.Add_File_Cache(new File_Cache({id:s,version_id:e,compressed_file_text:i}));else{if(null==t||null==n)return null;this.Add_Version_Cache(new Version_Cache({id:e,compressed_unique_parts_json:t,compressed_dictionary_json:n})),0,this.Add_File_Cache(new File_Cache({id:s,version_id:e,compressed_file_text:i}))}}}}else{const[i,t,n]=yield Promise.all([this.String(`${e}/${Consts.UNIQUE_PARTS_NAME}`),this.String(`${e}/${Consts.DICTIONARY_NAME}`),this.String(s)]);if(this.Has_Version_Cache(e)){if(!this.Has_File_Cache(s)){if(null==n)return null;this.Add_File_Cache(new File_Cache({id:s,version_id:e,compressed_file_text:n}))}}else{if(null==i||null==t||null==n)return null;this.Add_Version_Cache(new Version_Cache({id:e,compressed_unique_parts_json:i,compressed_dictionary_json:t})),0,this.Add_File_Cache(new File_Cache({id:s,version_id:e,compressed_file_text:n}))}}return[this.Version_Cache(e),this.File_Cache(s)]}))}Add_Missing_File_Caches(e,s){0;for(let i=0,t=s.length;i<t;i+=1){const[t,n]=s[i];this.Has_File_Cache(t)||null==n||this.Add_File_Cache(new File_Cache({id:t,version_id:e,compressed_file_text:n}))}}Add_Missing_File_Caches_With_Version_Text(e,s,i){const t=i.split(Consts.VERSION_TEXT_FILE_BREAK);0,this.Add_Missing_File_Caches(e,t.map((function(i,t){return[`${e}/${s[t]}`,i]})))}Add_Full_Version_Cache_With_Version_Test(e,s){return __awaiter(this,void 0,void 0,(function*(){const[i,t,n]=yield Promise.all([this.String(`${e}/${Consts.UNIQUE_PARTS_NAME}`),this.String(`${e}/${Consts.DICTIONARY_NAME}`),this.String(`${e}/${Consts.VERSION_TEXT_NAME}`)]);this.Has_Version_Cache(e)?null!=n&&this.Add_Missing_File_Caches_With_Version_Text(e,s,n):null!=i&&null!=t&&null!=n&&(this.Add_Version_Cache(new Version_Cache({id:e,compressed_unique_parts_json:i,compressed_dictionary_json:t})),this.Add_Missing_File_Caches_With_Version_Text(e,s,n))}))}Cache_Version_And_Files(e,s,{attempt_count:i=0,attempt_limit:t=Consts.DEFAULT_VERSION_CACHE_ATTEMPT_LIMIT}={}){return __awaiter(this,void 0,void 0,(function*(){const n=e;if(this.Has_Version_Cache(n)){const i=this.Version_Cache(n).Reference_Count();0;const t=s.length-i;if(t>0)if(t<=Consts.VERSION_FILE_FETCH_LIMIT){const i=yield Promise.all(s.filter(function(s){const i=`${e}/${s}`;return!this.Has_File_Cache(i)}.bind(this)).map(function(s){return __awaiter(this,void 0,void 0,(function*(){const i=`${e}/${s}`;return[i,yield this.String(i)]}))}.bind(this)));this.Has_Version_Cache(n)?this.Add_Missing_File_Caches(n,i):yield this.Add_Full_Version_Cache_With_Version_Test(e,s)}else{const i=yield this.String(`${e}/${Consts.VERSION_TEXT_NAME}`);if(null!=i)if(this.Has_Version_Cache(n))this.Add_Missing_File_Caches_With_Version_Text(e,s,i);else{const[t,_]=yield Promise.all([this.String(`${e}/${Consts.UNIQUE_PARTS_NAME}`),this.String(`${e}/${Consts.DICTIONARY_NAME}`)]);this.Has_Version_Cache(n)?this.Add_Missing_File_Caches_With_Version_Text(e,s,i):null!=t&&null!=_&&(this.Add_Version_Cache(new Version_Cache({id:e,compressed_unique_parts_json:t,compressed_dictionary_json:_})),this.Add_Missing_File_Caches_With_Version_Text(e,s,i))}}}else yield this.Add_Full_Version_Cache_With_Version_Test(e,s);if((!this.Has_Version_Cache(n)||this.Version_Cache(n).Reference_Count()<s.length)&&i<t)return this.Cache_Version_And_Files(e,s,{attempt_count:i+1,attempt_limit:t})}))}File_Text(e,s,i){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.Version_And_File_Cache(e,`${e}/${s}`);if(null!=t){const[e,s]=t;return new Text.Instance({dictionary:e.Dictionary(),value:e.Compressor().Decompress_File({dictionary:e.Dictionary(),file_value:s.Compressed_File_Text()}),path_type:i})}return null}))}}