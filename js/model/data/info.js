import*as Utils from"../../utils.js";import*as Name_Sorter from"../name_sorter.js";import{FILE_COUNT,LINES,MAX_LINE_COUNT,AVG_LINE_COUNT,COLUMNS,MAX_COLUMN_COUNT,AVG_COLUMN_COUNT,MACRO_ROWS,MICRO_ROWS,MAX_ROW_COUNT,AVG_ROW_COUNT,SEGMENTS,MAX_SEGMENT_COUNT,AVG_SEGMENT_COUNT,MAX_ITEM_COUNT,AVG_ITEM_COUNT}from"./buffer_counts.js";export class Info{constructor({json:t=null}){if(t){const _=JSON.parse(t);this.tree=_.tree,this.unique_book_names=_.unique_book_names,this.unique_language_names=_.unique_language_names,this.unique_version_names=_.unique_version_names,this.total_unit_count=_.total_unit_count,this.total_point_count=_.total_point_count,this.total_letter_count=_.total_letter_count,this.total_marker_count=_.total_marker_count,this.total_meta_letter_count=_.total_meta_letter_count,this.total_word_count=_.total_word_count,this.total_break_count=_.total_break_count,this.total_meta_word_count=_.total_meta_word_count,this.total_part_count=_.total_part_count,this.total_line_count=_.total_line_count,this.total_file_count=_.total_file_count,this.total_book_count=_.total_book_count,this.language_unit_counts=_.language_unit_counts,this.language_point_counts=_.language_point_counts,this.language_letter_counts=_.language_letter_counts,this.language_marker_counts=_.language_marker_counts,this.language_meta_letter_counts=_.language_meta_letter_counts,this.language_word_counts=_.language_word_counts,this.language_break_counts=_.language_break_counts,this.language_meta_word_counts=_.language_meta_word_counts,this.language_part_counts=_.language_part_counts,this.language_line_counts=_.language_line_counts,this.language_file_counts=_.language_file_counts,this.language_book_counts=_.language_book_counts,this.buffer_counts=_.buffer_counts,this.Freeze()}else this.tree={books:[]},this.unique_book_names=[],this.unique_language_names=[],this.unique_version_names=[],this.total_unit_count=0,this.total_point_count=0,this.total_letter_count=0,this.total_marker_count=0,this.total_meta_letter_count=0,this.total_word_count=0,this.total_break_count=0,this.total_meta_word_count=0,this.total_part_count=0,this.total_line_count=0,this.total_file_count=0,this.total_book_count=0,this.language_unit_counts={},this.language_point_counts={},this.language_letter_counts={},this.language_marker_counts={},this.language_meta_letter_counts={},this.language_word_counts={},this.language_break_counts={},this.language_meta_word_counts={},this.language_part_counts={},this.language_line_counts={},this.language_file_counts={},this.language_book_counts={},this.buffer_counts={[MAX_LINE_COUNT]:0,[AVG_LINE_COUNT]:0,[FILE_COUNT]:0,[LINES]:[]}}Is_Finalized(){return this.Is_Frozen()}Finalize(){0,this.buffer_counts[FILE_COUNT]>0&&this.Calculate_Buffer_Averages(),this.Freeze()}Is_Frozen(){return Object.isFrozen(this)}Freeze(){0;const t=Name_Sorter.Singleton();this.unique_book_names=t.With_Array(Name_Sorter.Type.BOOKS,this.unique_book_names),this.unique_language_names=t.With_Array(Name_Sorter.Type.LANGUAGES,this.unique_language_names),this.unique_version_names=t.With_Array(Name_Sorter.Type.VERSIONS,this.unique_version_names),Object.freeze(this.unique_book_names),Object.freeze(this.unique_language_names),Object.freeze(this.unique_version_names),Object.freeze(this.language_unit_counts),Object.freeze(this.language_point_counts),Object.freeze(this.language_letter_counts),Object.freeze(this.language_marker_counts),Object.freeze(this.language_meta_letter_counts),Object.freeze(this.language_word_counts),Object.freeze(this.language_break_counts),Object.freeze(this.language_meta_word_counts),Object.freeze(this.language_part_counts),Object.freeze(this.language_line_counts),Object.freeze(this.language_file_counts),Object.freeze(this.language_book_counts),Object.freeze(this.buffer_counts);for(let t=0,_=this.buffer_counts[LINES].length;t<_;t+=1){const _=this.buffer_counts[LINES][t];Object.freeze(_);for(let t=0,e=_[COLUMNS].length;t<e;t+=1){const e=_[COLUMNS][t];Object.freeze(e);for(let t=0,_=e[MACRO_ROWS].length;t<_;t+=1){const _=e[MACRO_ROWS][t];Object.freeze(_);for(let t=0,e=_[SEGMENTS].length;t<e;t+=1){const e=_[SEGMENTS][t];Object.freeze(e)}}for(let t=0,_=e[MICRO_ROWS].length;t<_;t+=1){const _=e[MICRO_ROWS][t];Object.freeze(_);for(let t=0,e=_[SEGMENTS].length;t<e;t+=1){const e=_[SEGMENTS][t];Object.freeze(e)}}}}Object.freeze(this),0,0}JSON_String(){return 0,JSON.stringify(this)}Tree(){return this.tree}Unique_Book_Names(){return Array.from(this.unique_book_names)}Unique_Book_Name_Count(){return this.unique_book_names.length}Unique_Book_Name_Count_String(){return Utils.Add_Commas_To_Number(this.Unique_Book_Name_Count())}Has_Unique_Book_Name(t){return this.unique_book_names.indexOf(t)>-1}Add_Unique_Book_Name(t){0,this.Has_Unique_Book_Name(t)||this.unique_book_names.push(t)}Unique_Language_Names(){return Array.from(this.unique_language_names)}Unique_Language_Name_Count(){return this.unique_language_names.length}Unique_Language_Name_Count_String(){return Utils.Add_Commas_To_Number(this.Unique_Language_Name_Count())}Has_Unique_Language_Name(t){return null!=this.language_unit_counts[t]}Add_Unique_Language_Name(t){0,this.Has_Unique_Language_Name(t)||(this.unique_language_names.push(t),this.language_unit_counts[t]=0,this.language_point_counts[t]=0,this.language_letter_counts[t]=0,this.language_marker_counts[t]=0,this.language_meta_letter_counts[t]=0,this.language_word_counts[t]=0,this.language_break_counts[t]=0,this.language_meta_word_counts[t]=0,this.language_part_counts[t]=0,this.language_line_counts[t]=0,this.language_file_counts[t]=0,this.language_book_counts[t]=0)}Unique_Version_Names(){return Array.from(this.unique_version_names)}Unique_Version_Name_Count(){return this.unique_version_names.length}Unique_Version_Name_Count_String(){return Utils.Add_Commas_To_Number(this.Unique_Version_Name_Count())}Has_Unique_Version_Name(t){return this.unique_version_names.indexOf(t)>-1}Add_Unique_Version_Name(t){0,this.Has_Unique_Version_Name(t)||this.unique_version_names.push(t)}Total_Unit_Count(){return this.total_unit_count}Total_Unit_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Unit_Count())}Language_Unit_Count(t){return 0,this.language_unit_counts[t]}Language_Unit_Percent(t){return Math.round(100*this.Language_Unit_Count(t)/this.Total_Unit_Count())}Language_Unit_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Unit_Count(_)]);return t}Language_Unit_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Unit_Count(_),this.Language_Unit_Percent(_)]);return t}Increment_Unit_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_unit_count+=_,this.language_unit_counts[t]+=_}Increment_Unit_Counts(t){for(const[_,e]of t)this.Increment_Unit_Count(_,e)}Total_Point_Count(){return this.total_point_count}Total_Point_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Point_Count())}Language_Point_Count(t){return 0,this.language_point_counts[t]}Language_Point_Percent(t){return Math.round(100*this.Language_Point_Count(t)/this.Total_Point_Count())}Language_Point_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Point_Count(_)]);return t}Language_Point_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Point_Count(_),this.Language_Point_Percent(_)]);return t}Increment_Point_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_point_count+=_,this.language_point_counts[t]+=_}Increment_Point_Counts(t){for(const[_,e]of t)this.Increment_Point_Count(_,e)}Total_Letter_Count(){return this.total_letter_count}Total_Letter_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Letter_Count())}Total_Letter_Percent(){return Math.round(100*this.Total_Letter_Count()/this.Total_Point_Count())}Language_Letter_Count(t){return 0,this.language_letter_counts[t]}Language_Letter_Percent(t){return Math.round(100*this.Language_Letter_Count(t)/this.Total_Letter_Count())}Language_Letter_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Letter_Count(_)]);return t}Language_Letter_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Letter_Count(_),this.Language_Letter_Percent(_)]);return t}Increment_Letter_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_letter_count+=_,this.language_letter_counts[t]+=_}Increment_Letter_Counts(t){for(const[_,e]of t)this.Increment_Letter_Count(_,e)}Total_Marker_Count(){return this.total_marker_count}Total_Marker_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Marker_Count())}Total_Marker_Percent(){return Math.round(100*this.Total_Marker_Count()/this.Total_Point_Count())}Language_Marker_Count(t){return 0,this.language_marker_counts[t]}Language_Marker_Percent(t){return Math.round(100*this.Language_Marker_Count(t)/this.Total_Marker_Count())}Language_Marker_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Marker_Count(_)]);return t}Language_Marker_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Marker_Count(_),this.Language_Marker_Percent(_)]);return t}Increment_Marker_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_marker_count+=_,this.language_marker_counts[t]+=_}Increment_Marker_Counts(t){for(const[_,e]of t)this.Increment_Marker_Count(_,e)}Total_Meta_Letter_Count(){return this.total_meta_letter_count}Total_Meta_Letter_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Meta_Letter_Count())}Total_Meta_Letter_Percent(){return Math.round(100*this.Total_Meta_Letter_Count()/this.Total_Point_Count())}Language_Meta_Letter_Count(t){return 0,this.language_meta_letter_counts[t]}Language_Meta_Letter_Percent(t){return Math.round(100*this.Language_Meta_Letter_Count(t)/this.Total_Meta_Letter_Count())}Language_Meta_Letter_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Meta_Letter_Count(_)]);return t}Language_Meta_Letter_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Meta_Letter_Count(_),this.Language_Meta_Letter_Percent(_)]);return t}Increment_Meta_Letter_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_meta_letter_count+=_,this.language_meta_letter_counts[t]+=_}Increment_Meta_Letter_Counts(t){for(const[_,e]of t)this.Increment_Meta_Letter_Count(_,e)}Total_Word_Count(){return this.total_word_count}Total_Word_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Word_Count())}Total_Word_Percent(){return Math.round(100*this.Total_Word_Count()/this.Total_Part_Count())}Language_Word_Count(t){return 0,this.language_word_counts[t]}Language_Word_Percent(t){return Math.round(100*this.Language_Word_Count(t)/this.Total_Word_Count())}Language_Word_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Word_Count(_)]);return t}Language_Word_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Word_Count(_),this.Language_Word_Percent(_)]);return t}Increment_Word_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_word_count+=_,this.language_word_counts[t]+=_}Increment_Word_Counts(t){for(const[_,e]of t)this.Increment_Word_Count(_,e)}Total_Break_Count(){return this.total_break_count}Total_Break_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Break_Count())}Total_Break_Percent(){return Math.round(100*this.Total_Break_Count()/this.Total_Part_Count())}Language_Break_Count(t){return 0,this.language_break_counts[t]}Language_Break_Percent(t){return Math.round(100*this.Language_Break_Count(t)/this.Total_Break_Count())}Language_Break_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Break_Count(_)]);return t}Language_Break_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Break_Count(_),this.Language_Break_Percent(_)]);return t}Increment_Break_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_break_count+=_,this.language_break_counts[t]+=_}Increment_Break_Counts(t){for(const[_,e]of t)this.Increment_Break_Count(_,e)}Total_Meta_Word_Count(){return this.total_meta_word_count}Total_Meta_Word_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Meta_Word_Count())}Total_Meta_Word_Percent(){return Math.round(100*this.Total_Meta_Word_Count()/this.Total_Part_Count())}Language_Meta_Word_Count(t){return 0,this.language_meta_word_counts[t]}Language_Meta_Word_Percent(t){return Math.round(100*this.Language_Meta_Word_Count(t)/this.Total_Meta_Word_Count())}Language_Meta_Word_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Meta_Word_Count(_)]);return t}Language_Meta_Word_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Meta_Word_Count(_),this.Language_Meta_Word_Percent(_)]);return t}Increment_Meta_Word_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_meta_word_count+=_,this.language_meta_word_counts[t]+=_}Increment_Meta_Word_Counts(t){for(const[_,e]of t)this.Increment_Meta_Word_Count(_,e)}Total_Part_Count(){return this.total_part_count}Total_Part_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Part_Count())}Language_Part_Count(t){return 0,this.language_part_counts[t]}Language_Part_Percent(t){return Math.round(100*this.Language_Part_Count(t)/this.Total_Part_Count())}Language_Part_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Part_Count(_)]);return t}Language_Part_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Part_Count(_),this.Language_Part_Percent(_)]);return t}Increment_Part_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_part_count+=_,this.language_part_counts[t]+=_}Increment_Part_Counts(t){for(const[_,e]of t)this.Increment_Part_Count(_,e)}Total_Line_Count(){return this.total_line_count}Total_Line_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Line_Count())}Language_Line_Count(t){return 0,this.language_line_counts[t]}Language_Line_Percent(t){return Math.round(100*this.Language_Line_Count(t)/this.Total_Line_Count())}Language_Line_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Line_Count(_)]);return t}Language_Line_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Line_Count(_),this.Language_Line_Percent(_)]);return t}Increment_Line_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_line_count+=_,this.language_line_counts[t]+=_}Increment_Line_Counts(t){for(const[_,e]of t)this.Increment_Line_Count(_,e)}Total_File_Count(){return this.total_file_count}Total_File_Count_String(){return Utils.Add_Commas_To_Number(this.Total_File_Count())}Language_File_Count(t){return 0,this.language_file_counts[t]}Language_File_Percent(t){return Math.round(100*this.Language_File_Count(t)/this.Total_File_Count())}Language_File_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_File_Count(_)]);return t}Language_File_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_File_Count(_),this.Language_File_Percent(_)]);return t}Increment_File_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_file_count+=_,this.language_file_counts[t]+=_}Increment_File_Counts(t){for(const[_,e]of t)this.Increment_File_Count(_,e)}Total_Book_Count(){return this.total_book_count}Total_Book_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Book_Count())}Language_Book_Count(t){return 0,this.language_book_counts[t]}Language_Book_Percent(t){return Math.round(100*this.Language_Book_Count(t)/this.Total_Book_Count())}Language_Book_Counts(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Book_Count(_)]);return t}Language_Book_Counts_And_Percents(){const t=[];for(const _ of this.unique_language_names)t.push([_,this.Language_Book_Count(_),this.Language_Book_Percent(_)]);return t}Increment_Book_Count(t,_){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_book_count+=_,this.language_book_counts[t]+=_}Increment_Book_Counts(t){for(const[_,e]of t)this.Increment_Book_Count(_,e)}Buffer_Counts(){return 0,this.buffer_counts}Max_Line_Count(){return this.Buffer_Counts()[MAX_LINE_COUNT]}Avg_Line_Count(){return this.Buffer_Counts()[AVG_LINE_COUNT]}Line_Counts({line_index:t}){return this.Buffer_Counts()[LINES][t]}Max_Column_Count({line_index:t}){return this.Line_Counts({line_index:t})[MAX_COLUMN_COUNT]}Avg_Column_Count({line_index:t}){return this.Line_Counts({line_index:t})[AVG_COLUMN_COUNT]}Column_Counts({line_index:t,column_index:_}){return this.Line_Counts({line_index:t})[COLUMNS][_]}Max_Row_Count({line_index:t,column_index:_}){return this.Column_Counts({line_index:t,column_index:_})[MAX_ROW_COUNT]}Avg_Row_Count({line_index:t,column_index:_}){return this.Column_Counts({line_index:t,column_index:_})[AVG_ROW_COUNT]}Macro_Row_Counts({line_index:t,column_index:_,row_index:e}){return this.Column_Counts({line_index:t,column_index:_})[MACRO_ROWS][e]}Max_Macro_Segment_Count({line_index:t,column_index:_,row_index:e}){return this.Macro_Row_Counts({line_index:t,column_index:_,row_index:e})[MAX_SEGMENT_COUNT]}Avg_Macro_Segment_Count({line_index:t,column_index:_,row_index:e}){return this.Macro_Row_Counts({line_index:t,column_index:_,row_index:e})[AVG_SEGMENT_COUNT]}Macro_Segment_Counts({line_index:t,column_index:_,row_index:e,segment_index:n}){return this.Macro_Row_Counts({line_index:t,column_index:_,row_index:e})[SEGMENTS][n]}Max_Macro_Item_Count({line_index:t,column_index:_,row_index:e,segment_index:n}){return this.Macro_Segment_Counts({line_index:t,column_index:_,row_index:e,segment_index:n})[MAX_ITEM_COUNT]}Avg_Macro_Item_Count({line_index:t,column_index:_,row_index:e,segment_index:n}){return this.Macro_Segment_Counts({line_index:t,column_index:_,row_index:e,segment_index:n})[AVG_ITEM_COUNT]}Update_Buffer_Counts(t){const _=this.buffer_counts,e=t.Buffer_Counts();for(_[MAX_LINE_COUNT]<e[MAX_LINE_COUNT]&&(_[MAX_LINE_COUNT]=e[MAX_LINE_COUNT]),0,_[AVG_LINE_COUNT]+=e[AVG_LINE_COUNT],_[FILE_COUNT]+=e[FILE_COUNT];_[LINES].length<e[LINES].length;)_[LINES].push({[MAX_COLUMN_COUNT]:0,[AVG_COLUMN_COUNT]:0,[FILE_COUNT]:0,[COLUMNS]:[]});for(let t=0,n=e[LINES].length;t<n;t+=1){const n=_[LINES][t],u=e[LINES][t];for(0,n[MAX_COLUMN_COUNT]<u[MAX_COLUMN_COUNT]&&(n[MAX_COLUMN_COUNT]=u[MAX_COLUMN_COUNT]),0,n[AVG_COLUMN_COUNT]+=u[AVG_COLUMN_COUNT],n[FILE_COUNT]+=u[FILE_COUNT];n[COLUMNS].length<u[COLUMNS].length;)n[COLUMNS].push({[MAX_ROW_COUNT]:0,[AVG_ROW_COUNT]:0,[FILE_COUNT]:0,[MACRO_ROWS]:[],[MICRO_ROWS]:[]});for(let t=0,_=u[COLUMNS].length;t<_;t+=1){const _=n[COLUMNS][t],e=u[COLUMNS][t];for(0,_[MAX_ROW_COUNT]<e[MAX_ROW_COUNT]&&(_[MAX_ROW_COUNT]=e[MAX_ROW_COUNT]),0,_[AVG_ROW_COUNT]+=e[AVG_ROW_COUNT],_[FILE_COUNT]+=e[FILE_COUNT];_[MACRO_ROWS].length<e[MACRO_ROWS].length;)_[MACRO_ROWS].push({[MAX_SEGMENT_COUNT]:0,[AVG_SEGMENT_COUNT]:0,[FILE_COUNT]:0,[SEGMENTS]:[]});for(;_[MICRO_ROWS].length<e[MICRO_ROWS].length;)_[MICRO_ROWS].push({[MAX_SEGMENT_COUNT]:0,[AVG_SEGMENT_COUNT]:0,[FILE_COUNT]:0,[SEGMENTS]:[]});0;for(const[t,n]of[[_[MACRO_ROWS],e[MACRO_ROWS]],[_[MICRO_ROWS],e[MICRO_ROWS]]])for(let _=0,e=n.length;_<e;_+=1){const e=t[_],u=n[_];for(0,e[MAX_SEGMENT_COUNT]<u[MAX_SEGMENT_COUNT]&&(e[MAX_SEGMENT_COUNT]=u[MAX_SEGMENT_COUNT]),0,e[AVG_SEGMENT_COUNT]+=u[AVG_SEGMENT_COUNT],e[FILE_COUNT]+=u[FILE_COUNT];e[SEGMENTS].length<u[SEGMENTS].length;)e[SEGMENTS].push({[MAX_ITEM_COUNT]:0,[AVG_ITEM_COUNT]:0,[FILE_COUNT]:0});for(let t=0,_=u[SEGMENTS].length;t<_;t+=1){const _=e[SEGMENTS][t],n=u[SEGMENTS][t];0,_[MAX_ITEM_COUNT]<n[MAX_ITEM_COUNT]&&(_[MAX_ITEM_COUNT]=n[MAX_ITEM_COUNT]),0,_[AVG_ITEM_COUNT]+=n[AVG_ITEM_COUNT],_[FILE_COUNT]+=n[FILE_COUNT]}}}}}Calculate_Buffer_Averages(){this.buffer_counts[AVG_LINE_COUNT]=Math.round(this.buffer_counts[AVG_LINE_COUNT]/this.buffer_counts[FILE_COUNT]),this.buffer_counts[FILE_COUNT]=0;for(let t=0,_=this.buffer_counts[LINES].length;t<_;t+=1){const _=this.buffer_counts[LINES][t];_[AVG_COLUMN_COUNT]=Math.round(_[AVG_COLUMN_COUNT]/_[FILE_COUNT]),_[FILE_COUNT]=0;for(let t=0,e=_[COLUMNS].length;t<e;t+=1){const e=_[COLUMNS][t];e[AVG_ROW_COUNT]=Math.round(e[AVG_ROW_COUNT]/e[FILE_COUNT]),e[FILE_COUNT]=0;for(let t=0,_=e[MACRO_ROWS].length;t<_;t+=1){const _=e[MACRO_ROWS][t];_[AVG_SEGMENT_COUNT]=Math.round(_[AVG_SEGMENT_COUNT]/_[FILE_COUNT]),_[FILE_COUNT]=0;for(let t=0,e=_[SEGMENTS].length;t<e;t+=1){const e=_[SEGMENTS][t];e[AVG_ITEM_COUNT]=Math.round(e[AVG_ITEM_COUNT]/e[FILE_COUNT]),e[FILE_COUNT]=0}}for(let t=0,_=e[MICRO_ROWS].length;t<_;t+=1){const _=e[MICRO_ROWS][t];_[AVG_SEGMENT_COUNT]=Math.round(_[AVG_SEGMENT_COUNT]/_[FILE_COUNT]),_[FILE_COUNT]=0;for(let t=0,e=_[SEGMENTS].length;t<e;t+=1){const e=_[SEGMENTS][t];e[AVG_ITEM_COUNT]=Math.round(e[AVG_ITEM_COUNT]/e[FILE_COUNT]),e[FILE_COUNT]=0}}}}}}