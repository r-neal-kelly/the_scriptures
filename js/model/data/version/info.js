import*as Utils from"../../../utils.js";import*as Name_Sorter from"../../name_sorter.js";import{FULL_FILE_COUNT as FILE_COUNT,FULL_AVG_LINE_COUNT as AVG_LINE_COUNT,FULL_AVG_COLUMN_COUNT as AVG_COLUMN_COUNT,FULL_AVG_ROW_COUNT as AVG_ROW_COUNT,FULL_AVG_SEGMENT_COUNT as AVG_SEGMENT_COUNT,FULL_AVG_ITEM_COUNT as AVG_ITEM_COUNT,FULL_LINES as LINES,FULL_COLUMNS as COLUMNS,FULL_MACRO_ROWS as MACRO_ROWS,FULL_MICRO_ROWS as MICRO_ROWS,FULL_SEGMENTS as SEGMENTS}from"../buffer_counts.js";export class Info{constructor({json:t=null}){if(t){const e=JSON.parse(t);this.unique_language_names=e.unique_language_names,this.total_unit_count=e.total_unit_count,this.total_point_count=e.total_point_count,this.total_letter_count=e.total_letter_count,this.total_marker_count=e.total_marker_count,this.total_meta_letter_count=e.total_meta_letter_count,this.total_word_count=e.total_word_count,this.total_break_count=e.total_break_count,this.total_meta_word_count=e.total_meta_word_count,this.total_part_count=e.total_part_count,this.total_line_count=e.total_line_count,this.total_file_count=e.total_file_count,this.language_unit_counts=e.language_unit_counts,this.language_point_counts=e.language_point_counts,this.language_letter_counts=e.language_letter_counts,this.language_marker_counts=e.language_marker_counts,this.language_meta_letter_counts=e.language_meta_letter_counts,this.language_word_counts=e.language_word_counts,this.language_break_counts=e.language_break_counts,this.language_meta_word_counts=e.language_meta_word_counts,this.language_part_counts=e.language_part_counts,this.language_line_counts=e.language_line_counts,this.language_file_counts=e.language_file_counts,this.buffer_counts=e.buffer_counts,this.Freeze()}else this.unique_language_names=[],this.total_unit_count=0,this.total_point_count=0,this.total_letter_count=0,this.total_marker_count=0,this.total_meta_letter_count=0,this.total_word_count=0,this.total_break_count=0,this.total_meta_word_count=0,this.total_part_count=0,this.total_line_count=0,this.total_file_count=0,this.language_unit_counts={},this.language_point_counts={},this.language_letter_counts={},this.language_marker_counts={},this.language_meta_letter_counts={},this.language_word_counts={},this.language_break_counts={},this.language_meta_word_counts={},this.language_part_counts={},this.language_line_counts={},this.language_file_counts={},this.buffer_counts={[FILE_COUNT]:0,[AVG_LINE_COUNT]:0,[LINES]:[]}}Is_Finalized(){return this.Is_Frozen()}Finalize(){0,this.Freeze()}Is_Frozen(){return Object.isFrozen(this)}Freeze(){0;const t=Name_Sorter.Singleton();this.unique_language_names=t.With_Array(Name_Sorter.Type.LANGUAGES,this.unique_language_names),Object.freeze(this.unique_language_names),Object.freeze(this.language_unit_counts),Object.freeze(this.language_point_counts),Object.freeze(this.language_letter_counts),Object.freeze(this.language_marker_counts),Object.freeze(this.language_meta_letter_counts),Object.freeze(this.language_word_counts),Object.freeze(this.language_break_counts),Object.freeze(this.language_meta_word_counts),Object.freeze(this.language_part_counts),Object.freeze(this.language_line_counts),Object.freeze(this.language_file_counts),Object.freeze(this.buffer_counts),Object.freeze(this.buffer_counts[LINES]);for(let t=0,e=this.buffer_counts[LINES].length;t<e;t+=1){const e=this.buffer_counts[LINES][t];Object.freeze(e),Object.freeze(e[COLUMNS]);for(let t=0,_=e[COLUMNS].length;t<_;t+=1){const _=e[COLUMNS][t];Object.freeze(_),Object.freeze(_[MACRO_ROWS]),Object.freeze(_[MICRO_ROWS]);for(let t=0,e=_[MACRO_ROWS].length;t<e;t+=1){const e=_[MACRO_ROWS][t];Object.freeze(e),Object.freeze(e[SEGMENTS]);for(let t=0,_=e[SEGMENTS].length;t<_;t+=1){const _=e[SEGMENTS][t];Object.freeze(_)}}for(let t=0,e=_[MICRO_ROWS].length;t<e;t+=1){const e=_[MICRO_ROWS][t];Object.freeze(e),Object.freeze(e[SEGMENTS]);for(let t=0,_=e[SEGMENTS].length;t<_;t+=1){const _=e[SEGMENTS][t];Object.freeze(_)}}}}Object.freeze(this),0,0}JSON_String(){return 0,JSON.stringify(this)}Unique_Language_Names(){return Array.from(this.unique_language_names)}Unique_Language_Name_Count(){return this.unique_language_names.length}Unique_Language_Name_Count_String(){return Utils.Add_Commas_To_Number(this.Unique_Language_Name_Count())}Has_Unique_Language_Name(t){return null!=this.language_unit_counts[t]}Add_Unique_Language_Name(t){0,this.Has_Unique_Language_Name(t)||(this.unique_language_names.push(t),this.language_unit_counts[t]=0,this.language_point_counts[t]=0,this.language_letter_counts[t]=0,this.language_marker_counts[t]=0,this.language_meta_letter_counts[t]=0,this.language_word_counts[t]=0,this.language_break_counts[t]=0,this.language_meta_word_counts[t]=0,this.language_part_counts[t]=0,this.language_line_counts[t]=0,this.language_file_counts[t]=0)}Total_Unit_Count(){return this.total_unit_count}Total_Unit_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Unit_Count())}Language_Unit_Count(t){return 0,this.language_unit_counts[t]}Language_Unit_Percent(t){return Math.round(100*this.Language_Unit_Count(t)/this.Total_Unit_Count())}Language_Unit_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Unit_Count(e)]);return t}Language_Unit_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Unit_Count(e),this.Language_Unit_Percent(e)]);return t}Increment_Unit_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_unit_count+=e,this.language_unit_counts[t]+=e}Increment_Unit_Counts(t){for(const[e,_]of t)this.Increment_Unit_Count(e,_)}Total_Point_Count(){return this.total_point_count}Total_Point_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Point_Count())}Language_Point_Count(t){return 0,this.language_point_counts[t]}Language_Point_Percent(t){return Math.round(100*this.Language_Point_Count(t)/this.Total_Point_Count())}Language_Point_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Point_Count(e)]);return t}Language_Point_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Point_Count(e),this.Language_Point_Percent(e)]);return t}Increment_Point_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_point_count+=e,this.language_point_counts[t]+=e}Increment_Point_Counts(t){for(const[e,_]of t)this.Increment_Point_Count(e,_)}Total_Letter_Count(){return this.total_letter_count}Total_Letter_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Letter_Count())}Total_Letter_Percent(){return Math.round(100*this.Total_Letter_Count()/this.Total_Point_Count())}Language_Letter_Count(t){return 0,this.language_letter_counts[t]}Language_Letter_Percent(t){return Math.round(100*this.Language_Letter_Count(t)/this.Total_Letter_Count())}Language_Letter_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Letter_Count(e)]);return t}Language_Letter_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Letter_Count(e),this.Language_Letter_Percent(e)]);return t}Increment_Letter_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_letter_count+=e,this.language_letter_counts[t]+=e}Increment_Letter_Counts(t){for(const[e,_]of t)this.Increment_Letter_Count(e,_)}Total_Marker_Count(){return this.total_marker_count}Total_Marker_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Marker_Count())}Total_Marker_Percent(){return Math.round(100*this.Total_Marker_Count()/this.Total_Point_Count())}Language_Marker_Count(t){return 0,this.language_marker_counts[t]}Language_Marker_Percent(t){return Math.round(100*this.Language_Marker_Count(t)/this.Total_Marker_Count())}Language_Marker_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Marker_Count(e)]);return t}Language_Marker_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Marker_Count(e),this.Language_Marker_Percent(e)]);return t}Increment_Marker_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_marker_count+=e,this.language_marker_counts[t]+=e}Increment_Marker_Counts(t){for(const[e,_]of t)this.Increment_Marker_Count(e,_)}Total_Meta_Letter_Count(){return this.total_meta_letter_count}Total_Meta_Letter_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Meta_Letter_Count())}Total_Meta_Letter_Percent(){return Math.round(100*this.Total_Meta_Letter_Count()/this.Total_Point_Count())}Language_Meta_Letter_Count(t){return 0,this.language_meta_letter_counts[t]}Language_Meta_Letter_Percent(t){return Math.round(100*this.Language_Meta_Letter_Count(t)/this.Total_Meta_Letter_Count())}Language_Meta_Letter_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Meta_Letter_Count(e)]);return t}Language_Meta_Letter_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Meta_Letter_Count(e),this.Language_Meta_Letter_Percent(e)]);return t}Increment_Meta_Letter_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_meta_letter_count+=e,this.language_meta_letter_counts[t]+=e}Increment_Meta_Letter_Counts(t){for(const[e,_]of t)this.Increment_Meta_Letter_Count(e,_)}Total_Word_Count(){return this.total_word_count}Total_Word_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Word_Count())}Total_Word_Percent(){return Math.round(100*this.Total_Word_Count()/this.Total_Part_Count())}Language_Word_Count(t){return 0,this.language_word_counts[t]}Language_Word_Percent(t){return Math.round(100*this.Language_Word_Count(t)/this.Total_Word_Count())}Language_Word_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Word_Count(e)]);return t}Language_Word_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Word_Count(e),this.Language_Word_Percent(e)]);return t}Increment_Word_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_word_count+=e,this.language_word_counts[t]+=e}Increment_Word_Counts(t){for(const[e,_]of t)this.Increment_Word_Count(e,_)}Total_Break_Count(){return this.total_break_count}Total_Break_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Break_Count())}Total_Break_Percent(){return Math.round(100*this.Total_Break_Count()/this.Total_Part_Count())}Language_Break_Count(t){return 0,this.language_break_counts[t]}Language_Break_Percent(t){return Math.round(100*this.Language_Break_Count(t)/this.Total_Break_Count())}Language_Break_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Break_Count(e)]);return t}Language_Break_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Break_Count(e),this.Language_Break_Percent(e)]);return t}Increment_Break_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_break_count+=e,this.language_break_counts[t]+=e}Increment_Break_Counts(t){for(const[e,_]of t)this.Increment_Break_Count(e,_)}Total_Meta_Word_Count(){return this.total_meta_word_count}Total_Meta_Word_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Meta_Word_Count())}Total_Meta_Word_Percent(){return Math.round(100*this.Total_Meta_Word_Count()/this.Total_Part_Count())}Language_Meta_Word_Count(t){return 0,this.language_meta_word_counts[t]}Language_Meta_Word_Percent(t){return Math.round(100*this.Language_Meta_Word_Count(t)/this.Total_Meta_Word_Count())}Language_Meta_Word_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Meta_Word_Count(e)]);return t}Language_Meta_Word_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Meta_Word_Count(e),this.Language_Meta_Word_Percent(e)]);return t}Increment_Meta_Word_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_meta_word_count+=e,this.language_meta_word_counts[t]+=e}Increment_Meta_Word_Counts(t){for(const[e,_]of t)this.Increment_Meta_Word_Count(e,_)}Total_Part_Count(){return this.total_part_count}Total_Part_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Part_Count())}Language_Part_Count(t){return 0,this.language_part_counts[t]}Language_Part_Percent(t){return Math.round(100*this.Language_Part_Count(t)/this.Total_Part_Count())}Language_Part_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Part_Count(e)]);return t}Language_Part_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Part_Count(e),this.Language_Part_Percent(e)]);return t}Increment_Part_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_part_count+=e,this.language_part_counts[t]+=e}Increment_Part_Counts(t){for(const[e,_]of t)this.Increment_Part_Count(e,_)}Total_Line_Count(){return this.total_line_count}Total_Line_Count_String(){return Utils.Add_Commas_To_Number(this.Total_Line_Count())}Language_Line_Count(t){return 0,this.language_line_counts[t]}Language_Line_Percent(t){return Math.round(100*this.Language_Line_Count(t)/this.Total_Line_Count())}Language_Line_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Line_Count(e)]);return t}Language_Line_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_Line_Count(e),this.Language_Line_Percent(e)]);return t}Increment_Line_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_line_count+=e,this.language_line_counts[t]+=e}Increment_Line_Counts(t){for(const[e,_]of t)this.Increment_Line_Count(e,_)}Total_File_Count(){return this.total_file_count}Total_File_Count_String(){return Utils.Add_Commas_To_Number(this.Total_File_Count())}Language_File_Count(t){return 0,this.language_file_counts[t]}Language_File_Percent(t){return Math.round(100*this.Language_File_Count(t)/this.Total_File_Count())}Language_File_Counts(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_File_Count(e)]);return t}Language_File_Counts_And_Percents(){const t=[];for(const e of this.unique_language_names)t.push([e,this.Language_File_Count(e),this.Language_File_Percent(e)]);return t}Increment_File_Count(t,e){this.Has_Unique_Language_Name(t)||this.Add_Unique_Language_Name(t),0,0,this.total_file_count+=e,this.language_file_counts[t]+=e}Increment_File_Counts(t){for(const[e,_]of t)this.Increment_File_Count(e,_)}Buffer_Counts(){return 0,this.buffer_counts}Update_Buffer_Counts(t){const e=t,_=this.buffer_counts,n=e.Line_Count();for(0,0,_[FILE_COUNT]+=1,_[AVG_LINE_COUNT]+=n;_[LINES].length<n;)_[LINES].push({[FILE_COUNT]:0,[AVG_COLUMN_COUNT]:0,[COLUMNS]:[]});for(let t=0,a=n;t<a;t+=1){const n=e.Line(t),a=_[LINES][t],u=n.Column_Count();for(0,0,0,a[FILE_COUNT]+=1,a[AVG_COLUMN_COUNT]+=u;a[COLUMNS].length<u;)a[COLUMNS].push({[FILE_COUNT]:0,[AVG_ROW_COUNT]:0,[MACRO_ROWS]:[],[MICRO_ROWS]:[]});for(let t=0,e=u;t<e;t+=1){const e=n.Column(t),_=a[COLUMNS][t],u=e.Row_Count();for(0,0,0,_[FILE_COUNT]+=1,_[AVG_ROW_COUNT]+=u;_[MACRO_ROWS].length<u;)_[MACRO_ROWS].push({[FILE_COUNT]:0,[AVG_SEGMENT_COUNT]:0,[SEGMENTS]:[]});for(;_[MICRO_ROWS].length<u;)_[MICRO_ROWS].push({[FILE_COUNT]:0,[AVG_SEGMENT_COUNT]:0,[SEGMENTS]:[]});for(let t=0,n=u;t<n;t+=1){const n=e.Row(t),a=_[MACRO_ROWS][t],u=n.Macro_Segment_Count();for(0,0,0,a[FILE_COUNT]+=1,a[AVG_SEGMENT_COUNT]+=u;a[SEGMENTS].length<u;)a[SEGMENTS].push({[FILE_COUNT]:0,[AVG_ITEM_COUNT]:0});for(let t=0,e=u;t<e;t+=1){const e=n.Macro_Segment(t),_=a[SEGMENTS][t],u=e.Item_Count();0,0,0,_[FILE_COUNT]+=1,_[AVG_ITEM_COUNT]+=u}const s=_[MICRO_ROWS][t],o=n.Micro_Segment_Count();for(0,0,0,s[FILE_COUNT]+=1,s[AVG_SEGMENT_COUNT]+=o;s[SEGMENTS].length<o;)s[SEGMENTS].push({[FILE_COUNT]:0,[AVG_ITEM_COUNT]:0});for(let t=0,e=o;t<e;t+=1){const e=n.Micro_Segment(t),_=s[SEGMENTS][t],a=e.Item_Count();0,0,0,_[FILE_COUNT]+=1,_[AVG_ITEM_COUNT]+=a}}}}}}