var __awaiter=this&&this.__awaiter||function(t,e,i,n){return new(i||(i=Promise))((function(s,a){function r(t){try{h(n.next(t))}catch(t){a(t)}}function l(t){try{h(n.throw(t))}catch(t){a(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,l)}h((n=n.apply(t,e||[])).next())}))};import*as Utils from"../../../utils.js";import*as Entity from"../../entity.js";import*as File from"../file.js";export class Instance extends Entity.Instance{constructor({language:t,branch:e}){super(),this.language=t,this.name=e.name,this.path=`${t.Path()}/${e.name}`,this.files=[];for(let t=0,i=e.files.length;t<i;t+=1)this.files.push(new File.Instance({version:this,title:e.files[t],index:t}));this.Add_Dependencies([])}Language(){return this.language}Name(){return this.name}Path(){return this.path}File(t){for(const e of this.files)if(e.Title()===t)return e;return 0,this.files[0]}File_Count(){return this.files.length}File_At(t){return 0,0,this.files[t]}Files(){return Array.from(this.files)}Cache_Files(){return __awaiter(this,void 0,void 0,(function*(){yield this.Language().Book().Data().Cache().Cache_Version_And_Files(this.Path(),this.files.map((function(t){return t.Name()})))}))}}