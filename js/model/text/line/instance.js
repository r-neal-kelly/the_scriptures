import*as Utils from"../../../utils.js";import*as Unicode from"../../../unicode.js";import*as Language from"../../language.js";import*as Dictionary from"../dictionary.js";import*as Part from"../part.js";import*as Path from"../path.js";var Parse_Type;!function(t){t[t.WORD=0]="WORD",t[t.BREAK=1]="BREAK",t[t.POINT=2]="POINT"}(Parse_Type||(Parse_Type={}));class Fix_Argument_Frame{constructor({parameter:t,argument:e,from_text:n,from_text_index:a}){this.first_non_command_index=Part.Command.First_Non_Command_Index(e),null!=this.first_non_command_index&&(this.first_non_command_index=a+Part.Command.Symbol.FIRST.length+t.length+Part.Command.Symbol.DIVIDER.length+this.first_non_command_index),this.last_non_command_index=Part.Command.Last_Non_Command_Index(e),null!=this.last_non_command_index&&(this.last_non_command_index=a+Part.Command.Symbol.FIRST.length+t.length+Part.Command.Symbol.DIVIDER.length+this.last_non_command_index),this.closing_command_index=Part.Command.Closing_Command_Index_From_Opening_Command(n)||-1,-1!==this.closing_command_index?this.closing_command_index=a+this.closing_command_index:this.closing_command_index=a+n.length}First_Non_Command_Index(){return this.first_non_command_index}Last_Non_Command_Index(){return this.last_non_command_index}Closing_Command_Index(){return this.closing_command_index}}export class Instance{constructor({text:t,index:e,value:n}){this.text=t,this.index=e,this.paths={},this.has_errorless_path=!1,this.Set_Value(n)}Text(){return this.text}Index(){return this.index}Path(){let t=this.Text().Path_Type();return this.paths.hasOwnProperty(t)||(t=Path.Type.DEFAULT),0,this.paths[t]}Value(){return this.Path().Value()}Set_Value(t){0,this.paths={},this.has_errorless_path=!1,this.Set_Path(Path.Type.DEFAULT,t),this.has_errorless_path&&this.Set_Path(Path.Type.ERRORLESS,Part.Command.Resolve_Errors(t,!1))}Set_Path(t,e){const n=new Path.Instance({line:this,type:t,value:e});if(""===e)n.Update_Empty();else{const a=this.Text().Dictionary(),s=Part.Command.Partition_Into_Row_Values(e);for(const r of s){const _=Part.Command.First_Non_Command_Index(r),o=Part.Command.Last_Non_Command_Index(r),i=[],l=[],m=[];let u=Parse_Type.POINT,d=Part.Style._NONE_,h=!1,I=new Unicode.Iterator({text:r});function P(){return i.length>0?i[i.length-1]:null}function p(){return l.length>0?l[l.length-1]:null}function g(t,e){if(m.length>0){const n=m[m.length-1];return t.Index()===n.First_Non_Command_Index()&&(null==_||e.Index()<_)?Dictionary.Boundary.START:e.Index()===n.Last_Non_Command_Index()&&(null==o||n.Closing_Command_Index()>o)?Dictionary.Boundary.END:Dictionary.Boundary.MIDDLE}return t.Index()===_?Dictionary.Boundary.START:e.Index()===o?Dictionary.Boundary.END:Dictionary.Boundary.MIDDLE}for(let C=I;!C.Is_At_End();){const x=Part.Command.Maybe_Valid_Value_From(C.Points());if(null!=x){let c=x,S=P(),y=p(),R=new Part.Command.Instance({index:0,value:c,size:null,language:null,is_argument:!1});R.Is_Open_Italic()?d|=Part.Style.ITALIC:R.Is_Close_Italic()?d&=~Part.Style.ITALIC:R.Is_Open_Bold()?d|=Part.Style.BOLD:R.Is_Close_Bold()?d&=~Part.Style.BOLD:R.Is_Open_Underline()?d|=Part.Style.UNDERLINE:R.Is_Close_Underline()?d&=~Part.Style.UNDERLINE:R.Is_Open_Small_Caps()?d|=Part.Style.SMALL_CAPS:R.Is_Close_Small_Caps()?d&=~Part.Style.SMALL_CAPS:R.Is_Open_Superscript()?d|=Part.Style.SUPERSCRIPT:R.Is_Close_Superscript()?d&=~Part.Style.SUPERSCRIPT:R.Is_Open_Subscript()?d|=Part.Style.SUBSCRIPT:R.Is_Close_Subscript()?d&=~Part.Style.SUBSCRIPT:R.Is_Open_Good()?h=!0:R.Is_Close_Good()?h=!1:R.Is_Open_Fix()?(this.has_errorless_path=!0,R.Has_Argument()?(c=Part.Command.Symbol.FIRST+R.Some_Parameter()+Part.Command.Symbol.DIVIDER,m.push(new Fix_Argument_Frame({parameter:R.Some_Parameter(),argument:R.Some_Argument(),from_text:C.Points(),from_text_index:C.Index()})),d|=Part.Style.ARGUMENT):d|=Part.Style.ERROR):R.Is_Close_Fix()?d&=~Part.Style.ERROR:R.Is_Open_Size()?(i.push(R.Size_Argument()),S=P()):R.Is_Close_Size()?i.length>0&&i.pop():R.Is_Open_Hebrew()?l.push(Language.Name.HEBREW):R.Is_Open_Greek()?l.push(Language.Name.GREEK):R.Is_Open_Latin()?l.push(Language.Name.LATIN):R.Is_Open_Aramaic()?l.push(Language.Name.ARAMAIC):R.Is_Open_Geez()?l.push(Language.Name.GEEZ):R.Is_Open_Arabic()?l.push(Language.Name.ARABIC):R.Is_Open_German()?l.push(Language.Name.GERMAN):R.Is_Open_French()?l.push(Language.Name.FRENCH):R.Is_Open_Italian()?l.push(Language.Name.ITALIAN):R.Is_Open_Dutch()?l.push(Language.Name.DUTCH):R.Is_Open_English()?l.push(Language.Name.ENGLISH):R.Is_Close_Language()&&(l.length>0&&l.pop(),y=p()),n.Update_Command(r,{value:c,size:S,language:y,is_argument:0!=(d&Part.Style.ARGUMENT)}),C=new Unicode.Iterator({text:C.Text(),index:C.Index()+c.length}),I=C}else if(m.length>0&&C.Point()===Part.Command.Symbol.LAST)m.pop(),0===m.length&&(d&=~Part.Style.ARGUMENT),d|=Part.Style.ERROR,n.Update_Command(r,{value:Part.Command.Symbol.LAST,size:P(),language:p(),is_argument:!1}),C=C.Next(),I=C;else{const T=P(),N=p(),O=C.Point(),L=C.Look_Forward_Point(),E=Part.Command.Maybe_Valid_Value_From(C.Look_Forward_Points()||"");if(a.Has_Letter(O,N)?(n.Update_Letter(r,{value:O,style:d,size:T,language:N}),u=Parse_Type.WORD):a.Has_Marker(O,N)?(n.Update_Marker(r,{value:O,style:d,size:T,language:N}),u=Parse_Type.BREAK):(n.Update_Point(r,{value:O,style:d,size:T,language:N}),u=Parse_Type.POINT,I=C.Next()),u===Parse_Type.WORD){if(null==L||null!=E||!a.Has_Letter(L,N)){const A=C.Text().slice(I.Index(),C.Look_Forward_Index()),f=h||a.Has_Word(A,N)?Part.Status.GOOD:a.Has_Word_Error(A,N)?Part.Status.ERROR:Part.Status.UNKNOWN;n.Update_Word(r,{value:A,status:f,style:d,size:T,language:N}),I=C.Next()}}else if(u===Parse_Type.BREAK&&(null==L||null!=E||!a.Has_Marker(L,N))){const D=C.Text().slice(I.Index(),C.Look_Forward_Index()),U=g(I,C),F=h||a.Has_Break(D,U,N)?Part.Status.GOOD:a.Has_Break_Error(D,U,N)?Part.Status.ERROR:Part.Status.UNKNOWN;n.Update_Break(r,{value:D,status:F,style:d,size:T,language:N,boundary:U}),I=C.Next()}C=C.Next()}}}}n.Finalize(),this.paths[t]=n}Has_Column_Index(t){return 0,this.Path().Has_Column_Index(t)}Column_Count(){return this.Path().Column_Count()}Column(t){return 0,this.Path().Column(t)}Column_Percents(){return 0,this.Text().Line_Column_Percents(this.Index())}Tabular_Column_Count(){return this.Path().Tabular_Column_Count()}Marginal_Column_Count(){return this.Path().Marginal_Column_Count()}Interlinear_Column_Count(){return this.Path().Interlinear_Column_Count()}Has_Margin(){return this.Path().Has_Margin()}Has_Interlineation(){return this.Path().Has_Interlineation()}Has_Forward_Interlineation(){return this.Path().Has_Forward_Interlineation()}Has_Reverse_Interlineation(){return this.Path().Has_Reverse_Interlineation()}Is_Row_Of_Table(){return!this.Has_Margin()&&!this.Has_Interlineation()&&this.Column_Count()>1}Is_First_Row_Of_Table(){return this.Is_Row_Of_Table()&&(0===this.Index()||!this.Text().Line(this.Index()-1).Is_Row_Of_Table())}Is_Centered(){return this.Path().Is_Centered()}Is_Padded(){return this.Path().Is_Padded()}Padding_Count(){return this.Path().Padding_Count()}Is_Blank(){return this.Path().Is_Blank()}}