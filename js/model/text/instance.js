import*as Utils from"../../utils.js";import*as Dictionary from"./dictionary.js";import*as Line from"./line.js";import*as Path from"./path.js";export class Instance{constructor({dictionary:t,value:e,path_type:n=Path.Type.DEFAULT}={dictionary:new Dictionary.Instance({json:null}),value:""}){this.dictionary=t,this.value=e,this.lines=[],this.path_type=n,this.has_evaluated_tables=!1,this.table_caches=[],this.working_table_cache=null;const s=e.split(/\r?\n/g);for(let t=0,e=s.length;t<e;t+=1)this.lines.push(new Line.Instance({text:this,index:t,value:s[t]}))}Dictionary(){return this.dictionary}Value(){return this.value}Line_Count(){return this.lines.length}Has_Line(t){return this.lines.indexOf(t)>-1}Has_Line_Index(t){return t>-1&&t<this.Line_Count()}Line(t){return 0,this.lines[t]}Line_Column_Percents(t){this.has_evaluated_tables||this.Evaluate_Tables();for(let e=0,n=this.table_caches.length;e<n;e+=1){const n=this.table_caches[e];if(t>=n.first_line_index&&t<=n.last_line_index)return n.column_percents}return 0,[]}Path_Type(){return this.path_type}Set_Path_Type(t){this.path_type=t}Evaluate_Tables(){function t(t){0;const e=this.working_table_cache,n={first_line_index:e.first_line_index,last_line_index:t,column_percents:[]};let s=0;for(let t=0,n=e.max_column_lengths.length;t<n;t+=1)s+=e.max_column_lengths[t];for(let t=0,l=e.max_column_lengths.length;t<l;t+=1)n.column_percents.push(100*e.max_column_lengths[t]/s);Object.freeze(n.column_percents),Object.freeze(n),this.table_caches.push(n),this.working_table_cache=null}this.has_evaluated_tables=!1,this.table_caches=[],this.working_table_cache=null;for(let e=0,n=this.Line_Count();e<n;e+=1){const n=this.Line(e);if(n.Is_First_Row_Of_Table()){0,this.working_table_cache={first_line_index:e,max_column_lengths:[]};for(let t=0,e=n.Column_Count();t<e;t+=1){n.Column(t);this.working_table_cache.max_column_lengths.push(0)}}if(n.Is_Row_Of_Table()){0;const s=this.working_table_cache;for(let t=0,e=n.Column_Count();t<e;t+=1){const e=n.Column(t);for(let n=0,l=e.Row_Count();n<l;n+=1){const l=e.Row(n).Value();s.max_column_lengths[t]<l.length&&(s.max_column_lengths[t]=l.length)}}n.Text().Line_Count()-1===e&&t.bind(this)(e)}else null!=this.working_table_cache&&t.bind(this)(e)}this.has_evaluated_tables=!0}}