import*as Utils from"../../../utils.js";import*as Part from"../part.js";import*as Column from"../column.js";export class Instance{constructor({type:e,value:s}){this.type=e,this.value=s,this.columns=[],this.tabular_column_count=0,this.marginal_column_count=0,this.interlinear_column_count=0,this.has_reverse_interlinear_column=!1}Update_Empty(){0,0,this.Push_Column(Column.Type.TABULAR),this.columns[this.columns.length-1].Update_Empty()}Update_Point(e,{value:s,style:t,language:n}){0;const i=new Part.Point.Instance({index:0,value:s,style:t,language:n}),l=new Part.Point.Instance({index:0,value:s,style:t,language:n});this.columns.length<1&&this.Push_Column(Column.Type.TABULAR),this.columns[this.columns.length-1].Update_Point(e,i,l)}Update_Letter(e,{value:s,style:t,language:n}){0;const i=new Part.Letter.Instance({index:0,value:s,style:t,language:n});this.columns.length<1&&this.Push_Column(Column.Type.TABULAR),this.columns[this.columns.length-1].Update_Letter(e,i)}Update_Marker(e,{value:s,style:t,language:n}){0;const i=new Part.Marker.Instance({index:0,value:s,style:t,language:n});this.columns.length<1&&this.Push_Column(Column.Type.TABULAR),this.columns[this.columns.length-1].Update_Marker(e,i)}Update_Word(e,{value:s,status:t,style:n,language:i}){0;const l=new Part.Word.Instance({index:0,value:s,status:t,style:n,language:i});this.columns.length<1&&this.Push_Column(Column.Type.TABULAR),this.columns[this.columns.length-1].Update_Word(e,l)}Update_Break(e,{value:s,status:t,style:n,language:i,boundary:l}){0;const a=new Part.Break.Instance({index:0,value:s,status:t,style:n,language:i,boundary:l});this.columns.length<1&&this.Push_Column(Column.Type.TABULAR),this.columns[this.columns.length-1].Update_Break(e,a)}Update_Command(e,{value:s,language:t}){0;const n=new Part.Command.Instance({index:0,value:s,language:t}),i=new Part.Command.Instance({index:0,value:s,language:t});this.columns.length<1||i.Is_Column()?this.Push_Column(Column.Type.TABULAR):i.Is_Margin()?this.Push_Column(Column.Type.MARGINAL):i.Is_Forward_Interlinear()?this.Push_Column(Column.Type.INTERLINEAR):i.Is_Reverse_Interlinear()&&(this.Push_Column(Column.Type.INTERLINEAR),this.has_reverse_interlinear_column=!0),this.columns[this.columns.length-1].Update_Command(e,n,i)}Push_Column(e){e===Column.Type.INTERLINEAR?this.interlinear_column_count+=1:e===Column.Type.MARGINAL?this.marginal_column_count+=1:this.tabular_column_count+=1,this.columns.push(new Column.Instance({path:this,type:e,index:this.columns.length}))}Is_Finalized(){return Object.isFrozen(this.columns)}Finalize(){0,Object.freeze(this.columns);for(const e of this.columns)e.Finalize()}Type(){return 0,this.type}Value(){return 0,this.value}Has_Column_Index(e){return 0,0,e<this.Column_Count()}Column_Count(){return 0,this.columns.length}Column(e){return 0,0,this.columns[e]}Tabular_Column_Count(){return 0,this.tabular_column_count}Marginal_Column_Count(){return 0,this.marginal_column_count}Interlinear_Column_Count(){return 0,this.interlinear_column_count}Has_Margin(){return 0,this.Marginal_Column_Count()>0}Has_Interlineation(){return 0,this.Interlinear_Column_Count()>0}Has_Forward_Interlineation(){return 0,this.Has_Interlineation()&&!this.has_reverse_interlinear_column}Has_Reverse_Interlineation(){return 0,this.Has_Interlineation()&&this.has_reverse_interlinear_column}Is_Centered(){return this.Has_Interlineation()&&this.Column_Count()>0&&this.Column(0).Row_Count()>0&&this.Column(0).Row(0).Is_Centered()}}