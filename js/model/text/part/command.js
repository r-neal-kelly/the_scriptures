import*as Utils from"../../../utils.js";import*as Unicode from"../../../unicode.js";import*as Languages from"../../languages.js";import*as Part from"./instance.js";import{Type}from"./type.js";import{Status}from"./status.js";import{Style}from"./style.js";export var Symbol;var Parameter;!function(e){e.FIRST="⸨",e.LAST="⸩",e.CLOSE="/",e.DIVIDER=":"}(Symbol||(Symbol={})),function(e){e.ERROR="err",e.LANGUAGE="lang"}(Parameter||(Parameter={}));export var Known_Value;!function(e){e.CENTER="⸨cen⸩",e.INDENT="⸨in⸩",e.OPEN_ITALIC="⸨i⸩",e.CLOSE_ITALIC="⸨/i⸩",e.OPEN_BOLD="⸨b⸩",e.CLOSE_BOLD="⸨/b⸩",e.OPEN_UNDERLINE="⸨u⸩",e.CLOSE_UNDERLINE="⸨/u⸩",e.OPEN_SMALL_CAPS="⸨sc⸩",e.CLOSE_SMALL_CAPS="⸨/sc⸩",e.OPEN_ERROR="⸨err⸩",e.CLOSE_ERROR="⸨/err⸩",e.OPEN_LEFT_TO_RIGHT="⸨ltr⸩",e.CLOSE_LEFT_TO_RIGHT="⸨/ltr⸩",e.OPEN_RIGHT_TO_LEFT="⸨rtl⸩",e.CLOSE_RIGHT_TO_LEFT="⸨/rtl⸩",e.CLOSE_LANGUAGE="⸨/lang⸩"}(Known_Value||(Known_Value={}));export function Is_Valid_Value(e){return e.length>2&&"⸨"===e[0]&&"⸩"===e[e.length-1]}function Interior_Value(e){return e.replace(/^⸨\/?/,"").replace(/⸩$/,"")}function Interior_Parameter_And_Argument(e){const t=Interior_Value(e),n=t.indexOf(Symbol.DIVIDER);if(n>-1){const e=t.slice(0,n);if(e.length>0){return{parameter:e,argument:t.slice(n+Symbol.DIVIDER.length)}}return null}return null}export function Is_Known_Value(e){if(e===Known_Value.CENTER||e===Known_Value.INDENT||e===Known_Value.OPEN_ITALIC||e===Known_Value.CLOSE_ITALIC||e===Known_Value.OPEN_BOLD||e===Known_Value.CLOSE_BOLD||e===Known_Value.OPEN_UNDERLINE||e===Known_Value.CLOSE_UNDERLINE||e===Known_Value.OPEN_SMALL_CAPS||e===Known_Value.CLOSE_SMALL_CAPS||e===Known_Value.OPEN_ERROR||e===Known_Value.CLOSE_ERROR||e===Known_Value.OPEN_LEFT_TO_RIGHT||e===Known_Value.CLOSE_LEFT_TO_RIGHT||e===Known_Value.OPEN_RIGHT_TO_LEFT||e===Known_Value.CLOSE_RIGHT_TO_LEFT||e===Known_Value.CLOSE_LANGUAGE)return!0;{const t=Interior_Parameter_And_Argument(e);return null!=t&&(t.parameter===Parameter.LANGUAGE?t.argument===Languages.Name.ENGLISH||t.argument===Languages.Name.HEBREW||t.argument===Languages.Name.GREEK||t.argument===Languages.Name.LATIN:t.parameter===Parameter.ERROR)}}export function Maybe_Valid_Value_From(e){let t=new Unicode.Iterator({text:e});if(t.Is_At_End()||t.Point()!==Symbol.FIRST)return null;{let n=1;for(t=t.Next();!t.Is_At_End()&&n>0;t=t.Next()){const e=t.Point();e===Symbol.FIRST?n+=1:e===Symbol.LAST&&(n-=1)}return n<1?e.slice(0,t.Index()):null}}function Test_Maybe_Valid_Value_From(){Utils.Assert(null===Maybe_Valid_Value_From("")),Utils.Assert(null===Maybe_Valid_Value_From("⸩")),Utils.Assert("⸨⸩"===Maybe_Valid_Value_From("⸨⸩")),Utils.Assert(null===Maybe_Valid_Value_From("⸩⸨⸩")),Utils.Assert("⸨⸩"===Maybe_Valid_Value_From("⸨⸩⸨⸩")),Utils.Assert(null===Maybe_Valid_Value_From("⸩⸨⸩⸨⸩")),Utils.Assert(null===Maybe_Valid_Value_From("⸩⸩⸨⸩⸨⸩")),Utils.Assert("⸨⸩"===Maybe_Valid_Value_From("⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert("⸨⸨⸩⸩"===Maybe_Valid_Value_From("⸨⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(null===Maybe_Valid_Value_From("0⸨⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert("⸨anything ⸨can be⸩ in here⸩"===Maybe_Valid_Value_From("⸨anything ⸨can be⸩ in here⸩⸨⸩⸨⸩")),Utils.Assert(null===Maybe_Valid_Value_From("⸨anything ⸨can be⸩ in here⸨⸩⸨⸩"))}export function First_Non_Value_Index(e){let t=new Unicode.Iterator({text:e,index:0});if(t.Is_At_End())return null;for(;!t.Is_At_End()&&t.Point()===Symbol.FIRST;){let e=t,n=1;for(t=t.Next();!t.Is_At_End()&&n>0;t=t.Next()){const e=t.Point();e===Symbol.FIRST?n+=1:e===Symbol.LAST&&(n-=1)}if(n>0)return e.Index();if(t.Is_At_End())return null}return t.Index()}function Test_First_Non_Value_Index(){Utils.Assert(null===First_Non_Value_Index("")),Utils.Assert(0===First_Non_Value_Index("⸩")),Utils.Assert(null===First_Non_Value_Index("⸨⸩")),Utils.Assert(0===First_Non_Value_Index("⸩⸨⸩")),Utils.Assert(null===First_Non_Value_Index("⸨⸩⸨⸩")),Utils.Assert(0===First_Non_Value_Index("⸩⸨⸩⸨⸩")),Utils.Assert(0===First_Non_Value_Index("⸩⸩⸨⸩⸨⸩")),Utils.Assert(2===First_Non_Value_Index("⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(null===First_Non_Value_Index("⸨⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(0===First_Non_Value_Index("0⸨⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(6===First_Non_Value_Index("⸨⸨⸩⸩⸨⸩6⸨⸩")),Utils.Assert(29===First_Non_Value_Index("⸨anything ⸨can⸩ be in here⸩⸨⸩29⸨⸩"))}export function Last_Non_Value_Index(e){let t=new Unicode.Iterator({text:e,index:e.length});if(t.Is_At_Start())return null;for(t=t.Previous();!t.Is_At_Start()&&t.Point()===Symbol.LAST;){let e=t,n=1;do{t=t.Previous();const e=t.Point();e===Symbol.FIRST?n-=1:e===Symbol.LAST&&(n+=1)}while(!t.Is_At_Start()&&n>0);if(n>0)return e.Index();if(t.Is_At_Start())return null;t=t.Previous()}return t.Index()}function Test_Last_Non_Value_Index(){Utils.Assert(null===Last_Non_Value_Index("")),Utils.Assert(0===Last_Non_Value_Index("⸩")),Utils.Assert(null===Last_Non_Value_Index("⸨⸩")),Utils.Assert(0===Last_Non_Value_Index("⸩⸨⸩")),Utils.Assert(null===Last_Non_Value_Index("⸨⸩⸨⸩")),Utils.Assert(0===Last_Non_Value_Index("⸩⸨⸩⸨⸩")),Utils.Assert(1===Last_Non_Value_Index("⸩⸩⸨⸩⸨⸩")),Utils.Assert(2===Last_Non_Value_Index("⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(null===Last_Non_Value_Index("⸨⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(0===Last_Non_Value_Index("0⸨⸨⸩⸩⸨⸩⸨⸩")),Utils.Assert(7===Last_Non_Value_Index("0⸨⸨⸩⸩⸨⸩7⸨⸩")),Utils.Assert(7===Last_Non_Value_Index("0⸨⸨⸩⸩⸨⸩7⸨anything ⸨can be⸩ in here⸩"))}export class Instance extends Part.Instance{constructor({index:e,value:t}){super({part_type:Type.COMMAND,index:e,value:t,status:Is_Known_Value(t)?Status.GOOD:Is_Valid_Value(t)?Status.UNKNOWN:Status.ERROR,style:Style._NONE_,language:null});const n=Interior_Parameter_And_Argument(t);null!=n?(this.parameter=n.parameter,this.argument=n.argument):(this.parameter=null,this.argument=null)}Has_Parameter(){return null!=this.parameter}Parameter(){return this.parameter}Some_Parameter(){return Utils.Assert(this.Has_Parameter(),"doesn't have a parameter"),this.parameter}Has_Argument(){return null!=this.argument}Argument(){return this.argument}Some_Argument(){return Utils.Assert(this.Has_Argument(),"doesn't have an argument"),this.argument}Is_Center(){return this.Value()===Known_Value.CENTER}Is_Indent(){return this.Value()===Known_Value.INDENT}Is_Opening(){return this.Value().length>1&&"/"!==this.Value()[1]}Is_Closing(){return this.Value().length>1&&"/"===this.Value()[1]}Is_Open_Italic(){return this.Value()===Known_Value.OPEN_ITALIC}Is_Close_Italic(){return this.Value()===Known_Value.CLOSE_ITALIC}Is_Open_Bold(){return this.Value()===Known_Value.OPEN_BOLD}Is_Close_Bold(){return this.Value()===Known_Value.CLOSE_BOLD}Is_Open_Underline(){return this.Value()===Known_Value.OPEN_UNDERLINE}Is_Close_Underline(){return this.Value()===Known_Value.CLOSE_UNDERLINE}Is_Open_Small_Caps(){return this.Value()===Known_Value.OPEN_SMALL_CAPS}Is_Close_Small_Caps(){return this.Value()===Known_Value.CLOSE_SMALL_CAPS}Is_Open_Error(){return this.Value()===Known_Value.OPEN_ERROR||this.Parameter()===Parameter.ERROR}Is_Close_Error(){return this.Value()===Known_Value.CLOSE_ERROR}Is_Open_Left_To_Right(){return this.Value()===Known_Value.OPEN_LEFT_TO_RIGHT}Is_Close_Left_To_Right(){return this.Value()===Known_Value.CLOSE_LEFT_TO_RIGHT}Is_Open_Right_To_Left(){return this.Value()===Known_Value.OPEN_RIGHT_TO_LEFT}Is_Close_Right_To_Left(){return this.Value()===Known_Value.CLOSE_RIGHT_TO_LEFT}Is_Open_Language(){return this.Parameter()===Parameter.LANGUAGE}Is_Open_English(){return this.Parameter()===Parameter.LANGUAGE&&this.Argument()===Languages.Name.ENGLISH}Is_Open_Hebrew(){return this.Parameter()===Parameter.LANGUAGE&&this.Argument()===Languages.Name.HEBREW}Is_Open_Greek(){return this.Parameter()===Parameter.LANGUAGE&&this.Argument()===Languages.Name.GREEK}Is_Open_Latin(){return this.Parameter()===Parameter.LANGUAGE&&this.Argument()===Languages.Name.LATIN}Is_Close_Language(){return this.Value()===Known_Value.CLOSE_LANGUAGE}}