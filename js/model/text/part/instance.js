import*as Utils from"../../../utils.js";import*as Item from"../item.js";import{Type}from"./type.js";import{Status}from"./status.js";import{Style}from"./style.js";export class Instance extends Item.Instance{constructor({part_type:t,value:e,status:s,style:r}){if(super({item_type:Item.Type.PART}),Utils.Assert(e.length>0,"value must have a length greater than 0."),this.part_type=t,this.value=e,this.status=s,r instanceof Array){this.style=Style._NONE_;for(const t of r)this.style|=t}else this.style=r}Part_Type(){return this.part_type}Is_Point(){return this.part_type===Type.POINT}Is_Letter(){return this.part_type===Type.LETTER}Is_Marker(){return this.part_type===Type.MARKER}Is_Word(){return this.part_type===Type.WORD}Is_Break(){return this.part_type===Type.BREAK}Is_Command(){return this.part_type===Type.COMMAND}Value(){return this.value}Status(){return this.status}Is_Good(){return this.status===Status.GOOD}Is_Unknown(){return this.status===Status.UNKNOWN}Is_Error(){return this.status===Status.ERROR}Style(){return this.style}Has_Italic_Style(){return 0!=(this.style&Style.ITALIC)}Has_Bold_Style(){return 0!=(this.style&Style.BOLD)}Has_Underline_Style(){return 0!=(this.style&Style.UNDERLINE)}Has_Small_Caps_Style(){return 0!=(this.style&Style.SMALL_CAPS)}Has_Error_Style(){return 0!=(this.style&Style.ERROR)}}