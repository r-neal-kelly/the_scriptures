import*as Utils from"../../../utils.js";import*as Row from"../row.js";import{Type}from"./type.js";export class Instance{constructor({path:s,type:e,index:i}){this.path=s,this.type=e,this.index=i,this.rows=[],this.previous_part_is_column_like=!1}Update_Empty(){0,0,this.Push_Row("")}Update_Point(s,e,i){0,this.rows.length<1&&this.Push_Row(s),this.Working_Row().Update_Point(e,i),this.previous_part_is_column_like=!1}Update_Letter(s,e){0,this.rows.length<1&&this.Push_Row(s),this.Working_Row().Update_Letter(e),this.previous_part_is_column_like=!1}Update_Marker(s,e){0,this.rows.length<1&&this.Push_Row(s),this.Working_Row().Update_Marker(e),this.previous_part_is_column_like=!1}Update_Word(s,e){0,this.rows.length<1&&this.Push_Row(s),this.Working_Row().Update_Word(e),this.previous_part_is_column_like=!1}Update_Break(s,e){0,this.rows.length<1&&this.Push_Row(s),this.Working_Row().Update_Break(e),this.previous_part_is_column_like=!1}Update_Command(s,e,i){0,(this.rows.length<1||i.Is_Row()&&!this.previous_part_is_column_like)&&this.Push_Row(s),this.Working_Row().Update_Command(e,i),this.previous_part_is_column_like=i.Is_Column()||i.Is_Margin()||i.Is_Interlinear()}Push_Row(s){this.rows.push(new Row.Instance({column:this,index:this.rows.length,value:s}))}Working_Row(){return this.rows[this.rows.length-1]}Is_Finalized(){return Object.isFrozen(this.rows)}Finalize(){0,Object.freeze(this.rows);for(const s of this.rows)s.Finalize();this.previous_part_is_column_like=!1}Path(){return 0,this.path}Type(){return 0,this.type}Is_Tabular(){return 0,this.type===Type.TABULAR}Is_Marginal(){return 0,this.type===Type.MARGINAL}Is_Inter_Marginal(){return 0,this.Is_Tabular()&&this.Path().Marginal_Column_Count()>0}Is_Interlinear(){return 0,this.type===Type.INTERLINEAR}Is_Inter_Interlinear(){return 0,this.Is_Tabular()&&this.Path().Interlinear_Column_Count()>0}Is_Fully_Tabular(){return 0,this.Is_Tabular()&&0===this.Path().Marginal_Column_Count()&&0===this.Path().Interlinear_Column_Count()}Index(){return 0,this.index}Has_Row_Index(s){return 0,0,s<this.Row_Count()}Row_Count(){return 0,this.rows.length}Row(s){return 0,0,this.rows[s]}}