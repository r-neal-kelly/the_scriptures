import*as Utils from"../../utils.js";import*as Unicode from"../../unicode.js";import*as Languages from"../languages.js";import*as Dictionary from"./dictionary.js";import*as Part from"./part.js";import*as Split from"./split.js";import*as Segment from"./segment.js";export class Instance{constructor({text:e,index:t,value:n}){this.text=e,this.index=t,this.value="",this.micro_parts=[],this.macro_parts=[],this.micro_segments=[],this.macro_segments=[],this.micro_part_index_to_segment_item_indices={},this.macro_part_index_to_segment_item_indices={},this.is_centered=!1,this.is_indented=!1,this.Set_Value(n)}Text(){return this.text}Index(){return this.index}Value(){return this.value}Set_Value(e){let t;Utils.Assert(!/\r?\n/.test(e),"A line cannot have any line-breaks."),this.value=e,this.micro_parts=[],this.macro_parts=[],this.micro_segments=[],this.macro_segments=[],this.micro_part_index_to_segment_item_indices={},this.macro_part_index_to_segment_item_indices={},this.is_centered=this.value.slice(0,Part.Command.Known_Value.CENTER.length)===Part.Command.Known_Value.CENTER,this.is_indented=this.value.slice(0,Part.Command.Known_Value.INDENT.length)===Part.Command.Known_Value.INDENT,function(e){e[e.WORD=0]="WORD",e[e.BREAK=1]="BREAK",e[e.POINT=2]="POINT"}(t||(t={}));const n=this.Text().Dictionary();let s=Part.Style._NONE_,r=[],a=t.POINT,_=new Unicode.Iterator({text:this.value}),i=null;const o=Part.Command.Last_Non_Value_Index(this.value);let m=new Segment.Instance({segment_type:Segment.Type.MICRO,index:this.micro_segments.length}),l=new Segment.Instance({segment_type:Segment.Type.MACRO,index:this.macro_segments.length});const c=function(e){m.Try_Add_Item(e)||(this.micro_segments.push(m),m=new Segment.Instance({segment_type:Segment.Type.MICRO,index:this.micro_segments.length}),m.Add_Item(e));const t=e.Part_Index(),n={segment_index:m.Index(),item_index:m.Item_Count()-1};Object.freeze(n),null==this.micro_part_index_to_segment_item_indices[t]&&(this.micro_part_index_to_segment_item_indices[t]=[]),this.micro_part_index_to_segment_item_indices[t].push(n)}.bind(this),h=function(e){l.Try_Add_Item(e)||(this.macro_segments.push(l),l=new Segment.Instance({segment_type:Segment.Type.MACRO,index:this.macro_segments.length}),l.Add_Item(e));const t=e.Part_Index(),n={segment_index:l.Index(),item_index:l.Item_Count()-1};Object.freeze(n),null==this.macro_part_index_to_segment_item_indices[t]&&(this.macro_part_index_to_segment_item_indices[t]=[]),this.macro_part_index_to_segment_item_indices[t].push(n)}.bind(this),u=function(e){e.Value()===Part.Command.Known_Value.OPEN_LEFT_TO_RIGHT?(h(e),this.macro_segments.push(l),l=new Segment.Instance({segment_type:Segment.Type.MACRO_LEFT_TO_RIGHT,index:this.macro_segments.length})):e.Value()===Part.Command.Known_Value.OPEN_RIGHT_TO_LEFT?(h(e),this.macro_segments.push(l),l=new Segment.Instance({segment_type:Segment.Type.MACRO_RIGHT_TO_LEFT,index:this.macro_segments.length})):e.Value()===Part.Command.Known_Value.CLOSE_LEFT_TO_RIGHT||e.Value()===Part.Command.Known_Value.CLOSE_RIGHT_TO_LEFT?(this.macro_segments.push(l),l=new Segment.Instance({segment_type:Segment.Type.MACRO,index:this.macro_segments.length}),h(e)):h(e)}.bind(this);for(let e=_;!e.Is_At_End();){const m=Part.Command.Maybe_Valid_Value_From(e.Points());if(null!=m){const t=new Part.Command.Instance({index:this.micro_parts.length,value:m}),n=new Part.Command.Instance({index:this.macro_parts.length,value:m});n.Is_Open_Italic()?s|=Part.Style.ITALIC:n.Is_Close_Italic()?s&=~Part.Style.ITALIC:n.Is_Open_Bold()?s|=Part.Style.BOLD:n.Is_Close_Bold()?s&=~Part.Style.BOLD:n.Is_Open_Underline()?s|=Part.Style.UNDERLINE:n.Is_Close_Underline()?s&=~Part.Style.UNDERLINE:n.Is_Open_Small_Caps()?s|=Part.Style.SMALL_CAPS:n.Is_Close_Small_Caps()?s&=~Part.Style.SMALL_CAPS:n.Is_Open_Error()?s|=Part.Style.ERROR:n.Is_Close_Error()?s&=~Part.Style.ERROR:n.Is_Open_English()?r.push(Languages.Name.ENGLISH):n.Is_Open_Hebrew()?r.push(Languages.Name.HEBREW):n.Is_Open_Greek()?r.push(Languages.Name.GREEK):n.Is_Open_Latin()?r.push(Languages.Name.LATIN):n.Is_Close_Language()&&r.length>0&&r.pop(),this.micro_parts.push(t),this.macro_parts.push(n),c(t),u(n),e=new Unicode.Iterator({text:e.Text(),index:e.Index()+m.length}),_=e}else{const m=e.Point(),l=e.Look_Forward_Point(),u=Part.Command.Maybe_Valid_Value_From(e.Look_Forward_Points()||"");if(n.Has_Letter(m)){const e=new Part.Letter.Instance({index:this.micro_parts.length,value:m,style:s,language:r.length>0?r[r.length-1]:null});this.micro_parts.push(e),c(e),a=t.WORD}else if(n.Has_Marker(m)){const e=new Part.Marker.Instance({index:this.micro_parts.length,value:m,style:s,language:r.length>0?r[r.length-1]:null});this.micro_parts.push(e),c(e),a=t.BREAK}else{const n=new Part.Point.Instance({index:this.micro_parts.length,value:m,style:s,language:r.length>0?r[r.length-1]:null}),o=new Part.Point.Instance({index:this.macro_parts.length,value:m,style:s,language:r.length>0?r[r.length-1]:null});this.micro_parts.push(n),c(n),a=t.POINT,null==i&&(i=e.Index()),this.macro_parts.push(o),h(o),_=e.Next()}if(a===t.WORD){if(null==l||null!=u||!n.Has_Letter(l)){null==i&&(i=e.Index());const t=e.Text().slice(_.Index(),e.Look_Forward_Index()),a=n.Has_Word(t)?Part.Status.GOOD:n.Has_Word_Error(t)?Part.Status.ERROR:Part.Status.UNKNOWN,o=new Part.Word.Instance({index:this.macro_parts.length,value:t,status:a,style:s,language:r.length>0?r[r.length-1]:null});this.macro_parts.push(o),h(o),_=e.Next()}}else if(a===t.BREAK&&(null==l||null!=u||!n.Has_Marker(l))){null==i&&(i=e.Index());const t=e.Text().slice(_.Index(),e.Look_Forward_Index()),a=e.Index()===i?Dictionary.Boundary.START:e.Index()===o?Dictionary.Boundary.END:Dictionary.Boundary.MIDDLE,m=n.Has_Break(t,a)?Part.Status.GOOD:n.Has_Break_Error(t,a)?Part.Status.ERROR:Part.Status.UNKNOWN,l=new Part.Break.Instance({index:this.macro_parts.length,value:t,status:m,style:s,language:r.length>0?r[r.length-1]:null});this.macro_parts.push(l);const c=Split.From(l);for(const e of c)h(e);_=e.Next()}e=e.Next()}}m.Item_Count()>0&&this.micro_segments.push(m),l.Item_Count()>0&&this.macro_segments.push(l)}Has_Micro_Part(e){return Utils.Assert(e>-1,"micro_part_index must be greater than -1."),e<this.Micro_Part_Count()}Micro_Part_Count(){return this.micro_parts.length}Micro_Part(e){return Utils.Assert(this.Has_Micro_Part(e),`Does not have micro_part at index ${e}.`),this.micro_parts[e]}Has_Macro_Part(e){return Utils.Assert(e>-1,"macro_part_index must be greater than -1."),e<this.Macro_Part_Count()}Macro_Part_Count(){return this.macro_parts.length}Macro_Part(e){return Utils.Assert(this.Has_Macro_Part(e),`Does not have macro_part at index ${e}.`),this.macro_parts[e]}Micro_Segment_Count(){return this.micro_segments.length}Micro_Segment(e){return Utils.Assert(e>-1,"micro_segment_index must be greater than -1."),Utils.Assert(e<this.Micro_Segment_Count(),"micro_segment_index must be less than micro_segment_count."),this.micro_segments[e]}Macro_Segment_Count(){return this.macro_segments.length}Macro_Segment(e){return Utils.Assert(e>-1,"macro_segment_index must be greater than -1."),Utils.Assert(e<this.Macro_Segment_Count(),"macro_segment_index must be less than macro_segment_count."),this.macro_segments[e]}Micro_Part_Segment_Item_Indices(e){Utils.Assert(this.Has_Micro_Part(e),`Does not have micro_part at index ${e}.`);const t=this.micro_part_index_to_segment_item_indices[e];return Object.isFrozen(t)||Object.freeze(t),t}Macro_Part_Segment_Item_Indices(e){Utils.Assert(this.Has_Macro_Part(e),`Does not have macro_part at index ${e}.`);const t=this.macro_part_index_to_segment_item_indices[e];return Object.isFrozen(t)||Object.freeze(t),t}Is_Centered(){return this.is_centered}Is_Indented(){return this.is_indented}}