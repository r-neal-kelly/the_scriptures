import*as Utils from"../../utils.js";import*as Item from"./item.js";export function From(t){const e=[],n=t.Value().match(/\S+|\s/g);if(null!=n){let i=0;for(let r=0,s=n.length;r<s;r+=1)e.push(new Instance({break_:t,index:r,first_point_index:i,end_point_index:i+=n[r].length}))}return e}export class Instance{constructor({break_:t,index:e,first_point_index:n,end_point_index:i}){Utils.Assert(e>-1,"index must be greater than -1."),Utils.Assert(n>-1,"first_point_index must be greater than -1."),Utils.Assert(i>n,"end_point_index must be greater than first_point_index."),Utils.Assert(i<=t.Value().length,"end_point_index must be less than or equal to break_value_length."),this.break_=t,this.index=e,this.first_point_index=n,this.end_point_index=i,this.value=t.Value().slice(n,i)}Item_Type(){return Item.Type.SPLIT}Is_Part(){return!1}Is_Split(){return!0}Break(){return this.break_}Index(){return this.index}Part_Index(){return this.Break().Index()}First_Point_Index(){return this.first_point_index}End_Point_Index(){return this.end_point_index}Value(){return this.value}}