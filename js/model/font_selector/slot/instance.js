import*as Utils from"../../../utils.js";import*as Entity from"../../entity.js";import{Type}from"./type.js";import*as Item from"./item.js";export class Instance extends Entity.Instance{constructor({selector:t,index:e,type:s,item_names:i,selected_item_name:m=null}){super(),this.selector=t,this.index=e,this.type=s,s===Type.LANGUAGES?this.name="Languages":s===Type.FONTS?this.name="Fonts":( this.name=""),this.items=[],this.selected_item=null;for(let t=0,e=i.length;t<e;t+=1){const e=i[t],s=new Item.Instance({slot:this,index:t,name:e});this.items.push(s),e===m&&(this.selected_item=s)}}Selector(){return this.selector}Index(){return this.index}Type(){return this.type}Name(){return this.name}Has_Item(t){return this.items.includes(t)}Item_Count(){return this.items.length}Item_At_Index(t){return   this.items[t]}Maybe_Item_From_Name(t){for(let e=0,s=this.Item_Count();e<s;e+=1){const s=this.Item_At_Index(e);if(s.Name()===t)return s}return null}Some_Item_From_Name(t){const e=this.Maybe_Item_From_Name(t);return  e}Items(){return Array.from(this.items)}Has_Selected_Item(){return null!=this.selected_item}Selected_Item(){return  this.selected_item}__Select_Item__({item:t}){ this.selected_item=t}Select_Item(t){this.Selector().__Select_Item__({slot:this,slot_item:t})}}