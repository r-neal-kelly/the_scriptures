import*as Unicode from"../../unicode.js";import*as Text from"../text.js";import{Operator}from"./operator.js";import*as Token from"./token.js";export class Help{constructor(e,r){this.message=e.replace(/\r?\n/g," ").replace(/\s+/g," "),this.expression_index=r}Message(){return this.message}Expression_Index(){return this.expression_index}}export class Instance{constructor(){}Parse(e,r){const n=[];let p=0,t=0,o=0,O=!1;function a(){return n.length>0?n[n.length-1]:null}function T(){const e=a();null==e||e.Type()!==Token.Type.CLOSE_GROUP&&e.Type()!==Token.Type.CLOSE_SEQUENCE&&e.Type()!==Token.Type.TEXT||(O=!1,n.push(new Token.And))}let l=new Unicode.Iterator({text:e});for(;!l.Is_At_End();l=l.Next()){const E=l.Point();if(!/\s/.test(E))if(E===Operator.VERBATIM){if(T(),l=l.Next(),l.Is_At_End())return new Help(`Unclosed '${Operator.VERBATIM}'`,l.Previous().Index());{const t=l;for(;!l.Is_At_End()&&l.Point()!==Operator.VERBATIM;l=l.Next());if(l.Is_At_End())return new Help(`Unclosed '${Operator.VERBATIM}'`,l.Previous().Index());{const a=new Text.Instance({dictionary:r,value:e.slice(t.Index(),l.Index())});if(a.Line_Count()>1)return new Help(`Newline inside '${Operator.VERBATIM}'`,l.Index());if(0===a.Line(0).Macro_Part_Count())return new Help(`Empty '${Operator.VERBATIM}'`,l.Index());p=l.Index(),n.push(new Token.Text({line:a.Line(0),is_in_sequence:o>0,has_start_boundary_in_sequence:O}))}}}else if(E===Operator.OPEN_GROUP)T(),p=l.Index(),t+=1,n.push(new Token.Open_Group);else if(E===Operator.CLOSE_GROUP){const e=a();if(null==e)return new Help(`Invalid '${Operator.CLOSE_GROUP}' at beginning`,l.Index());if(e.Type()===Token.Type.OPEN_GROUP)return new Help(`Empty '${Operator.OPEN_GROUP}${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.OPEN_SEQUENCE)return new Help(`Invalid '${Operator.OPEN_SEQUENCE}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.NOT)return new Help(`Invalid '${Operator.NOT}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.CASE)return new Help(`Invalid '${Operator.CASE}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.ALIGN)return new Help(`Invalid '${Operator.ALIGN}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.META)return new Help(`Invalid '${Operator.META}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.AND)return new Help(`Invalid '${Operator.AND}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.XOR)return new Help(`Invalid '${Operator.XOR}' followed by '${Operator.CLOSE_GROUP}'`,p);if(e.Type()===Token.Type.OR)return new Help(`Invalid '${Operator.OR}' followed by '${Operator.CLOSE_GROUP}'`,p);if(t<1)return new Help(`Extra '${Operator.CLOSE_GROUP}'`,l.Index());p=l.Index(),t-=1,n.push(new Token.Close_Group)}else if(E===Operator.OPEN_SEQUENCE){if(o>0)return new Help(`Interior '${Operator.OPEN_SEQUENCE}' within sequence`,p);T(),p=l.Index(),o+=1,O=!0,n.push(new Token.Open_Sequence)}else if(E===Operator.CLOSE_SEQUENCE){const e=a();if(null===e)return new Help(`Invalid '${Operator.CLOSE_SEQUENCE}' at beginning`,l.Index());if(e.Type()===Token.Type.OPEN_GROUP)return new Help(`Invalid '${Operator.OPEN_GROUP}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.OPEN_SEQUENCE)return new Help(`Empty '${Operator.OPEN_SEQUENCE}${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.CLOSE_SEQUENCE)return new Help(`Invalid '${Operator.CLOSE_SEQUENCE}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.NOT)return new Help(`Invalid '${Operator.NOT}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.CASE)return new Help(`Invalid '${Operator.CASE}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.ALIGN)return new Help(`Invalid '${Operator.ALIGN}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.META)return new Help(`Invalid '${Operator.META}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.AND)return new Help(`Invalid '${Operator.AND}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.XOR)return new Help(`Invalid '${Operator.XOR}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(e.Type()===Token.Type.OR)return new Help(`Invalid '${Operator.OR}' followed by '${Operator.CLOSE_SEQUENCE}'`,p);if(o<1)return new Help(`Extra '${Operator.CLOSE_SEQUENCE}'`,l.Index());p=l.Index(),o-=1,O=!1,n.push(new Token.Close_Sequence)}else if(E===Operator.NOT)T(),p=l.Index(),n.push(new Token.Not);else if(E===Operator.CASE)T(),p=l.Index(),n.push(new Token.Case);else if(E===Operator.ALIGN)T(),p=l.Index(),n.push(new Token.Align);else if(E===Operator.META)T(),p=l.Index(),n.push(new Token.Meta);else if(E===Operator.AND){const e=a();if(null===e)return new Help(`Invalid '${Operator.AND}' at beginning`,l.Index());if(e.Type()===Token.Type.OPEN_GROUP)return new Help(`Invalid '${Operator.AND}' after '${Operator.OPEN_GROUP}'`,l.Index());if(e.Type()===Token.Type.OPEN_SEQUENCE)return new Help(`Invalid '${Operator.AND}' after '${Operator.OPEN_SEQUENCE}'`,l.Index());if(e.Type()===Token.Type.NOT)return new Help(`Invalid '${Operator.AND}' after '${Operator.NOT}'`,l.Index());if(e.Type()===Token.Type.CASE)return new Help(`Invalid '${Operator.AND}' after '${Operator.CASE}'`,l.Index());if(e.Type()===Token.Type.ALIGN)return new Help(`Invalid '${Operator.AND}' after '${Operator.ALIGN}'`,l.Index());if(e.Type()===Token.Type.META)return new Help(`Invalid '${Operator.AND}' after '${Operator.META}'`,l.Index());if(e.Type()===Token.Type.AND)return new Help(`Invalid '${Operator.AND}' after '${Operator.AND}'`,l.Index());if(e.Type()===Token.Type.XOR)return new Help(`Invalid '${Operator.AND}' after '${Operator.XOR}'`,l.Index());if(e.Type()===Token.Type.OR)return new Help(`Invalid '${Operator.AND}' after '${Operator.OR}'`,l.Index());p=l.Index(),O=!1,n.push(new Token.And)}else if(E===Operator.XOR){const e=a();if(null===e)return new Help(`Invalid '${Operator.XOR}' at beginning`,l.Index());if(e.Type()===Token.Type.OPEN_GROUP)return new Help(`Invalid '${Operator.XOR}' after '${Operator.OPEN_GROUP}'`,l.Index());if(e.Type()===Token.Type.OPEN_SEQUENCE)return new Help(`Invalid '${Operator.XOR}' after '${Operator.OPEN_SEQUENCE}'`,l.Index());if(e.Type()===Token.Type.NOT)return new Help(`Invalid '${Operator.XOR}' after '${Operator.NOT}'`,l.Index());if(e.Type()===Token.Type.CASE)return new Help(`Invalid '${Operator.XOR}' after '${Operator.CASE}'`,l.Index());if(e.Type()===Token.Type.ALIGN)return new Help(`Invalid '${Operator.XOR}' after '${Operator.ALIGN}'`,l.Index());if(e.Type()===Token.Type.META)return new Help(`Invalid '${Operator.XOR}' after '${Operator.META}'`,l.Index());if(e.Type()===Token.Type.AND)return new Help(`Invalid '${Operator.XOR}' after '${Operator.AND}'`,l.Index());if(e.Type()===Token.Type.XOR)return new Help(`Invalid '${Operator.XOR}' after '${Operator.XOR}'`,l.Index());if(e.Type()===Token.Type.OR)return new Help(`Invalid '${Operator.XOR}' after '${Operator.OR}'`,l.Index());p=l.Index(),n.push(new Token.Xor)}else if(E===Operator.OR){const e=a();if(null===e)return new Help(`Invalid '${Operator.OR}' at beginning`,l.Index());if(e.Type()===Token.Type.OPEN_GROUP)return new Help(`Invalid '${Operator.OR}' after '${Operator.OPEN_GROUP}'`,l.Index());if(e.Type()===Token.Type.OPEN_SEQUENCE)return new Help(`Invalid '${Operator.OR}' after '${Operator.OPEN_SEQUENCE}'`,l.Index());if(e.Type()===Token.Type.NOT)return new Help(`Invalid '${Operator.OR}' after '${Operator.NOT}'`,l.Index());if(e.Type()===Token.Type.CASE)return new Help(`Invalid '${Operator.OR}' after '${Operator.CASE}'`,l.Index());if(e.Type()===Token.Type.ALIGN)return new Help(`Invalid '${Operator.OR}' after '${Operator.ALIGN}'`,l.Index());if(e.Type()===Token.Type.META)return new Help(`Invalid '${Operator.OR}' after '${Operator.META}'`,l.Index());if(e.Type()===Token.Type.AND)return new Help(`Invalid '${Operator.OR}' after '${Operator.AND}'`,l.Index());if(e.Type()===Token.Type.XOR)return new Help(`Invalid '${Operator.OR}' after '${Operator.XOR}'`,l.Index());if(e.Type()===Token.Type.OR)return new Help(`Invalid '${Operator.OR}' after '${Operator.OR}'`,l.Index());p=l.Index(),n.push(new Token.Or)}else{T();const t=l;for(l=l.Next();!l.Is_At_End();l=l.Next()){const e=l.Point();if(/\s/.test(e)||e===Operator.VERBATIM||e===Operator.OPEN_GROUP||e===Operator.CLOSE_GROUP||e===Operator.OPEN_SEQUENCE||e===Operator.CLOSE_SEQUENCE||e===Operator.NOT||e===Operator.CASE||e===Operator.ALIGN||e===Operator.META||e===Operator.AND||e===Operator.XOR||e===Operator.OR)break}const a=new Text.Instance({dictionary:r,value:e.slice(t.Index(),l.Index())});l=l.Previous(),p=t.Index(),n.push(new Token.Text({line:a.Line(0),is_in_sequence:o>0,has_start_boundary_in_sequence:O}))}}if(n.length<1)return new Help("Empty expression",0);if(t>0)return new Help(`Unclosed '${Operator.OPEN_GROUP}'`,l.Previous().Index());if(o>0)return new Help(`Unclosed '${Operator.OPEN_SEQUENCE}'`,l.Previous().Index());{const e=n[n.length-1];if(e.Type()===Token.Type.OPEN_GROUP)return new Help(`Invalid '${Operator.OPEN_GROUP}' at end`,p);if(e.Type()===Token.Type.OPEN_SEQUENCE)return new Help(`Invalid '${Operator.OPEN_SEQUENCE}' at end`,p);if(e.Type()===Token.Type.NOT)return new Help(`Invalid '${Operator.NOT}' at end`,p);if(e.Type()===Token.Type.CASE)return new Help(`Invalid '${Operator.CASE}' at end`,p);if(e.Type()===Token.Type.ALIGN)return new Help(`Invalid '${Operator.ALIGN}' at end`,p);if(e.Type()===Token.Type.META)return new Help(`Invalid '${Operator.META}' at end`,p);if(e.Type()===Token.Type.AND)return new Help(`Invalid '${Operator.AND}' at end`,p);if(e.Type()===Token.Type.XOR)return new Help(`Invalid '${Operator.XOR}' at end`,p);if(e.Type()===Token.Type.OR)return new Help(`Invalid '${Operator.OR}' at end`,p)}return n}}