var __awaiter=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{c(r.next(t))}catch(t){o(t)}}function s(t){try{c(r.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}c((r=r.apply(t,e||[])).next())}))};import*as Entity from"../entity.js";import*as Data from"../data.js";import*as Text from"../text.js";import*as Parser from"./parser.js";import*as Executor from"./executor.js";export class Instance extends Entity.Instance{constructor(){super(),this.executor=new Executor.Instance,this.Add_Dependencies([Data.Singleton()])}Value(t,e,n){return this.Text(new Text.Instance({dictionary:e,value:t}),n)}Text(t,e){return this.executor.Execute(e,t)}Data_File(t,e){return __awaiter(this,void 0,void 0,(function*(){return this.Text(yield t.Text(),e)}))}Data_Version(t,e){return __awaiter(this,void 0,void 0,(function*(){const n=new Map,r=yield t.Text();for(let i=0,o=r.File_Text_Count();i<o;i+=1){const o=this.Text(r.File_Text_At(i),e);if(o instanceof Parser.Help)return o;n.set(t.File_At(i),o)}return n}))}Data_Versions(t,e){return __awaiter(this,void 0,void 0,(function*(){const n=new Map,r=yield Promise.all(t.map((t=>t.Text())));for(let i=0,o=r.length;i<o;i+=1){const o=new Map,a=t[i],s=r[i];for(let t=0,n=s.File_Text_Count();t<n;t+=1){const n=this.Text(s.File_Text_At(t),e);if(n instanceof Parser.Help)return n;o.set(a.File_At(t),n)}n.set(a,o)}return n}))}}const SINGLETON=new Instance;export function Singleton(){return SINGLETON}