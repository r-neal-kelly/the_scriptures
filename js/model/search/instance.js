var __awaiter=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{l(o.next(t))}catch(t){r(t)}}function a(t){try{l(o.throw(t))}catch(t){r(t)}}function l(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}l((o=o.apply(t,e||[])).next())}))};import*as Utils from"../../utils.js";import*as Text from"../text.js";import*as Parser from"./parser.js";import*as Executor from"./executor.js";import*as Result from"./result.js";const WORKERS=[];export class Instance{constructor(){this.executor=new Executor.Instance}Executor(){return this.executor}Value(t,e,n){return this.Text(new Text.Instance({dictionary:e,value:t}),n)}Text(t,e){return this.Executor().Execute(t,e)}Data_File(t,e){return __awaiter(this,void 0,void 0,(function*(){return this.Text(yield t.Text(),e)}))}Data_File_With_Node(t,e){return __awaiter(this,void 0,void 0,(function*(){return this.Executor().Execute_With_Node(yield t.Text(),e)}))}Data_File_Concurrently(t,e,n){return __awaiter(this,void 0,void 0,(function*(){return new Promise(function(o){return __awaiter(this,void 0,void 0,(function*(){n.onmessage=function(t){o(t.data)},n.postMessage({file_transfer:yield t.Transfer(),expression:e})}))}.bind(this))}))}Data_Version(t,e,n,o){return __awaiter(this,void 0,void 0,(function*(){const i=this.Executor().Node_Or_Help(yield t.Dictionary(),e);if(i instanceof Parser.Help)return i;{const r=new Map;if(o.Has_Total_Count()||o.Set_Total_Count(t.File_Count()),yield t.Cache_Files(),Utils.Can_Use_Workers()){for(;WORKERS.length<4;)WORKERS.push(new Worker("js/model/search/worker.js",{type:"module"}));for(let n=0,i=t.File_Count();n<i;n+=WORKERS.length){const s=[];for(let o=0,r=Math.min(i-n,WORKERS.length);o<r;o+=1)s.push(this.Data_File_Concurrently(t.File_At(n+o),e,WORKERS[o]));const a=yield Promise.all(s);for(let e=0,i=a.length;e<i;e+=1){const i=a[e];if(i.length>0){for(const t of i)Object.setPrototypeOf(t,Result.Instance.prototype);r.set(t.File_At(n+e),i)}o.Increment_Done_Count()}}}else{const e=i;for(let i=0,s=t.File_Count();i<s;i+=1){const s=yield this.Data_File_With_Node(t.File_At(i),e);s.length>0&&r.set(t.File_At(i),s),o.Increment_Done_Count(),yield Utils.Wait_Milliseconds(n)}}return r}}))}Data_Versions(t,e,n,o){return __awaiter(this,void 0,void 0,(function*(){const i=new Map;if(!o.Has_Total_Count()){let e=0;for(const n of t)e+=n.File_Count();o.Set_Total_Count(e)}for(const r of t){const t=yield this.Data_Version(r,e,Math.round(n/r.File_Count()),o);if(t instanceof Parser.Help)return t;t.size>0&&i.set(r,t)}return i}))}}let singleton=null;export function Singleton(){return null==singleton&&(singleton=new Instance),singleton}