import*as Utils from"../../utils.js";export class Candidate{constructor({column_index:t,row_index:i,first_part_index:s,end_part_index:e,first_part_first_unit_index:n,last_part_end_unit_index:_}){0,0,0,0,0,0,this.column_index=t,this.row_index=i,this.first_part_index=s,this.end_part_index=e,this.first_part_first_unit_index=n,this.last_part_end_unit_index=_}Copy(){return new Candidate({column_index:this.column_index,row_index:this.row_index,first_part_index:this.first_part_index,end_part_index:this.end_part_index,first_part_first_unit_index:this.first_part_first_unit_index,last_part_end_unit_index:this.last_part_end_unit_index})}Column_Index(){return this.column_index}Row_Index(){return this.row_index}First_Part_Index(){return this.first_part_index}Last_Part_Index(){return this.end_part_index-1}End_Part_Index(){return this.end_part_index}First_Part_First_Unit_Index(){return this.first_part_first_unit_index}Last_Part_End_Unit_Index(){return this.last_part_end_unit_index}Is_Equal_To(t){return t.column_index===this.column_index&&t.row_index===this.row_index&&t.first_part_index===this.first_part_index&&t.end_part_index===this.end_part_index&&t.first_part_first_unit_index===this.first_part_first_unit_index&&t.last_part_end_unit_index===this.last_part_end_unit_index}Includes(t){return t.column_index===this.column_index&&t.row_index===this.row_index&&t.first_part_index>=this.first_part_index&&t.end_part_index<=this.end_part_index&&t.first_part_first_unit_index>=this.first_part_first_unit_index&&t.last_part_end_unit_index<=this.last_part_end_unit_index}Shadows(t){return t.column_index===this.column_index&&t.row_index===this.row_index&&t.first_part_index>=this.first_part_index&&t.end_part_index<this.end_part_index||t.first_part_index>this.first_part_index&&t.end_part_index<=this.end_part_index||t.first_part_index===this.first_part_index&&t.end_part_index===this.end_part_index&&(t.first_part_first_unit_index>=this.first_part_first_unit_index&&t.last_part_end_unit_index<this.last_part_end_unit_index||t.first_part_first_unit_index>this.first_part_first_unit_index&&t.last_part_end_unit_index<=this.last_part_end_unit_index)}}export class Runner{constructor(t){this.line=t,this.candidates=[],this.matches=[],this.buffer=[]}Copy(){const t=new Runner(this.line);for(const i of this.candidates)t.candidates.push(i.Copy());for(const i of this.matches)t.matches.push(i.Copy());return t}Combine(t){for(let i=0,s=t.Candidate_Count();i<s;i+=1)this.Try_Add_Candidate(t.Candidate(i));t.candidates=[];for(let i=0,s=t.Match_Count();i<s;i+=1)this.Try_Add_Match(t.Match(i));return t.matches=[],this}Line(){return this.line}Candidate_Count(){return this.candidates.length}Candidate(t){return 0,0,this.candidates[t]}Has_Candidate_Equal_To(t){for(const i of this.candidates)if(i.Is_Equal_To(t))return!0;return!1}Try_Add_Candidate(t){let i=!0;for(const s of this.candidates)s.Includes(t)?(i=!1,this.buffer.push(s)):t.Shadows(s)||this.buffer.push(s);const s=this.buffer;this.buffer=this.candidates,this.candidates=s,this.buffer.splice(0,this.buffer.length),i&&this.candidates.push(t)}Clear_Candidates(){this.candidates.splice(0,this.candidates.length)}Match_Count(){return this.matches.length}Match(t){return 0,0,this.matches[t]}Has_Match_Equal_To(t){for(const i of this.matches)if(i.Is_Equal_To(t))return!0;return!1}Try_Add_Match(t){let i=!0;for(const s of this.matches)s.Includes(t)?(i=!1,this.buffer.push(s)):t.Shadows(s)||this.buffer.push(s);const s=this.buffer;this.buffer=this.matches,this.matches=s,this.buffer.splice(0,this.buffer.length),i&&this.matches.push(t)}}export class Match{constructor({first_part_index:t,end_part_index:i,first_part_first_unit_index:s,last_part_end_unit_index:e}){0,0,0,0,this.first_part_index=t,this.end_part_index=i,this.first_part_first_unit_index=s,this.last_part_end_unit_index=e}}export class Instance{constructor(t){this.line_index=t.Line().Index(),this.total_match_count=t.Match_Count(),this.matches={};for(let i=0,s=t.Match_Count();i<s;i+=1){const s=t.Match(i),e=s.Column_Index(),n=s.Row_Index();null==this.matches[e]&&(this.matches[e]={}),null==this.matches[e][n]&&(this.matches[e][n]=[]),this.matches[e][n].push(new Match({first_part_index:s.First_Part_Index(),end_part_index:s.End_Part_Index(),first_part_first_unit_index:s.First_Part_First_Unit_Index(),last_part_end_unit_index:s.Last_Part_End_Unit_Index()}))}}Line_Index(){return this.line_index}Total_Match_Count(){return this.total_match_count}Match_Count(t,i){return null==this.matches[t]||null==this.matches[t][i]?0:this.matches[t][i].length}Match(t,i,s){return 0,0,0,this.matches[t][i][s]}Matches(t,i){return null==this.matches[t]||null==this.matches[t][i]?[]:Array.from(this.matches[t][i])}}