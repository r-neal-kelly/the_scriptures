import*as Utils from"../../utils.js";export class Match{constructor({first_part_index:t,end_part_index:_,first_part_first_unit_index:i,last_part_end_unit_index:n}){this.first_part_index=t,this.end_part_index=_,this.first_part_first_unit_index=i,this.last_part_end_unit_index=n}Copy(){return new Match({first_part_index:this.first_part_index,end_part_index:this.end_part_index,first_part_first_unit_index:this.first_part_first_unit_index,last_part_end_unit_index:this.last_part_end_unit_index})}First_Part_Index(){return this.first_part_index}End_Part_Index(){return this.end_part_index}First_Part_First_Unit_Index(){return this.first_part_first_unit_index}Last_Part_End_Unit_Index(){return this.last_part_end_unit_index}Is_Equal_To(t){return t.first_part_index===this.first_part_index&&t.end_part_index===this.end_part_index&&t.first_part_first_unit_index===this.first_part_first_unit_index&&t.last_part_end_unit_index===this.last_part_end_unit_index}Includes(t){return t.first_part_index>=this.first_part_index&&t.end_part_index<=this.end_part_index&&t.first_part_first_unit_index>=this.first_part_first_unit_index&&t.last_part_end_unit_index<=this.last_part_end_unit_index}Shadows(t){return t.first_part_index>=this.first_part_index&&t.end_part_index<this.end_part_index||t.first_part_index>this.first_part_index&&t.end_part_index<=this.end_part_index||t.first_part_index===this.first_part_index&&t.end_part_index===this.end_part_index&&(t.first_part_first_unit_index>=this.first_part_first_unit_index&&t.last_part_end_unit_index<this.last_part_end_unit_index||t.first_part_first_unit_index>this.first_part_first_unit_index&&t.last_part_end_unit_index<=this.last_part_end_unit_index)}}export class Instance{constructor(t){this.line=t,this.matches=[]}Copy(){const t=new Instance(this.line);for(const _ of this.matches)t.matches.push(_.Copy());return t}Combine(t){for(let _=0,i=t.Match_Count();_<i;_+=1)this.Try_Add_Match(t.Match(_));return t.matches=[],this}Line(){return this.line}Has_Match_Equal_To(t){for(const _ of this.matches)if(_.Is_Equal_To(t))return!0;return!1}Has_Match_Including(t){for(const _ of this.matches)if(_.Includes(t))return!0;return!1}Has_Match_Shadowing(t){for(const _ of this.matches)if(_.Shadows(t))return!0;return!1}Match_Count(){return this.matches.length}Match(t){return Utils.Assert(t>-1,"match_index must be greater than -1."),Utils.Assert(t<this.Match_Count(),"match_index must be less than match_count."),this.matches[t]}Try_Add_Match(t){this.Has_Match_Equal_To(t)||this.matches.push(t)}}export class Version{constructor({name:t}){this.name=t,this.versions=null}}