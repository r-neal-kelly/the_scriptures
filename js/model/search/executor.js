import*as Utils from"../../utils.js";import*as Parser from"./parser.js";import*as Compiler from"./compiler.js";import*as Node from"./node.js";import*as Result from"./result.js";export var Mode;!function(t){t[t.INITIAL=0]="INITIAL",t[t.COMPLEX_SEQUENCE=1]="COMPLEX_SEQUENCE",t[t.NOT=2]="NOT",t[t.CASE=4]="CASE",t[t.ALIGN=8]="ALIGN",t[t.META=16]="META"}(Mode||(Mode={}));export var Position;!function(t){t[t.ANY_OR_START=0]="ANY_OR_START",t[t.MIDDLE_OR_END=1]="MIDDLE_OR_END",t[t.OUT_OF_BOUNDS=2]="OUT_OF_BOUNDS"}(Position||(Position={}));export class Instance{constructor(){this.parser=new Parser.Instance,this.compiler=new Compiler.Instance}Execute(t,e){const n=this.parser.Parse(t,e.Dictionary());if(n instanceof Parser.Help)return n;{const t=this.compiler.Compile(n),_=[];for(let n=0,r=e.Line_Count();n<r;n+=1){const r=e.Line(n),i=this.Step(t,Mode.INITIAL,Position.ANY_OR_START,new Result.Instance(r));null!=i&&_.push(i)}return _}}Step(t,e,n,_){const r=t.Type();if(r===Node.Type.MAYBE_ONE||r===Node.Type.MAYBE_MANY||r===Node.Type.ONE_OR_MANY){const r=t,i=this.Step(r.Next(),e,n,_.Copy()),a=this.Step(r.Operand(),e,n,_.Copy());return null!=i?null!=a?i.Combine(a):i:null!=a?a:null}if(r===Node.Type.SEQUENCE){const r=t,i=this.Step(r.Operand(),r.Is_Complex()?e|Mode.COMPLEX_SEQUENCE:e,Position.ANY_OR_START,new Result.Instance(_.Line()));return null!=i?this.Step(r.Next(),e,n,_.Combine(i)):null}if(r===Node.Type.NOT){const r=t,i=this.Step(r.Operand(),e^Mode.NOT,n,_);return null!=i?this.Step(r.Next(),e,n,i):null}if(r===Node.Type.CASE){const r=t,i=this.Step(r.Operand(),e^Mode.CASE,n,_);return null!=i?this.Step(r.Next(),e,n,i):null}if(r===Node.Type.ALIGN){const r=t,i=this.Step(r.Operand(),e^Mode.ALIGN,n,_);return null!=i?this.Step(r.Next(),e,n,i):null}if(r===Node.Type.META){const r=t,i=this.Step(r.Operand(),e^Mode.META,n,_);return null!=i?this.Step(r.Next(),e,n,i):null}if(r===Node.Type.XOR){const r=t,i=this.Step(r.Left_Operand(),e,n,_.Copy()),a=this.Step(r.Right_Operand(),e,n,_.Copy());return null!=i?null!=a?null:i:null!=a?a:null}if(r===Node.Type.OR){const r=t,i=this.Step(r.Left_Operand(),e,n,_.Copy()),a=this.Step(r.Right_Operand(),e,n,_.Copy());return null!=i?null!=a?i.Combine(a):i:null!=a?a:null}if(r===Node.Type.TEXT){const r=t;if(n===Position.ANY_OR_START){let t;if(t=e&Mode.COMPLEX_SEQUENCE?this.Complex_Sequence_Any(r,e,_):this.Sequence_Any(r,e,_),null!=t){if(t=this.Step(r.Next(),e,Position.OUT_OF_BOUNDS,t),null!=t)return t;{let t;return t=e&Mode.COMPLEX_SEQUENCE?this.Complex_Sequence_Start(r,e,_):this.Sequence_Start(r,e,_),null!=t?this.Step(r.Next(),e,Position.MIDDLE_OR_END,t):null}}{let t;return t=e&Mode.COMPLEX_SEQUENCE?this.Complex_Sequence_Start(r,e,_):this.Sequence_Start(r,e,_),null!=t?this.Step(r.Next(),e,Position.MIDDLE_OR_END,t):null}}if(n===Position.MIDDLE_OR_END){let t;if(t=e&Mode.COMPLEX_SEQUENCE?this.Complex_Sequence_Middle(r,e,_):this.Sequence_Middle(r,e,_),null!=t){if(t=this.Step(r.Next(),e,Position.MIDDLE_OR_END,t),null!=t)return t;{let t;return t=e&Mode.COMPLEX_SEQUENCE?this.Complex_Sequence_End(r,e,_):this.Sequence_End(r,e,_),null!=t?this.Step(r.Next(),e,Position.OUT_OF_BOUNDS,t):null}}{let t;return t=e&Mode.COMPLEX_SEQUENCE?this.Complex_Sequence_End(r,e,_):this.Sequence_End(r,e,_),null!=t?this.Step(r.Next(),e,Position.OUT_OF_BOUNDS,t):null}}return null}return r===Node.Type.END?_:(Utils.Assert(!1,`Unknown node_type: ${r}`),null)}Sequence_Any(t,e,n){Utils.Assert(0===n.Match_Count(),"Should not have any matches at any.");const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,n=_.Macro_Part_Count();t<n;t+=1)if(e&Mode.META||!_.Macro_Part(t).Is_Command()){const n=_.Macro_Part(t),r=e&Mode.CASE?n.Value():n.Value().toLowerCase();if(e&Mode.ALIGN)r===i&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length}));else{let e=!1,n=0,_=0;for(let t=0,a=r.length;t<a-(i.length-1);)if(e){if(r.slice(t,t+i.length)!==i)break;t+=i.length,_=t}else r.slice(t,t+i.length)===i?(e=!0,n=t,t+=i.length,_=t):t+=1;e&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:n,last_part_end_unit_index:_}))}}return e&Mode.NOT?a.Match_Count()>0?null:a:a.Match_Count()>0?a:null}Sequence_Start(t,e,n){Utils.Assert(0===n.Match_Count(),"Should not have any matches at start.");const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,n=_.Macro_Part_Count();t<n;t+=1)if(e&Mode.META||!_.Macro_Part(t).Is_Command()){const n=_.Macro_Part(t),r=e&Mode.CASE?n.Value():n.Value().toLowerCase();if(e&Mode.ALIGN)r===i&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length}));else if(r.length>=i.length&&r.slice(r.length-i.length,r.length)===i){let e=r.length-i.length;for(let t=e,n=0;t>n+(i.length-1)&&r.slice(t-i.length,t)===i;)t-=i.length,e=t;a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:e,last_part_end_unit_index:r.length}))}}return e&Mode.NOT||a.Match_Count()>0?a:null}Sequence_Middle(t,e,n){const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,r=n.Match_Count();t<r;t+=1){const r=n.Match(t);let l=r.End_Part_Index();const s=_.Macro_Part_Count();let d=0;if(!(e&Mode.META))for(;l+d<s&&_.Macro_Part(l+d).Is_Command();)d+=1;if(l+d<s){const t=_.Macro_Part(l+d),n=e&Mode.CASE?t.Value():t.Value().toLowerCase();n===i&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length}))}}return e&Mode.NOT||a.Match_Count()>0?a:null}Sequence_End(t,e,n){const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,r=n.Match_Count();t<r;t+=1){const r=n.Match(t);let l=r.End_Part_Index();const s=_.Macro_Part_Count();let d=0;if(!(e&Mode.META))for(;l+d<s&&_.Macro_Part(l+d).Is_Command();)d+=1;if(l+d<s){const t=_.Macro_Part(l+d),n=e&Mode.CASE?t.Value():t.Value().toLowerCase();if(e&Mode.ALIGN)n===i&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length}));else if(n.length>=i.length&&n.slice(0,i.length)===i){let t=i.length;for(let e=t,_=n.length;e<_-(i.length-1)&&n.slice(e,e+i.length)===i;)e+=i.length,t=e;a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:t}))}}}return e&Mode.NOT?a.Match_Count()>0?null:a:a.Match_Count()>0?a:null}Complex_Sequence_Any(t,e,n){Utils.Assert(0===n.Match_Count(),"Should not have any matches at any.");const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,n=_.Macro_Part_Count();t<n;t+=1)if(e&Mode.META||!_.Macro_Part(t).Is_Command()){const n=_.Macro_Part(t),r=e&Mode.CASE?n.Value():n.Value().toLowerCase();if(e&Mode.ALIGN)e&Mode.NOT?r!==i&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length})):r===i&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length}));else{let n=!1,_=0,l=0;for(let t=0,e=r.length;t<e-(i.length-1);)if(n){if(r.slice(t,t+i.length)!==i)break;t+=i.length,l=t}else r.slice(t,t+i.length)===i?(n=!0,_=t,t+=i.length,l=t):t+=1;e&Mode.NOT?n||a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length})):n&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:_,last_part_end_unit_index:l}))}}return a.Match_Count()>0?a:null}Complex_Sequence_Start(t,e,n){Utils.Assert(0===n.Match_Count(),"Should not have any matches at start.");const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,n=_.Macro_Part_Count();t<n;t+=1)if(e&Mode.META||!_.Macro_Part(t).Is_Command()){const n=_.Macro_Part(t),r=e&Mode.CASE?n.Value():n.Value().toLowerCase();if(e&Mode.ALIGN)e&Mode.NOT?r!==i&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length})):r===i&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length}));else if(e&Mode.NOT)(r.length<i.length||r.slice(r.length-i.length,r.length)!==i)&&a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:0,last_part_end_unit_index:r.length}));else if(r.length>=i.length&&r.slice(r.length-i.length,r.length)===i){let e=r.length-i.length;for(let t=e,n=0;t>n+(i.length-1)&&r.slice(t-i.length,t)===i;)t-=i.length,e=t;a.Try_Add_Match(new Result.Match({first_part_index:t,end_part_index:t+1,first_part_first_unit_index:e,last_part_end_unit_index:r.length}))}}return a.Match_Count()>0?a:null}Complex_Sequence_Middle(t,e,n){const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,r=n.Match_Count();t<r;t+=1){const r=n.Match(t);let l=r.End_Part_Index();const s=_.Macro_Part_Count();let d=0;if(!(e&Mode.META))for(;l+d<s&&_.Macro_Part(l+d).Is_Command();)d+=1;if(l+d<s){const t=_.Macro_Part(l+d),n=e&Mode.CASE?t.Value():t.Value().toLowerCase();e&Mode.NOT?n!==i&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length})):n===i&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length}))}}return a.Match_Count()>0?a:null}Complex_Sequence_End(t,e,n){const _=n.Line(),r=t.Part(),i=e&Mode.CASE?r.Value():r.Value().toLowerCase(),a=new Result.Instance(n.Line());for(let t=0,r=n.Match_Count();t<r;t+=1){const r=n.Match(t);let l=r.End_Part_Index();const s=_.Macro_Part_Count();let d=0;if(!(e&Mode.META))for(;l+d<s&&_.Macro_Part(l+d).Is_Command();)d+=1;if(l+d<s){const t=_.Macro_Part(l+d),n=e&Mode.CASE?t.Value():t.Value().toLowerCase();if(e&Mode.ALIGN)e&Mode.NOT?n!==i&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length})):n===i&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length}));else if(e&Mode.NOT)(n.length<i.length||n.slice(0,i.length)!==i)&&a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:n.length}));else if(n.length>=i.length&&n.slice(0,i.length)===i){let t=i.length;for(let e=t,_=n.length;e<_-(i.length-1)&&n.slice(e,e+i.length)===i;)e+=i.length,t=e;a.Try_Add_Match(new Result.Match({first_part_index:r.First_Part_Index(),end_part_index:l+d+1,first_part_first_unit_index:r.First_Part_First_Unit_Index(),last_part_end_unit_index:t}))}}}return a.Match_Count()>0?a:null}}