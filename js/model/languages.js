import*as Utils from"../utils.js";import*as Language from"./language.js";export class Instance{constructor(){this.languages={},this.languages[Language.Name.ENGLISH]=new Language.English.Instance,this.languages[Language.Name.HEBREW]=new Language.Hebrew.Instance,this.languages[Language.Name.GREEK]=new Language.Greek.Instance,this.languages[Language.Name.LATIN]=new Language.Latin.Instance,Object.freeze(this.languages)}Has_Language(a){return this.languages.hasOwnProperty(a)}Language(a){return Utils.Assert(this.Has_Language(a),`does not have language_name: ${a}`),this.languages[a]}English(){return this.Language(Language.Name.ENGLISH)}Hebrew(){return this.Language(Language.Name.HEBREW)}Greek(){return this.Language(Language.Name.GREEK)}Latin(){return this.Language(Language.Name.LATIN)}Direction(a){return this.Language(a).Direction()}Default_Global_Font_Name(a){return this.Language(a).Default_Font_Name()}Default_Global_Font_Styles(a){return this.Language(a).Default_Font_Styles()}Current_Global_Font_Name(a){return this.Language(a).Current_Font_Name()}Current_Global_Font_Styles(a){return this.Language(a).Current_Font_Styles()}Adapt_Text_To_Default_Global_Font({language_name:a,text:e}){return this.Language(a).Adapt_Text_To_Default_Font(e)}Adapt_Text_To_Current_Global_Font({language_name:a,text:e}){return this.Language(a).Adapt_Text_To_Current_Font(e)}}const SINGLETON=new Instance;export function Singleton(){return SINGLETON}