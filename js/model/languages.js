import*as Utils from"../utils.js";import*as Language from"./language.js";export class Instance{constructor(){this.languages={},this.language_names=[];for(const e of[new Language.English.Instance,new Language.Hebrew.Instance,new Language.Greek.Instance,new Language.Latin.Instance,new Language.German.Instance,new Language.French.Instance,new Language.Dutch.Instance]){const a=e.Name();this.languages[a]=e,this.language_names.push(a)}this.language_names.sort(),Object.freeze(this.languages),Object.freeze(this.language_names)}Has_Language(e){return this.languages.hasOwnProperty(e)}Language(e){return Utils.Assert(this.Has_Language(e),`does not have language_name: ${e}`),this.languages[e]}Language_Names(){return Array.from(this.language_names)}English(){return this.Language(Language.Name.ENGLISH)}Hebrew(){return this.Language(Language.Name.HEBREW)}Greek(){return this.Language(Language.Name.GREEK)}Latin(){return this.Language(Language.Name.LATIN)}German(){return this.Language(Language.Name.GERMAN)}French(){return this.Language(Language.Name.FRENCH)}Dutch(){return this.Language(Language.Name.DUTCH)}Direction(e){return this.Language(e).Direction()}Global_Font_Names(e){return this.Language(e).Font_Names()}Global_Short_Font_Names(e){return this.Language(e).Short_Font_Names()}Font_Name_To_Short_Font_Name(e,a){return this.Language(e).Font_Name_To_Short_Font_Name(a)}Short_Font_Name_To_Font_Name(e,a){return this.Language(e).Short_Font_Name_To_Font_Name(a)}Font_Styles(e,a){return this.Language(e).Font_Styles(a)}Default_Global_Font_Name(e){return this.Language(e).Default_Font_Name()}Default_Global_Short_Font_Name(e){return this.Language(e).Default_Short_Font_Name()}Default_Global_Font_Styles(e){return this.Language(e).Default_Font_Styles()}Current_Global_Font_Name(e){return this.Language(e).Current_Font_Name()}Set_Current_Global_Font_Name(e,a){this.Language(e).Set_Current_Font_Name(a)}Current_Global_Short_Font_Name(e){return this.Language(e).Current_Short_Font_Name()}Current_Global_Font_Styles(e){return this.Language(e).Current_Font_Styles()}Adapt_Text_To_Font({language_name:e,text:a,font_name:t}){return this.Language(e).Adapt_Text_To_Font({text:a,font_name:t})}Adapt_Text_To_Default_Global_Font({language_name:e,text:a}){return this.Language(e).Adapt_Text_To_Default_Font(a)}Adapt_Text_To_Current_Global_Font({language_name:e,text:a}){return this.Language(e).Adapt_Text_To_Current_Font(a)}}const SINGLETON=new Instance;export function Singleton(){return SINGLETON}