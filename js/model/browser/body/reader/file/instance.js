import*as Utils from"../../../../../utils.js";import*as Entity from"../../../../entity.js";import*as Line from"./line.js";export class Instance extends Entity.Instance{static Min_Line_Count(){return Instance.min_line_count}static Set_Min_Line_Count(t){Utils.Assert(t>=0,"min_line_count must be greater than or equal to 0."),Instance.min_line_count=t}constructor({reader:t,data:e,text:n}){super(),this.reader=t,this.data=e,this.text=n,this.lines=[];for(let t=0,e=n.Line_Count();t<e;t+=1)this.lines.push(new Line.Instance({file:this,index:t,text:n.Line(t)}));this.Add_Dependencies(this.lines)}Reader(){return Utils.Assert(null!=this.reader,"Has no reader."),this.reader}Data(){return Utils.Assert(null!=this.data,"Has no data."),this.data}Maybe_Data(){return this.data}Text(){return this.text}Line_Count(){return this.lines.length}Line_At(t){return Utils.Assert(t>-1,`line_index (${t}) must be greater than -1.`),t<this.Line_Count()?this.lines[t]:Instance.blank_line}}Instance.min_line_count=50,Instance.blank_line=new Line.Instance({file:null,index:null,text:null});