var __awaiter=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function s(t){try{o(i.next(t))}catch(t){a(t)}}function c(t){try{o(i.throw(t))}catch(t){a(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,c)}o((i=i.apply(t,e||[])).next())}))};import*as Entity from"../../../entity.js";import*as Text from"../../../text.js";import*as Buffer from"../../../buffer.js";export class Instance extends Entity.Instance{static Blank_File(){return this.blank_file}constructor({body:t}){super(),this.body=t,this.current_data=null,this.current_file=Instance.Blank_File(),this.Add_Dependencies([this.current_file])}Body(){return this.body}Maybe_Current_Data(){return this.current_data}File(){return this.current_file}Refresh_File(){return __awaiter(this,void 0,void 0,(function*(){const t=this.Body().Selector().Maybe_File();this.Maybe_Current_Data()!=t&&(this.current_data=t,this.current_file=null!=t?new Buffer.Text.Instance({text:yield t.Text(),text_direction:t.Default_Text_Direction()}):Instance.Blank_File(),yield this.current_file.Ready())}))}}Instance.blank_file=new Buffer.Text.Instance({text:new Text.Instance({dictionary:new Text.Dictionary.Instance({json:null}),value:""}),text_direction:Text.Direction.LEFT_TO_RIGHT});