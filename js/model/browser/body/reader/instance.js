var __awaiter=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function s(t){try{c(i.next(t))}catch(t){a(t)}}function l(t){try{c(i.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}c((i=i.apply(t,e||[])).next())}))};import*as Text from"../../../text.js";import*as Entity from"../../../entity.js";import*as File from"./file.js";export class Instance extends Entity.Instance{static Blank_File(){return this.blank_file}constructor({body:t}){super(),this.body=t,this.current_file=Instance.Blank_File(),this.Add_Dependencies([this.current_file])}Body(){return this.body}File(){return this.current_file}Open_File(t){return __awaiter(this,void 0,void 0,(function*(){this.current_file.Maybe_Data()!=t&&(null!=t?(this.current_file=new File.Instance({reader:this,data:t,text:yield t.Text()}),yield this.current_file.Ready()):(this.current_file=Instance.Blank_File(),yield this.current_file.Ready()))}))}}Instance.blank_file=new File.Instance({reader:null,data:null,text:new Text.Instance({dictionary:new Text.Dictionary.Instance({json:null}),value:""})});