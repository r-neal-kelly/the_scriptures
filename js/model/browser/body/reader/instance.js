var __awaiter=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{o(r.next(e))}catch(e){i(e)}}function l(e){try{o(r.throw(e))}catch(e){i(e)}}function o(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,l)}o((r=r.apply(e,t||[])).next())}))};import*as Entity from"../../../entity.js";import*as Language from"../../../language.js";import*as Text from"../../../text.js";import*as Buffer from"../../../buffer.js";export class Instance extends Entity.Instance{static Blank_File(){return this.blank_file}constructor({body:e}){super(),this.body=e,this.current_data=null,this.current_file=Instance.Blank_File(),this.Add_Dependencies([this.current_file])}Body(){return this.body}Maybe_Current_Data(){return this.current_data}File(){return this.current_file}Refresh_File(){return __awaiter(this,void 0,void 0,(function*(){const e=this.Body().Selector().Maybe_File(),t=this.Body().Browser().Commander().Allow_Errors().Is_Activated();this.Maybe_Current_Data()==e&&this.current_file.Allows_Errors()==t||(this.current_data=e,this.current_file=null!=e?new Buffer.Text.Instance({default_language_name:e.Default_Language_Name(),text:yield e.Text(),allow_errors:t}):Instance.Blank_File(),yield this.current_file.Ready())}))}}Instance.blank_file=new Buffer.Text.Instance({default_language_name:Language.Name.ENGLISH,text:new Text.Instance({dictionary:new Text.Dictionary.Instance({json:null}),value:""}),allow_errors:!1});