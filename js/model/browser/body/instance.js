var __awaiter=this&&this.__awaiter||function(e,t,r,s){return new(r||(r=Promise))((function(n,o){function i(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,a)}c((s=s.apply(e,t||[])).next())}))};import*as Async from"../../../async.js";import*as Data from"../../data.js";import*as Selector from"../../selector.js";import*as Font_Selector from"../../font_selector.js";import*as Options from"./options.js";import*as Reader from"./reader.js";export class Instance extends Async.Instance{constructor({browser:e,selection:t=null,selector_slot_order:r}){super(),this.browser=e,this.options=new Options.Instance({body:this,underlying_font_size_px:Data.Consts.DEFAULT_UNDERLYING_FONT_SIZE_PX}),this.selector=new Selector.Instance({slot_order:r,does_smart_item_selection:!0,selection:t}),this.font_selector=new Font_Selector.Instance,this.reader=new Reader.Instance({body:this}),this.Add_Dependencies([this.selector,this.reader])}Browser(){return this.browser}Options(){return this.options}Selector(){return this.selector}Font_Selector(){return this.font_selector}Reader(){return this.reader}After_Dependencies_Are_Ready(){return __awaiter(this,void 0,void 0,(function*(){yield this.Reader().Refresh_File()}))}}