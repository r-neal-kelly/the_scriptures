var __awaiter=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(o,c){function r(e){try{i(s.next(e))}catch(e){c(e)}}function a(e){try{i(s.throw(e))}catch(e){c(e)}}function i(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}i((s=s.apply(e,t||[])).next())}))};import*as Utils from"../../../utils.js";export class Instance{constructor({commander:e}){this.commander=e}Commander(){return this.commander}Symbol(){return"<<"}Can_Activate(){const e=this.Commander().Browser().Body().Selector();return e.Has_Files()&&e.Files().Item_Count()>0}Activate(){return __awaiter(this,void 0,void 0,(function*(){0;const e=this.Commander().Browser().Body().Selector().Files();if(e.Has_Selected_Item()){const t=e.Selected_Item();if(t.Index()>0)e.Item_At_Index(t.Index()-1).Select();else{const t=e.Selector().Books();0;const n=t.Selected_Item();n.Index()>0?t.Item_At_Index(n.Index()-1).Select():t.Last_Item().Select(),t.Selector().Has_Files()&&t.Selector().Files().Last_Item().Select()}}else e.Last_Item().Select()}))}}