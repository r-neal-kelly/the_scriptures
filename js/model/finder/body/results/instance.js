import*as Utils from"../../../../utils.js";import*as Entity from"../../../entity.js";import*as Filter from"../../../selector.js";import*as Tree from"./tree.js";import*as Buffer from"../../../buffer/search.js";export class Instance extends Entity.Instance{constructor({body:e,filter_slot_order:s,versions_results:t,is_showing_commands:r}){super();const o={};function n(e,s,t,r){null==o[e]&&(o[e]={}),null==o[e][s]&&(o[e][s]={}),Utils.Assert(null==o[e][s][t],"Can't clobber files!"),o[e][s][t]=[];for(const n of r)o[e][s][t].push({name:n[0].Name(),results:n[1]})}if(s===Filter.Slot.Order.BOOKS_LANGUAGES_VERSIONS)for(const e of t)n(e[0].Language().Book().Name(),e[0].Language().Name(),e[0].Name(),e[1]);else if(s===Filter.Slot.Order.BOOKS_VERSIONS_LANGUAGES)for(const e of t)n(e[0].Language().Book().Name(),e[0].Name(),e[0].Language().Name(),e[1]);else if(s===Filter.Slot.Order.LANGUAGES_BOOKS_VERSIONS)for(const e of t)n(e[0].Language().Name(),e[0].Language().Book().Name(),e[0].Name(),e[1]);else if(s===Filter.Slot.Order.LANGUAGES_VERSIONS_BOOKS)for(const e of t)n(e[0].Language().Name(),e[0].Name(),e[0].Language().Book().Name(),e[1]);else if(s===Filter.Slot.Order.VERSIONS_BOOKS_LANGUAGES)for(const e of t)n(e[0].Name(),e[0].Language().Book().Name(),e[0].Language().Name(),e[1]);else if(s===Filter.Slot.Order.VERSIONS_LANGUAGES_BOOKS)for(const e of t)n(e[0].Name(),e[0].Language().Name(),e[0].Language().Book().Name(),e[1]);else Utils.Assert(!1,"Unknown filter_slot_order.");this.body=e,this.tree=new Tree.Instance({results:this,data:o}),this.is_showing_commands=r,this.buffer=new Buffer.Instance({results:[],is_showing_commands:this.is_showing_commands}),this.Add_Dependencies([this.tree,this.buffer])}Body(){return this.body}Tree(){return this.tree}Buffer(){return this.buffer}Set_Buffer(e){this.buffer=new Buffer.Instance({results:e,is_showing_commands:this.is_showing_commands})}}