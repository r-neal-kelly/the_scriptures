var __awaiter=this&&this.__awaiter||function(e,t,s,n){return new(s||(s=Promise))((function(r,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function o(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,o)}c((n=n.apply(e,t||[])).next())}))};import*as Entity from"../../entity.js";import*as Data from"../../data.js";import*as Text from"../../text.js";import*as Search from"../../search.js";import*as Selector from"../../selector.js";import*as Expression from"./expression.js";import*as Results from"./results.js";export class Instance extends Entity.Instance{constructor({finder:e}){super(),this.finder=e,this.filter=new Selector.Instance({does_smart_item_selection:!1}),this.expression=new Expression.Instance({body:this}),this.results=new Results.Instance({body:this}),this.Add_Dependencies([Data.Singleton(),Search.Singleton(),this.filter,this.expression,this.results])}Finder(){return this.finder}Filter(){return this.filter}Expression(){return this.expression}Results(){return this.results}Search(){return __awaiter(this,void 0,void 0,(function*(){const e=this.Filter().File_Or_Versions(),t=this.Expression().Value();let s;if(e instanceof Data.File.Instance){const n=e,r=yield Search.Singleton().Data_File(n,t);if(r instanceof Search.Parser.Help)s=r;else{const e=new Map;e.set(n,r),s=new Map,s.set(n.Version(),e)}}else s=yield Search.Singleton().Data_Versions(e,t);Search.Parser.Help;Text.Part.Command.Maybe_Valid_Value_From(t)}))}}