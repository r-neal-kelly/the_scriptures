var __awaiter=this&&this.__awaiter||function(t,i,e,n){return new(e||(e=Promise))((function(s,r){function o(t){try{_(n.next(t))}catch(t){r(t)}}function d(t){try{_(n.throw(t))}catch(t){r(t)}}function _(t){var i;t.done?s(t.value):(i=t.value,i instanceof e?i:new e((function(t){t(i)}))).then(o,d)}_((n=n.apply(t,i||[])).next())}))};import*as Utils from"../../../utils.js";import*as Entity from"../../entity.js";import*as Window from"../window.js";import{Render_Type}from"./render_type.js";export class Instance extends Entity.Instance{constructor({desktop:t,render_type:i=Render_Type.LANDSCAPE,render_limit:e=Instance.DEFAULT_RENDER_LIMIT}){super(),this.desktop=t,this.render_type=i,this.render_limit=Instance.DEFAULT_RENDER_LIMIT,this.windows=[],this.active_window=null,this.Set_Render_Limit(e),this.Add_Dependencies([])}Desktop(){return this.desktop}Render_Type(){return this.render_type}Set_Render_Type(t){this.render_type=t}Render_Limit(){return this.render_limit}Set_Render_Limit(t){0,this.render_limit=t}Window_Count(){return this.windows.length}Maximized_Window_Count(){let t=0;for(const i of this.windows)i.Is_Maximized()&&(t+=1);return t}Has_Window(t){return 0,this.windows.indexOf(t)>-1}Has_Window_At(t){return t>-1&&t<this.Window_Count()}Window_At(t){return 0,this.windows[t]}Window_Index(t){return 0,this.windows.indexOf(t)}Windows(){return Array.from(this.windows)}__Add_Window__(t){0,0,0,this.windows.push(t),this.Desktop().Layout().Taskbar().Tabs().Add_Tab()}__Remove_Window__(t){0,0;const i=this.windows.indexOf(t);0,this.Desktop().Layout().Taskbar().Tabs().Remove_Tab(i),this.windows.splice(i,1)}Has_Active_Window(){return null!=this.active_window}Maybe_Active_Window(){return this.active_window}__Set_Active_Window__(t){this.active_window=t}Add_Program(t){return __awaiter(this,void 0,void 0,(function*(){const i=new Window.Instance({wall:this,program:t});return yield i.Ready(),i}))}}Instance.DEFAULT_RENDER_LIMIT=2;