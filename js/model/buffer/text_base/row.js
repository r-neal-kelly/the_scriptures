import*as Utils from"../../../utils.js";import*as Entity from"../../entity.js";import*as Data from"../../data.js";import*as Buffer from"./instance.js";export class Instance extends Entity.Instance{constructor({column:t,index:e,text:s}){super(),this.column=t,this.index=e,this.text=s,this.segments=[],0}Is_Blank(){return null==this.text}Buffer(){return this.Column().Buffer()}Column(){return this.column}Index(){return this.index}Text(){return 0,this.text}Min_Segment_Buffer_Count(){return Buffer.Use_Average_Counts()?Data.Singleton().Info().Avg_Macro_Segment_Count({line_index:this.Column().Line().Index(),column_index:this.Column().Index(),row_index:this.Index()}):Data.Singleton().Info().Max_Macro_Segment_Count({line_index:this.Column().Line().Index(),column_index:this.Column().Index(),row_index:this.Index()})}Max_Segment_Buffer_Count(){return this.Min_Segment_Buffer_Count()}Segment_Count(){return this.segments.length}Segment_At(t){return 0,t<this.Segment_Count()?this.segments[t]:this.Blank_Segment(t)}Push_Segment(t){0,this.segments.push(t)}Is_Transparent(){return 0,""===this.Text().Value()}Is_Centered(){return 0,this.Text().Can_Be_Centered()&&this.Text().Is_Centered()}Is_Padded(){return 0,this.Text().Can_Be_Padded()&&this.Text().Is_Padded()}Padding_Count(){return 0,0,this.Text().Can_Be_Padded()?this.Text().Padding_Count():0}Padding_Direction(){return 0,0,this.Buffer().Default_Language_Direction()}}