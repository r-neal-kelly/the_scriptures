import*as Text from"../../text.js";import*as Text_Base from"../text_base.js";import*as Segment from"./segment.js";export class Instance extends Text_Base.Row.Instance{constructor({column:e,index:t,text:n}){if(super({column:e,index:t,text:n}),!this.Is_Blank())if(""===this.Text().Value()){const e=new Text.Segment.Instance({segment_type:Text.Segment.Type.MACRO,index:0});e.Add_Item(new Text.Part.Instance({part_type:Text.Part.Type.POINT,index:0,value:"Â ",status:Text.Part.Status.GOOD,style:Text.Part.Style._NONE_,language:null})),this.Push_Segment(new Segment.Instance({row:this,index:0,text:e}))}else for(let e=0,t=this.Text().Macro_Segment_Count();e<t;e+=1)this.Push_Segment(new Segment.Instance({row:this,index:e,text:this.Text().Macro_Segment(e)}))}Blank_Segment(){return Instance.blank_segment}}Instance.blank_segment=new Segment.Instance({row:null,index:null,text:null});