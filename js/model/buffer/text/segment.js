import*as Utils from"../../../utils.js";import*as Entity from"../../entity.js";import*as Text from"../../text.js";import*as Item from"./item.js";export class Instance extends Entity.Instance{static Min_Item_Count(){return Instance.min_item_count}static Set_Min_Item_Count(t){0,Instance.min_item_count=t}constructor({row:t,index:e,text:n}){if(super(),this.row=t,this.index=e,this.text=n,this.items=[],null==n)0,0;else{0,0;for(let t=0,e=n.Item_Count();t<e;t+=1)this.items.push(new Item.Instance({segment:this,index:t,text:n.Item(t)}))}this.Add_Dependencies(this.items)}Row(){return 0,this.row}Index(){return 0,this.index}Text(){return 0,this.text}Item_Count(){return this.items.length}Item_At(t){return 0,t<this.Item_Count()?this.items[t]:Instance.blank_item}Is_Blank(){return null==this.text}Has_Left_To_Right_Style(){return this.Text().Segment_Type()===Text.Segment.Type.MACRO_LEFT_TO_RIGHT}Has_Right_To_Left_Style(){return this.Text().Segment_Type()===Text.Segment.Type.MACRO_RIGHT_TO_LEFT}}Instance.min_item_count=2,Instance.blank_item=new Item.Instance({segment:null,index:null,text:null});