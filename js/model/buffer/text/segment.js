import*as Utils from"../../../utils.js";import*as Entity from"../../entity.js";import*as Text from"../../text.js";import*as Item from"./item.js";export class Instance extends Entity.Instance{constructor({buffer:t,row:e,index:s,text:n}){if(super(),this.buffer=t,this.row=e,this.index=s,this.text=n,this.items=[],null==n)0,0;else{0,0;for(let t=0,e=n.Item_Count();t<e;t+=1)this.items.push(new Item.Instance({buffer:this.buffer,segment:this,index:t,text:n.Item(t)}))}this.Add_Dependencies(this.items)}Buffer(){return this.buffer}Row(){return 0,this.row}Index(){return 0,this.index}Text(){return 0,this.text}Min_Item_Count(){return this.Buffer().Min_Item_Count()}Item_Count(){return this.items.length}Item_At(t){return 0,t<this.Item_Count()?this.items[t]:this.Buffer().Blank_Item()}Is_Blank(){return null==this.text}Has_Left_To_Right_Style(){return this.Text().Segment_Type()===Text.Segment.Type.MACRO_LEFT_TO_RIGHT}Has_Right_To_Left_Style(){return this.Text().Segment_Type()===Text.Segment.Type.MACRO_RIGHT_TO_LEFT}}