import*as Languages from"../../languages.js";import*as Text_Base from"../text_base.js";import*as Line from"./line.js";export class Instance extends Text_Base.Instance{constructor({default_language_name:e,underlying_font_size_px:n,text:s,results:t,is_showing_commands:a}){super({default_language_name:e,default_font_name:Languages.Singleton().Default_Global_Font_Name(e),underlying_font_size_px:n,text:s}),this.is_showing_commands=a;let i=0;for(let e=0,n=t.length;e<n;e+=1){const n=t[e],a=n.Line_Index();for(;i<a;)this.Push_Line(new Line.Instance({buffer:this,index:i,text:null,result:null})),i+=1;this.Push_Line(new Line.Instance({buffer:this,index:a,text:s.Line(a),result:n})),i+=1}}Override_Font_Name(e){return Languages.Singleton().Default_Global_Font_Name(e)}Blank_Line(e){return new Line.Instance({buffer:this,index:e,text:null,result:null})}Is_Showing_Commands(){return this.is_showing_commands}Toggle_Showing_Commands(){this.is_showing_commands=!this.is_showing_commands}}