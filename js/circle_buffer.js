import*as Utils from"./utils.js";export class Instance{constructor({capacity:t,initial_unit:s=null}){0,this.buffer=new Array(t),this.first_index=0,this.count=0,this.initial_unit=s,this.buffer.fill(s,0,t)}Count(){return this.count}Length(){return this.count}Capacity(){return this.buffer.length}Is_Empty(){return this.count<1}Is_Full(){return this.count===this.buffer.length}Has_Units(){return this.count>0}Has_Space(){return this.count<this.buffer.length}Add_Front(t){0,this.first_index>0?this.first_index-=1:this.first_index=this.buffer.length-1,this.buffer[this.first_index]=t,this.count+=1}Remove_Front(){0;const t=this.buffer[this.first_index];return this.buffer[this.first_index]=this.initial_unit,this.first_index+=1,this.first_index===this.buffer.length&&(this.first_index=0),this.count-=1,t}Add_Back(t){0;let s=this.first_index+this.count;s>=this.buffer.length&&(s-=this.buffer.length),this.buffer[s]=t,this.count+=1}Remove_Back(){0;let t=this.first_index+this.count-1;t>=this.buffer.length&&(t-=this.buffer.length);const s=this.buffer[t];return this.buffer[t]=this.initial_unit,this.count-=1,s}Add_At(t,s){0,0,0;let i=this.first_index+this.count;i>=this.buffer.length&&(i-=this.buffer.length);let e=this.count-t;for(;e>0;){let t=i;i-=1,i<0&&(i+=this.buffer.length),this.buffer[t]=this.buffer[i],e-=1}this.buffer[i]=s,this.count+=1}Remove_At(t){0,0,0;let s=this.first_index+t;s>=this.buffer.length&&(s-=this.buffer.length);const i=this.buffer[s];let e=this.count-1-t;for(;e>0;){let t=s;s+=1,s>=this.buffer.length&&(s-=this.buffer.length),this.buffer[t]=this.buffer[s],e-=1}return this.buffer[s]=this.initial_unit,this.count-=1,i}At(t){0,0;let s=this.first_index+t;return s>=this.buffer.length&&(s-=this.buffer.length),this.buffer[s]}Index_Of(t){for(let s=0,i=this.count;s<i;s+=1)if(this.At(s)===t)return s;return null}Has_Unit(t){return null!=this.Index_Of(t)}}