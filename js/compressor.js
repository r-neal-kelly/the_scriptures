import*as Utils from"./utils.js";import*as Unicode from"./unicode.js";export const LZSS_MAX_MEMORY_LENGTH=1114112;export const LZSS_ESCAPE_INDEX=16;export const LZSS_ESCAPE_STRING=String.fromCodePoint(16);export const LZSS_FIRST_SURROGATE_INDEX=Unicode.LEADING_SURROGATE.FIRST;export const LZSS_LAST_SURROGATE_INDEX=Unicode.TRAILING_SURROGATE.LAST;var LZSS_Flags;!function(t){t[t.SURROGATE_OFFSET=1]="SURROGATE_OFFSET",t[t.SURROGATE_LENGTH=2]="SURROGATE_LENGTH",t[t.UNUSED_1=4]="UNUSED_1",t[t.UNUSED_2=8]="UNUSED_2"}(LZSS_Flags||(LZSS_Flags={}));class Window{constructor({text:t,max_memory_length:e}){this.text=t,this.text_index=0,this.memory="",this.max_memory_length=e,this.matches_buffer_a=[],this.matches_buffer_b=[]}Initial_Matches(t,e){0,t.splice(0,t.length);let n=new Unicode.Iterator({text:this.memory});for(;!n.Is_At_End();n=n.Next())if(n.Point()===e){const o=n.Index();t.push([o,o+e.length])}}Matches(t,e,n){e.splice(0,e.length);for(const[o,s]of t){const t=s-o,_=t+Unicode.First_Point(this.memory.slice(s)).length,i=o+_;_>t&&n.length>=_&&n.slice(0,_)===this.memory.slice(o,i)&&e.push([o,i])}}Move_Memory(t){for(;this.memory.length+t>this.max_memory_length;){const t=Unicode.First_Point(this.memory);this.text_index+=t.length,this.memory=this.memory.slice(t.length)}this.memory=this.text.slice(this.text_index,this.text_index+this.memory.length+t)}Create_Token(t,e){0,0;const n=(e-=1)>=LZSS_FIRST_SURROGATE_INDEX&&e<=LZSS_LAST_SURROGATE_INDEX;let o=0;return(t-=1)>=LZSS_FIRST_SURROGATE_INDEX&&t<=LZSS_LAST_SURROGATE_INDEX&&(o|=LZSS_Flags.SURROGATE_OFFSET,t-=LZSS_FIRST_SURROGATE_INDEX),n&&(o|=LZSS_Flags.SURROGATE_LENGTH,e-=LZSS_FIRST_SURROGATE_INDEX),String.fromCodePoint(o)+String.fromCodePoint(t)+String.fromCodePoint(e)}Can_Use_Token(t,e,n){return n?Unicode.Expected_UTF_8_Unit_Count(t)<Unicode.Expected_UTF_8_Unit_Count(e):t.length<e.length}Create_Non_Token(t){return 0,t.codePointAt(0)>16?t:LZSS_ESCAPE_STRING+t}Token_Or_Non_Token(t,e){0;const n=t.Point();if(this.Initial_Matches(this.matches_buffer_a,n),this.matches_buffer_a.length>0){const o=t.Points();let s=this.matches_buffer_b,_=this.matches_buffer_a,i=s;for(;_.length>0;)i=s,s=_,_=i,this.Matches(s,_,o);const r=s[s.length-1],S=this.memory.length-r[0],h=r[1]-r[0],l=this.Create_Token(S,h);return this.Can_Use_Token(l,o.slice(0,h),e)?(this.Move_Memory(h),[l,new Unicode.Iterator({text:t.Text(),index:t.Index()+h})]):(this.Move_Memory(n.length),[this.Create_Non_Token(n),new Unicode.Iterator({text:t.Text(),index:t.Index()+n.length})])}return this.Move_Memory(n.length),[this.Create_Non_Token(n),new Unicode.Iterator({text:t.Text(),index:t.Index()+n.length})]}}function LZSS_Read_Decompressed_Length(t){let e=new Unicode.Iterator({text:t}),n=0;0;let o=e.Point().codePointAt(0)+1;for(e=e.Next();o>0;)0,n+=e.Point().codePointAt(0)+1,e=e.Next(),o-=1;return[n,e]}export function LZSS_Compress(t,{max_memory_length:e,optimize_for_utf_8_encoding:n}={max_memory_length:1024,optimize_for_utf_8_encoding:!0}){0,0;const o=new Window({text:t,max_memory_length:e}),s=t.length%LZSS_FIRST_SURROGATE_INDEX,_=Math.floor(t.length/LZSS_FIRST_SURROGATE_INDEX),i=_+(s>0?1:0);0;let r="";r+=String.fromCodePoint(i-1);for(let t=0,e=_;t<e;t+=1)r+=String.fromCodePoint(LZSS_FIRST_SURROGATE_INDEX-1);s>0&&(r+=String.fromCodePoint(s-1)),0;let S=new Unicode.Iterator({text:t});for(;!S.Is_At_End();){const[t,e]=o.Token_Or_Non_Token(S,n);r+=t,S=e}return r}export function LZSS_Decompress(t){let[e,n]=LZSS_Read_Decompressed_Length(t);const o=new Uint16Array(e);let s=0;for(;!n.Is_At_End();){const t=n.Point();if(t===LZSS_ESCAPE_STRING){n=n.Next();const t=n.Point();n=n.Next(),o[s]=t.charCodeAt(0),s+=1,2===t.length&&(o[s]=t.charCodeAt(1),s+=1)}else{const e=t.codePointAt(0);if(e<16){const t=e;let _,i;n=n.Next(),_=n.Point().codePointAt(0)+1,0!=(t&LZSS_Flags.SURROGATE_OFFSET)&&(_+=LZSS_FIRST_SURROGATE_INDEX),n=n.Next(),i=n.Point().codePointAt(0)+1,0!=(t&LZSS_Flags.SURROGATE_LENGTH)&&(i+=LZSS_FIRST_SURROGATE_INDEX),n=n.Next();const r=s-_,S=r+i;o.copyWithin(s,r,S),s+=i}else{const e=t;n=n.Next(),o[s]=e.charCodeAt(0),s+=1,2===e.length&&(o[s]=e.charCodeAt(1),s+=1)}}}return 0,Utils.Is_Big_Endian()?new TextDecoder("utf-16be").decode(o):new TextDecoder("utf-16le").decode(o)}