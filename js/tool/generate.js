var __awaiter=this&&this.__awaiter||function(e,t,s,n){return new(s||(s=Promise))((function(o,i){function r(e){try{u(n.next(e))}catch(e){i(e)}}function a(e){try{u(n.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,a)}u((n=n.apply(e,t||[])).next())}))};import*as fs from"fs";import*as Utils from"../utils.js";import*as Data from"../model/data.js";import*as Text from"../model/text.js";function Read_Directory(e){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(t,s){fs.readdir(e,{withFileTypes:!0},(function(e,n){null!=e?s(e):t(n)}))}))}))}function Read_File(e){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(t,s){fs.readFile(e,"utf8",(function(e,n){null!=e?s(e):t(n)}))}))}))}function Write_File(e,t){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(s,n){fs.writeFile(e,t,"utf8",(function(e){null!=e?n(e):s()}))}))}))}function Folder_Names(e){return __awaiter(this,void 0,void 0,(function*(){const t=[],s=yield Read_Directory(e);for(let e of s)e.isDirectory()&&t.push(e.name);return t}))}function File_Names(e){return __awaiter(this,void 0,void 0,(function*(){const t=[],s=yield Read_Directory(e);for(let e of s)e.isFile()&&t.push(e.name);return t}))}class Unique_Names{constructor(){this.books=new Set,this.languages=new Set,this.versions=new Set}Add_Book(e){this.books.add(e)}Add_Language(e){this.languages.add(e)}Add_Version(e){this.versions.add(e)}Books(){return Array.from(this.books).sort()}Languages(){return Array.from(this.languages).sort()}Versions(){return Array.from(this.versions).sort()}}class Unique_Parts{constructor(){this.parts={}}Add(e){this.parts.hasOwnProperty(e)?(Utils.Assert(this.parts[e]<Number.MAX_SAFE_INTEGER,"Cannot add more of this unique part!"),this.parts[e]+=1):this.parts[e]=1}Values(){return Object.keys(this.parts).sort(function(e,t){return this.parts[t]-this.parts[e]}.bind(this))}Count(e){return Utils.Assert(this.parts.hasOwnProperty(e),"Does not have part."),this.parts[e]}}function Filter_File_Names(e){return/\.txt$/.test(e)&&!/COPY\.txt$/.test(e)}function Generate(){return __awaiter(this,void 0,void 0,(function*(){const e={tree:{books:[]},unique_book_names:[],unique_language_names:[],unique_version_names:[],unique_part_values:[]},t=new Unique_Names,s=new Unique_Parts,n="./Data",o=`${n}/Books`;for(const n of(yield Folder_Names(o)).sort()){const i=`${o}/${n}`,r={name:n,languages:[]};e.tree.books.push(r),t.Add_Book(n);for(const e of(yield Folder_Names(i)).sort()){const n=`${i}/${e}`,o={name:e,versions:[]};r.languages.push(o),t.Add_Language(e);for(const e of(yield Folder_Names(n)).sort()){const i=`${n}/${e}`,r={name:e,files:[]},a=new Text.Dictionary.Instance({json:yield Read_File(`${i}/Dictionary.json`)}),u=(yield File_Names(i)).filter(Filter_File_Names).sort();o.versions.push(r),t.Add_Version(e);for(const[e,t]of u.entries()){const n=`${i}/${t}`,o={name:t.replace(/\.[^.]*$/,".comp"),index:e},u=new Text.Instance({dictionary:a,value:yield Read_File(n)});r.files.push(o);for(let e=0,t=u.Line_Count();e<t;e+=1){const t=u.Line(e);for(let e=0,n=t.Macro_Part_Count();e<n;e+=1){const n=t.Macro_Part(e);s.Add(n.Value())}}}}}}e.unique_book_names=t.Books(),e.unique_language_names=t.Languages(),e.unique_version_names=t.Versions(),e.unique_part_values=s.Values(),yield Write_File(`${n}/Info.json`,JSON.stringify(e));const i=new Data.Compressor.Instance({unique_parts:e.unique_part_values});for(const e of(yield Folder_Names(o)).sort()){const t=`${o}/${e}`;for(const e of(yield Folder_Names(t)).sort()){const s=`${t}/${e}`;for(const e of(yield Folder_Names(s)).sort()){const t=`${s}/${e}`,n=(yield File_Names(t)).filter(Filter_File_Names).sort(),o=[],r=yield Read_File(`${t}/Dictionary.json`),a=new Text.Dictionary.Instance({json:r}),u=i.Compress_Dictionary(r),l=i.Decompress_Dictionary(u);Utils.Assert(l===r,"Invalid dictionary decompression!"),yield Write_File(`${t}/${Data.Version.Dictionary.Symbol.NAME}.${Data.Version.Dictionary.Symbol.EXTENSION}`,u);const c=new Data.Compressor.Instance({unique_parts:Array.from(a.Unique_Parts())});for(const e of n){const s=`${t}/${e}`,n=yield Read_File(s);o.push(n);const i=c.Compress({value:n,dictionary:a}),r=c.Decompress({value:i,dictionary:a});Utils.Assert(r===n,"Invalid decompression!"),yield Write_File(`${t}/${e.replace(/\.[^.]*$/,".comp")}`,i)}const d=o.join(Data.Version.Symbol.FILE_BREAK),_=c.Compress({value:d,dictionary:a}),f=c.Decompress({value:_,dictionary:a});Utils.Assert(f===d,"Invalid decompression!"),yield Write_File(`${t}/${Data.Version.Text.Symbol.NAME}.${Data.Version.Text.Symbol.EXTENSION}`,_)}}}}))}!function(){__awaiter(this,void 0,void 0,(function*(){yield Generate()}))}();