var __awaiter=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(_,s){function i(e){try{r(o.next(e))}catch(e){s(e)}}function a(e){try{r(o.throw(e))}catch(e){s(e)}}function r(e){var t;e.done?_(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}r((o=o.apply(e,t||[])).next())}))};import*as process from"process";import*as Utils from"../utils.js";import*as Unicode from"../unicode.js";import*as Compressor from"../compressor.js";import*as Language from"../model/language.js";import*as Data from"../model/data.js";import*as Text from"../model/text.js";import*as File_System from"./file_system.js";const TIMESTAMP_PATH="./.timestamp",README_PATH="./README.md",DEFAULT_LAST_TIMESTAMP=0,IS_COMPRESSED_FILE_REGEX=new RegExp(`\\.${Data.Consts.FILE_EXTENSION}$`);class Unique_Parts{constructor(){this.parts={}}Add(e){this.parts.hasOwnProperty(e)?(0,this.parts[e]+=1):this.parts[e]=1}Values(){return Object.keys(this.parts).sort(function(e,t){return this.parts[t]-this.parts[e]}.bind(this))}Count(e){return 0,this.parts[e]}}function Read_And_Sort_File_Names(e){return __awaiter(this,void 0,void 0,(function*(){const t=(yield File_System.File_Names(e)).filter((function(e){return/\.txt$/.test(e)&&!/COPY\.txt$/.test(e)}));if(File_System.Has_File(`${e}/${Data.Consts.ORDER_JSON_NAME}`)){const n=JSON.parse(yield File_System.Read_File(`${e}/${Data.Consts.ORDER_JSON_NAME}`)),o=[];for(const e of t)n.includes(e)||o.push(e);return 0,n}return t.sort()}))}function Read_File_Text(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield File_System.Read_And_Write_File_With_No_Carriage_Returns(e);return 0,t}))}function Should_Version_Be_Updated(e,t,n){return __awaiter(this,void 0,void 0,(function*(){for(const n of[`${t}/${Data.Consts.INFO_JSON_NAME}`,`${t}/${Data.Consts.DICTIONARY_JSON_NAME}`,`${t}/${Data.Consts.UNIQUE_PARTS_NAME}`])if(!File_System.Has_File(n)||(yield File_System.Read_Entity_Last_Modified_Time(n))>e)return!0;if(File_System.Has_File(`${t}/${Data.Consts.ORDER_JSON_NAME}`)&&(yield File_System.Read_Entity_Last_Modified_Time(`${t}/${Data.Consts.ORDER_JSON_NAME}`))>e)return!0;for(const o of n){const n=`${t}/${o.replace(/\.[^.]*$/,`.${Data.Consts.FILE_EXTENSION}`)}`;if(!File_System.Has_File(n)||(yield File_System.Read_Entity_Last_Modified_Time(`${t}/${o}`))>e||(yield File_System.Read_Entity_Last_Modified_Time(n))>e)return!0}return!1}))}function Delete_Compiled_Files(e){return __awaiter(this,void 0,void 0,(function*(){const t=(yield File_System.File_Names(e)).filter((function(e){return IS_COMPRESSED_FILE_REGEX.test(e)}));yield Promise.all(t.map((t=>File_System.Delete_File(`${e}/${t}`))))}))}function Decompression_Line_Mismatches(e,t){const n=e.split(/\r?\n/),o=t.split(/\r?\n/);let _="";for(let e=0,t=n.length;e<t;e+=1)e<o.length?n[e]!==o[e]&&(_+=`${e}: ${n[e]} !== ${o[e]}\n`):_+=`${e}: <missing line>\n`;return""===_?"<no mismatching lines>":_}function Generate(e){return __awaiter(this,void 0,void 0,(function*(){const t=e?0:File_System.Has_File("./.timestamp")?yield File_System.Read_Entity_Last_Modified_Time("./.timestamp"):0,n=new Data.Info.Instance({});0===t?console.log("    Forcefully generating all files..."):console.log("    Only generating out-of-date files..."),yield function(){return __awaiter(this,void 0,void 0,(function*(){const e=Data.Consts.BOOKS_PATH;for(const o of(yield File_System.Folder_Names(e)).sort()){const _=`${e}/${o}`,s={name:o,languages:[]};n.Tree().books.push(s),n.Add_Unique_Book_Name(o);for(const e of(yield File_System.Folder_Names(_)).sort()){const i=`${_}/${e}`,a={name:e,versions:[]};s.languages.push(a),n.Add_Unique_Language_Name(e);for(const _ of(yield File_System.Folder_Names(i)).sort()){const s=`${i}/${_}`,r=yield Read_And_Sort_File_Names(s),l={name:_,files:r.map(Utils.Remove_File_Extension)};if(a.versions.push(l),n.Add_Unique_Version_Name(_),yield Should_Version_Be_Updated(t,s,r)){const t=new Data.Version.Info.Instance({}),n=yield File_System.Read_File(`${s}/${Data.Consts.DICTIONARY_JSON_NAME}`),i=new Text.Dictionary.Instance({json:n}),a=new Unique_Parts,l=[];t.Increment_File_Count(e,r.length),i.Validate(),yield Delete_Compiled_Files(s);for(const n of r){const r=`${s}/${n}`,u=yield Read_File_Text(r),c=new Text.Instance({dictionary:i,value:u});t.Increment_Line_Count(e,c.Line_Count()),t.Update_Buffer_Counts(c),l.push(u);for(let s=0,i=c.Line_Count();s<i;s+=1){const i=c.Line(s);for(let r=0,l=i.Column_Count();r<l;r+=1){const l=i.Column(r);for(let i=0,u=l.Row_Count();i<u;i+=1){const u=l.Row(i);for(let l=0,c=u.Macro_Part_Count();l<c;l+=1){const c=u.Macro_Part(l),m=c.Part_Type(),d=c.Value(),C=d.length,g=Unicode.Point_Count(d),$=c.Language()?c.Language():e;if(0,c.Is_Error()&&0,a.Add(d),t.Increment_Unit_Count($,C),t.Increment_Point_Count($,g),m===Text.Part.Type.LETTER)t.Increment_Letter_Count($,1),t.Increment_Part_Count($,1);else if(m===Text.Part.Type.MARKER)t.Increment_Marker_Count($,1),t.Increment_Part_Count($,1);else if(m===Text.Part.Type.WORD)t.Increment_Letter_Count($,g),t.Increment_Word_Count($,1),t.Increment_Part_Count($,1);else if(m===Text.Part.Type.BREAK)t.Increment_Marker_Count($,g),t.Increment_Break_Count($,1),t.Increment_Part_Count($,1);else if(m===Text.Part.Type.COMMAND){const e=c;t.Increment_Meta_Letter_Count($,g),e.Is_Last_Of_Split()||(t.Increment_Meta_Word_Count($,1),t.Increment_Part_Count($,1))}}}}}}const u=[],c=a.Values(),m=JSON.stringify(c),d=Compressor.LZSS_Compress(m),C=Compressor.LZSS_Decompress(d),g=new Data.Version.Compressor.Instance({unique_parts:c}),$=g.Compress_Dictionary({dictionary_value:n}),f=g.Decompress_Dictionary({dictionary_value:$}),S=[];0,0,t.Finalize(),u.push(File_System.Write_File(`${s}/${Data.Consts.INFO_JSON_NAME}`,t.JSON_String())),u.push(File_System.Write_File(`${s}/${Data.Consts.UNIQUE_PARTS_NAME}`,d)),u.push(File_System.Write_File(`${s}/${Data.Consts.DICTIONARY_NAME}`,$));for(let t=0,n=r.length;t<n;t+=1){const n=r[t],a=l[t],c=g.Compress_File({dictionary:i,file_value:a}),m=g.Decompress_File({dictionary:i,file_value:c});0,S.push(c),u.push(File_System.Write_File(`${s}/${n.replace(/\.[^.]*$/,`.${Data.Consts.FILE_EXTENSION}`)}`,c))}const p=S.join(Data.Consts.VERSION_TEXT_FILE_BREAK);u.push(File_System.Write_File(`${s}/${Data.Consts.VERSION_TEXT_NAME}`,p)),yield Promise.all(u),console.log(`        Generated ${o}/${e}/${_}...`)}const u=new Data.Version.Info.Instance({json:yield File_System.Read_File(`${s}/${Data.Consts.INFO_JSON_NAME}`)});n.Increment_Unit_Counts(u.Language_Unit_Counts()),n.Increment_Point_Counts(u.Language_Point_Counts()),n.Increment_Letter_Counts(u.Language_Letter_Counts()),n.Increment_Marker_Counts(u.Language_Marker_Counts()),n.Increment_Meta_Letter_Counts(u.Language_Meta_Letter_Counts()),n.Increment_Word_Counts(u.Language_Word_Counts()),n.Increment_Break_Counts(u.Language_Break_Counts()),n.Increment_Meta_Word_Counts(u.Language_Meta_Word_Counts()),n.Increment_Part_Counts(u.Language_Part_Counts()),n.Increment_Line_Counts(u.Language_Line_Counts()),n.Increment_File_Counts(u.Language_File_Counts()),n.Increment_Book_Count(e,1),n.Update_Max_File_Count(u.Total_File_Count()),n.Update_Buffer_Counts(u)}}}n.Finalize();const o=n.JSON_String(),_=Compressor.LZSS_Compress(o),s=Compressor.LZSS_Decompress(_);0,yield File_System.Write_File(Data.Consts.INFO_PATH,_)}))}(),yield function(){return __awaiter(this,void 0,void 0,(function*(){let e=yield File_System.Read_File(README_PATH);const t="## Stats";let o=null,_=null;for(let a=0,r=e.length;a<r;a+=1){const l=e.slice(a);null===o?l.slice(0,t.length)===t&&(o=a):null===_&&"##"===l.slice(0,"##".length)&&(_=a)}if(null!==o){function s(e,t){let n="";for(const o of t)n+=`${e}    - ${o}\n`;return n}function i(e,t){let n="";for(const[o,_,s]of t)n+=`${e}    - ${o}: ${Utils.Add_Commas_To_Number(_)} (~${s}%)\n`;return n}null===_&&(_=e.length),e=e.slice(0,o)+"## Stats\n\n"+`- Unique Languages: ${n.Unique_Language_Name_Count_String()}\n`+s("",n.Unique_Language_Names())+`- Unique Versions: ${n.Unique_Version_Name_Count_String()}\n`+s("",n.Unique_Version_Names())+`- Unique Books: ${n.Unique_Book_Name_Count_String()}\n`+s("",n.Unique_Book_Names())+"\n<br>\n\n"+`- Total Books: ${n.Total_Book_Count_String()}\n`+i("",n.Language_Book_Counts_And_Percents())+`- Total Files: ${n.Total_File_Count_String()}\n`+i("",n.Language_File_Counts_And_Percents())+`- Total Lines: ${n.Total_Line_Count_String()}\n`+i("",n.Language_Line_Counts_And_Percents())+`- Total Parts: ${n.Total_Part_Count_String()}\n    - <i>By Language</i>\n`+i("    ",n.Language_Part_Counts_And_Percents())+"    - <i>By Components</i>\n"+`        - Words: ${n.Total_Word_Count_String()} (~${n.Total_Word_Percent()}%)\n`+i("        ",n.Language_Word_Counts_And_Percents())+`        - Meta-Words: ${n.Total_Meta_Word_Count_String()} (~${n.Total_Meta_Word_Percent()}%)\n`+i("        ",n.Language_Meta_Word_Counts_And_Percents())+`        - Non-Words: ${n.Total_Break_Count_String()} (~${n.Total_Break_Percent()}%)\n`+i("        ",n.Language_Break_Counts_And_Percents())+`- Total Unicode Points: ${n.Total_Point_Count_String()}\n    - <i>By Language</i>\n`+i("    ",n.Language_Point_Counts_And_Percents())+"    - <i>By Components</i>\n"+`        - Letters: ${n.Total_Letter_Count_String()} (~${n.Total_Letter_Percent()}%)\n`+i("        ",n.Language_Letter_Counts_And_Percents())+`        - Meta-Letters: ${n.Total_Meta_Letter_Count_String()} (~${n.Total_Meta_Letter_Percent()}%)\n`+i("        ",n.Language_Meta_Letter_Counts_And_Percents())+`        - Non-Letters: ${n.Total_Marker_Count_String()} (~${n.Total_Marker_Percent()}%)\n`+i("        ",n.Language_Marker_Counts_And_Percents())+e.slice(_,e.length)}yield File_System.Write_File(README_PATH,e)}))}(),yield File_System.Write_File("./.timestamp","")}))}!function(){__awaiter(this,void 0,void 0,(function*(){const e=process.argv.slice(2);yield Generate(e.includes("-f")||e.includes("--force"))}))}();