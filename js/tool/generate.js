var __awaiter=this&&this.__awaiter||function(e,t,s,o){return new(s||(s=Promise))((function(i,n){function r(e){try{u(o.next(e))}catch(e){n(e)}}function a(e){try{u(o.throw(e))}catch(e){n(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,a)}u((o=o.apply(e,t||[])).next())}))};import*as fs from"fs";import*as Utils from"../utils.js";import*as Data from"../model/data.js";import*as Text from"../model/text.js";function Read_Directory(e){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(t,s){fs.readdir(e,{withFileTypes:!0},(function(e,o){null!=e?s(e):t(o)}))}))}))}function Read_File(e){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(t,s){fs.readFile(e,"utf8",(function(e,o){null!=e?s(e):t(o)}))}))}))}function Write_File(e,t){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(s,o){fs.writeFile(e,t,"utf8",(function(e){null!=e?o(e):s()}))}))}))}function Folder_Names(e){return __awaiter(this,void 0,void 0,(function*(){const t=[],s=yield Read_Directory(e);for(let e of s)e.isDirectory()&&t.push(e.name);return t}))}function File_Names(e){return __awaiter(this,void 0,void 0,(function*(){const t=[],s=yield Read_Directory(e);for(let e of s)e.isFile()&&t.push(e.name);return t}))}class Unique_Names{constructor(){this.books=new Set,this.languages=new Set,this.versions=new Set}Add_Book(e){this.books.add(e)}Add_Language(e){this.languages.add(e)}Add_Version(e){this.versions.add(e)}Books(){return Array.from(this.books).sort()}Languages(){return Array.from(this.languages).sort()}Versions(){return Array.from(this.versions).sort()}}class Unique_Parts{constructor(){this.parts={}}Add(e){this.parts.hasOwnProperty(e)?(Utils.Assert(this.parts[e]<Number.MAX_SAFE_INTEGER,"Cannot add more of this unique part!"),this.parts[e]+=1):this.parts[e]=1}Values(){return Object.keys(this.parts).sort(function(e,t){return this.parts[t]-this.parts[e]}.bind(this))}Count(e){return Utils.Assert(this.parts.hasOwnProperty(e),"Does not have part."),this.parts[e]}}function Filter_File_Names(e){return/\.txt$/.test(e)&&!/COPY\.txt$/.test(e)}function Generate(){return __awaiter(this,void 0,void 0,(function*(){const e={tree:{books:[]},unique_book_names:[],unique_language_names:[],unique_version_names:[],unique_part_values:{}},t=new Unique_Names,s={},o="./data",i=`${o}/Books`;for(const o of(yield Folder_Names(i)).sort()){const n=`${i}/${o}`,r={name:o,languages:[]};e.tree.books.push(r),t.Add_Book(o);for(const e of(yield Folder_Names(n)).sort()){const o=`${n}/${e}`,i={name:e,versions:[]};r.languages.push(i),t.Add_Language(e),null==s[e]&&(s[e]=new Unique_Parts);for(const n of(yield Folder_Names(o)).sort()){const r=`${o}/${n}`,a={name:n,files:[]},u=new Text.Dictionary.Instance({json:yield Read_File(`${r}/Dictionary.json`)}),l=(yield File_Names(r)).filter(Filter_File_Names).sort();i.versions.push(a),t.Add_Version(n);for(const[t,o]of l.entries()){const i=`${r}/${o}`,n={name:o.replace(/\.[^.]*$/,".comp"),index:t},l=new Text.Instance({dictionary:u,value:yield Read_File(i)});a.files.push(n);for(let t=0,o=l.Line_Count();t<o;t+=1){const o=l.Line(t);for(let t=0,i=o.Macro_Part_Count();t<i;t+=1){const i=o.Macro_Part(t);s[e].Add(i.Value())}}}}}}e.unique_book_names=t.Books(),e.unique_language_names=t.Languages(),e.unique_version_names=t.Versions();for(const t of Object.keys(s))e.unique_part_values[t]=s[t].Values();yield Write_File(`${o}/Info.json`,JSON.stringify(e));for(const t of(yield Folder_Names(i)).sort()){const s=`${i}/${t}`;for(const t of(yield Folder_Names(s)).sort()){const o=`${s}/${t}`,i=new Data.Compressor.Instance({unique_parts:e.unique_part_values[t]});for(const e of(yield Folder_Names(o)).sort()){const t=`${o}/${e}`,s=(yield File_Names(t)).filter(Filter_File_Names).sort(),n=[],r=yield Read_File(`${t}/Dictionary.json`),a=new Text.Dictionary.Instance({json:r}),u=i.Compress_Dictionary(r),l=i.Decompress_Dictionary(u);Utils.Assert(l===r,"Invalid dictionary decompression!"),yield Write_File(`${t}/${Data.Version.Dictionary.Symbol.NAME}.${Data.Version.Dictionary.Symbol.EXTENSION}`,u);for(const e of s){const s=`${t}/${e}`,o=yield Read_File(s);n.push(o);const r=i.Compress({value:o,dictionary:a}),u=i.Decompress({value:r,dictionary:a});Utils.Assert(u===o,"Invalid decompression!"),yield Write_File(`${t}/${e.replace(/\.[^.]*$/,".comp")}`,r)}const c=n.join(Data.Version.Symbol.FILE_BREAK),d=i.Compress({value:c,dictionary:a}),_=i.Decompress({value:d,dictionary:a});Utils.Assert(_===c,"Invalid decompression!"),yield Write_File(`${t}/${Data.Version.Text.Symbol.NAME}.${Data.Version.Text.Symbol.EXTENSION}`,d)}}}}))}!function(){__awaiter(this,void 0,void 0,(function*(){yield Generate()}))}();