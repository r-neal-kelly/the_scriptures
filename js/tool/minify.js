var __awaiter=this&&this.__awaiter||function(i,n,e,t){return new(e||(e=Promise))((function(o,r){function c(i){try{a(t.next(i))}catch(i){r(i)}}function s(i){try{a(t.throw(i))}catch(i){r(i)}}function a(i){var n;i.done?o(i.value):(n=i.value,n instanceof e?n:new e((function(i){i(n)}))).then(c,s)}a((t=t.apply(i,n||[])).next())}))};import*as fs from"fs";import*as child_process from"child_process";function Read_Directory(i){return __awaiter(this,void 0,void 0,(function*(){return new Promise((function(n,e){fs.readdir(i,{withFileTypes:!0},(function(i,t){null!=i?e(i):n(t)}))}))}))}function Recursive_File_Paths(i,n=[]){return __awaiter(this,void 0,void 0,(function*(){const e=yield Read_Directory(i);for(let t of e)t.isDirectory()?yield Recursive_File_Paths(`${i}/${t.name}`,n):n.push(`${i}/${t.name}`);return n}))}function Minify(){return __awaiter(this,void 0,void 0,(function*(){const i=(yield Recursive_File_Paths("./js")).map((i=>`"${i}"`)),n=[];for(const e of i)n.push(new Promise((function(i){child_process.spawn("terser",[e,"-c","-m",`-o ${e}`],{shell:!0}).on("close",(function(){i()}))})));yield Promise.all(n)}))}!function(){__awaiter(this,void 0,void 0,(function*(){yield Minify()}))}();