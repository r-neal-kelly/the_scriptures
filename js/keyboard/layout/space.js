import*as Utils from"../../utils.js";import{Key}from"../key.js";export class Instance{constructor(e){this.lookup=Object.create(null);for(const t of e){const e=t[0];0;let o=this.lookup;for(const t of e.slice(0,e.length-1))0,null!=o[t]?(0,o=o[t]):(o[t]=Object.create(null),o=o[t]);const s=e[e.length-1];0,0;const r=t[1];if(Utils.Is.Array(r)){const e=r;o[s]=new Instance(e)}else{const e=r,n=t[2];0,o[s]=[e,n],Object.freeze(o[s])}}}Maybe_Space(e){let t=this.lookup;for(let o=0,s=e.Count();o<s;o+=1){const r=e.At(o);if(t[r]instanceof Instance)return o===s-1&&t[r];if(Utils.Is.Array(t[r]))return!1;if(null==t[r])return!1;t=t[r]}return!0}Maybe_Output(e){let t=this.lookup;for(let o=0,s=e.Count();o<s;o+=1){const r=e.At(o);if(Utils.Is.Array(t[r]))return o===s-1&&t[r];if(t[r]instanceof Instance)return!1;if(null==t[r])return!1;t=t[r]}return!0}}