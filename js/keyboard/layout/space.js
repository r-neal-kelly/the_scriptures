import*as Utils from"../../utils.js";import*as Reserved_Keys from"../reserved_keys.js";export class Instance{constructor(e){this.lookup=Object.create(null);for(const t of e){const e=t[0];0;let s=this.lookup;for(const t of e.slice(0,e.length-1))0,null!=s[t]?(0,s=s[t]):(s[t]=Object.create(null),s=s[t]);const r=e[e.length-1];0,0;const o=t[1];if(Utils.Is.Array(o)){const e=o;s[r]=new Instance(e)}else{const e=o,n=t[2];0,s[r]=[e,n],Object.freeze(s[r])}}}Maybe_Space(e){let t=this.lookup;for(let s=0,r=e.Count();s<r;s+=1){const o=e.At(s);if(t[o]instanceof Instance)return s===r-1&&t[o];if(Utils.Is.Array(t[o]))return!1;if(null==t[o])return!1;t=t[o]}return!0}Maybe_Output(e){let t=this.lookup;for(let s=0,r=e.Count();s<r;s+=1){const o=e.At(s);if(Utils.Is.Array(t[o]))return s===r-1&&t[o];if(t[o]instanceof Instance)return!1;if(null==t[o])return!1;t=t[o]}return!0}}