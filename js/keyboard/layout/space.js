import*as Utils from"../../utils.js";import{Key}from"../key.js";export class Instance{constructor(t){this.lookup=Object.create(null);for(const e of t){const t=e[0];0;let o=this.lookup;for(const e of t.slice(0,t.length-1))0,null!=o[e]?(0,o=o[e]):(o[e]=Object.create(null),o=o[e]);const s=t[t.length-1];0,0;const r=e[1];if(Utils.Is.String(r)){const t=r,n=e[2];o[s]=[t,n],Object.freeze(o[s])}else{const t=r;o[s]=new Instance(t)}}}Maybe_Space(t){let e=this.lookup;for(let o=0,s=t.Count();o<s;o+=1){const r=t.At(o);if(e[r]instanceof Instance)return o===s-1&&e[r];if(Utils.Is.Array(e[r]))return!1;if(null==e[r])return!1;e=e[r]}return!0}Maybe_Output(t){let e=this.lookup;for(let o=0,s=t.Count();o<s;o+=1){const r=t.At(o);if(Utils.Is.Array(e[r]))return o===s-1&&e[r];if(e[r]instanceof Instance)return!1;if(null==e[r])return!1;e=e[r]}return!0}}