import*as Utils from"../../utils.js";import*as Reserved_Keys from"../reserved_keys.js";export class Instance{constructor(e){this.lookup=Object.create(null);for(const t of e){const e=t[0];0;let s=this.lookup;for(const t of e.slice(0,e.length-1))0,null!=s[t]?(0,s=s[t]):(s[t]=Object.create(null),s=s[t]);const o=e[e.length-1];0,0;const n=t[1],r=t[2];if(Utils.Is.Array(n)||Utils.Is.Boolean(n)||Utils.Is.Array(r)||Utils.Is.Boolean(r)){const e=n,t=r;let l,a;Utils.Is.Array(e)?(l=new Instance(e),a=Utils.Is.Array(t)?new Instance(t):t?l:null):Utils.Is.Array(t)?(a=new Instance(t),l=e?a:null):(0,l=null,a=null),s[o]=[l,a],Object.freeze(s[o])}else if(Utils.Is.String(n)||Utils.Is.String(r)){const e=n,t=r;s[o]=[e,t],Object.freeze(s[o])}else 0}}Maybe_Space(e){let t=this.lookup;for(let s=0,o=e.Count();s<o;s+=1){const n=e.At(s);if(Utils.Is.Array(t[n]))return(t[n][0]instanceof Instance||t[n][1]instanceof Instance)&&(s===o-1&&t[n]);if(null==t[n])return!1;t=t[n]}return!0}Maybe_Output(e){let t=this.lookup;for(let s=0,o=e.Count();s<o;s+=1){const n=e.At(s);if(Utils.Is.Array(t[n]))return!(t[n][0]instanceof Instance||t[n][1]instanceof Instance)&&(s===o-1&&t[n]);if(null==t[n])return!1;t=t[n]}return!0}}