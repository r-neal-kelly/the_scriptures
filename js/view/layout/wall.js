var __awaiter=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{a(i.next(t))}catch(t){r(t)}}function l(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}a((i=i.apply(t,e||[])).next())}))};import*as Utils from"../../utils.js";import*as Event from"../../event.js";import*as Model from"../../model/layout/wall.js";import*as Events from"../events.js";import*as Entity from"../entity.js";import*as Window from"./window.js";export class Instance extends Entity.Instance{constructor({model:t,layout:e}){super({element:"div",parent:e,event_grid:e.Event_Grid()}),this.model=t,this.Live()}On_Life(){return[new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.AFTER,Events.WINDOW_TOGGLE_MAXIMIZATION,this.ID()),event_handler:this.After_Window_Toggle_Maximization,event_priority:0})]}On_Refresh(){const t=this.Model().Window_Count(),e=this.Child_Count(),n=t-e;if(n<0)for(let t=e,i=e+n;t>i;)t-=1,this.Abort_Child(this.Child(t));else if(n>0)for(let t=e,i=e+n;t<i;t+=1)new Window.Instance({model:()=>this.Model().Window_At(t),wall:this})}On_Reclass(){return["Wall"]}On_Restyle(){const t=this.Model(),e=t.Render_Type(),n=t.Render_Limit(),i=t.Window_Count(),o=t.Maximized_Window_Count(),r="grid-template-columns",s="grid-template-rows",l=e===Model.Render_Type.LANDSCAPE?r:s;return`\n            ${l}: repeat(${n}, ${100/n}%);\n            ${l===r?s:r}: repeat(${Math.ceil(i/n)+o}, 100%);\n        `}After_Window_Toggle_Maximization(){return __awaiter(this,void 0,void 0,(function*(){this.Reclass()}))}Model(){return this.model()}Layout(){return this.Parent()}Window_With_Model(t){for(let e=0,n=this.Child_Count();e<n;e+=1){const n=this.Child(e);if(n.Model()===t)return n}return 0,this.Child(0)}}