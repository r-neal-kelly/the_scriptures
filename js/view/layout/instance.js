import*as Utils from"../../utils.js";import*as Entity from"../entity.js";import*as Wall from"./wall.js";import*as Taskbar from"./taskbar.js";export class Instance extends Entity.Instance{constructor({model:n,root:t}){super({element:"div",parent:t,event_grid:t.Event_Grid()}),this.model=n,this.Live()}On_Life(){return this.Add_This_CSS("\n                .Layout {\n                    display: grid;\n                    grid-template-rows: 1fr auto;\n                    grid-template-columns: auto;\n\n                    width: 100%;\n                    height: 100%;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n\n                    color: white;\n                }\n            "),this.Add_Children_CSS("\n                .Wall {\n                    display: grid;\n                    \n                    width: 100%;\n                    height: 100%;\n                    padding: 0 2px;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                }\n\n                .Window {\n                    display: grid;\n                    grid-template-rows: auto 1fr;\n                    grid-template-columns: auto;\n\n                    width: 100%;\n                    height: 100%;\n\n                    overflow-x: auto;\n                    overflow-y: auto;\n\n                    border-color: white;\n                    border-style: solid;\n                    border-width: 1px;\n                }\n\n                .Minimized_Window {\n                    display: none;\n                }\n\n                .Maximized_Window {\n                    \n                }\n            "),[]}On_Refresh(){this.Has_Wall()&&this.Has_Taskbar()||(this.Abort_All_Children(),new Wall.Instance({model:()=>this.Model().Wall(),layout:this}),new Taskbar.Instance({model:()=>this.Model().Taskbar(),layout:this}))}On_Reclass(){return["Layout"]}Model(){return this.model()}Root(){return this.Parent()}Has_Wall(){return this.Has_Child(0)&&this.Child(0)instanceof Wall.Instance}Wall(){return 0,this.Child(0)}Has_Taskbar(){return this.Has_Child(1)&&this.Child(1)instanceof Taskbar.Instance}Taskbar(){return 0,this.Child(1)}}