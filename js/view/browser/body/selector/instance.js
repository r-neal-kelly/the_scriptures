var __awaiter=this&&this.__awaiter||function(t,e,n,s){return new(n||(n=Promise))((function(r,o){function i(t){try{a(s.next(t))}catch(t){o(t)}}function l(t){try{a(s.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,l)}a((s=s.apply(t,e||[])).next())}))};import*as Utils from"../../../../utils.js";import*as Event from"../../../../event.js";import*as Entity from"../../../entity.js";import*as Slots from"./slots.js";export class Instance extends Entity.Instance{constructor({model:t,body:e}){super({element:"div",parent:e,event_grid:e.Event_Grid()}),this.model=t,this.Live()}On_Life(){return[new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.AFTER,"Selector_Toggle",this.Body().Browser().ID()),event_handler:this.After_Selector_Toggle,event_priority:0})]}On_Refresh(){this.Has_Slots()||(this.Abort_All_Children(),new Slots.Instance({model:()=>this.Model().Slots(),selector:this}))}On_Reclass(){return["Selector"]}After_Selector_Toggle(){return __awaiter(this,void 0,void 0,(function*(){this.Refresh()}))}Model(){return this.model()}Body(){return this.Parent()}Has_Slots(){return this.Has_Child(0)&&this.Child(0)instanceof Slots.Instance}Slots(){return Utils.Assert(this.Has_Slots(),"Does not have slots."),this.Child(0)}}