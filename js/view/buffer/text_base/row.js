import*as Language from"../../../model/language.js";import*as Entity from"../../entity.js";export class Instance extends Entity.Instance{constructor({column:n,model:e,index:t}){super({element:"div",parent:n,event_grid:n.Event_Grid()}),this.model=e,this.index=t}On_Refresh(){const n=this.Model(),e=this.Child_Count();if(e>0&&n.Is_Blank())this.Skip_Children(),this.Element().classList.contains("Blank")&&this.Skip_Remaining_Siblings();else{const t=this.Column(),s=t.Line();for(let i=e,r=Math.max(n.Min_Segment_Count({line_index:s.Index(),column_index:t.Index(),row_index:this.Index()}),n.Segment_Count());i<r;i+=1)this.Add_Segment(i)}}On_Reclass(){const n=this.Model(),e=[];return e.push("Row"),n.Is_Blank()?e.push("Blank"):n.Is_Transparent()?e.push("Transparent_Row"):n.Is_Centered()?e.push("Centered_Row"):n.Is_Padded()&&e.push("Padded_Row"),e}On_Restyle(){const n=this.Model();if(n.Is_Blank())return"";if(n.Is_Padded()){const e=`${this.Buffer().Pad_EM(n.Padding_Count())}em`,t=n.Padding_Direction()===Language.Direction.LEFT_TO_RIGHT?"left":"right";return`\n                    margin-${t}: ${e};\n                    border-${t}-width: 1px;\n                `}return""}Model(){return this.model()}Index(){return this.index}Buffer(){return this.Column().Buffer()}Column(){return this.Parent()}}