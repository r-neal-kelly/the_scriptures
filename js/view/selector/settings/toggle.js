var __awaiter=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(s,o){function r(t){try{_(i.next(t))}catch(t){o(t)}}function l(t){try{_(i.throw(t))}catch(t){o(t)}}function _(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,l)}_((i=i.apply(t,e||[])).next())}))};import*as Event from"../../../event.js";import*as Events from"../../events.js";import*as Entity from"../../entity.js";export class Instance extends Entity.Instance{constructor({settings:t,model:e}){super({element:"div",parent:t,event_grid:t.Event_Grid()}),this.model=e,this.Live()}On_Life(){return this.Element().addEventListener("click",this.On_Click.bind(this)),[new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.ON,Events.SELECTOR_SETTINGS_TOGGLE,this.ID()),event_handler:this.On_Selector_Settings_Toggle,event_priority:0})]}On_Refresh(){this.Is_Visible()&&(this.Element().textContent=this.Model().Toggle_Symbol())}On_Reclass(){const t=this.Model(),e=[];return e.push("Toggle"),this.Is_Visible()?t.Is_Toggled()&&e.push("Toggled_Toggle"):e.push("Invisible"),e}On_Click(t){return __awaiter(this,void 0,void 0,(function*(){yield this.Send(new Event.Info({affix:Events.SELECTOR_SETTINGS_TOGGLE,suffixes:[this.ID(),this.Settings().ID(),this.Settings().Selector().ID(),this.Settings().Selector().Event_Grid_Hook()],type:Event.Type.EXCLUSIVE,data:{}}))}))}On_Selector_Settings_Toggle(){return __awaiter(this,void 0,void 0,(function*(){this.Model().Toggle()}))}Model(){return this.model()}Settings(){return this.Parent()}Is_Visible(){return this.Settings().Is_Visible()}}