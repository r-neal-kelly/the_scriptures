var __awaiter=this&&this.__awaiter||function(e,t,n,i){return new(n||(n=Promise))((function(s,r){function o(e){try{l(i.next(e))}catch(e){r(e)}}function _(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,_)}l((i=i.apply(e,t||[])).next())}))};import*as Event from"../../../event.js";import*as Events from"../../events.js";import*as Entity from"../../entity.js";export class Instance extends Entity.Instance{constructor({settings:e,model:t}){super({element:"div",parent:e,event_grid:e.Event_Grid()}),this.model=t,this.Live()}On_Life(){return this.Element().addEventListener("click",this.On_Click.bind(this)),[new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.ON,Events.SELECTOR_SETTINGS_TOGGLE,this.ID()),event_handler:this.On_Selector_Settings_Toggle,event_priority:0})]}On_Refresh(){this.Is_Visible()&&(this.Element().textContent=this.Model().Toggle_Symbol())}On_Reclass(){const e=this.Model(),t=[];return t.push("Toggle"),this.Is_Visible()?e.Is_Toggled()&&t.push("Toggled_Toggle"):t.push("Invisible"),t}On_Click(e){return __awaiter(this,void 0,void 0,(function*(){yield this.Send(new Event.Info({affix:Events.SELECTOR_SETTINGS_TOGGLE,suffixes:[this.ID(),this.Event_Grid_ID()],type:Event.Type.EXCLUSIVE,data:{}}))}))}On_Selector_Settings_Toggle(){return __awaiter(this,void 0,void 0,(function*(){this.Model().Toggle()}))}Model(){return this.model()}Event_Grid_ID(){return this.Settings().Event_Grid_ID()}Settings(){return this.Parent()}Is_Visible(){return this.Settings().Is_Visible()}}