import*as Utils from"../../utils.js";import*as Entity from"../entity.js";import*as Expression from"./expression.js";export class Instance extends Entity.Instance{constructor({model:n,root:e}){super({element:"div",parent:e,event_grid:e.Event_Grid()}),this.model=n}On_Life(){return this.Add_This_CSS("\n                .Finder {\n                    display: grid;\n                    grid-template-rows: 1fr 1fr;\n                    grid-template-columns: 1fr;\n                    justify-content: start;\n\n                    width: 100%;\n                    height: 100%;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n\n                    color: white;\n                }\n            "),this.Add_Children_CSS("\n                .Expression {\n                    width: 100%;\n                    height: 100%;\n                    padding: 2px;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                }\n            "),[]}On_Refresh(){this.Has_Expression()||(this.Abort_All_Children(),new Expression.Instance({model:()=>this.Model(),parent:this}))}On_Reclass(){return["Finder"]}Model(){return this.model()}Root(){return this.Parent()}Has_Expression(){return this.Has_Child(0)&&this.Child(0)instanceof Expression.Instance}Expression(){return Utils.Assert(this.Has_Expression(),"Does not have expression."),this.Child(0)}}