var __awaiter=this&&this.__awaiter||function(n,e,t,i){return new(t||(t=Promise))((function(s,r){function o(n){try{d(i.next(n))}catch(n){r(n)}}function l(n){try{d(i.throw(n))}catch(n){r(n)}}function d(n){var e;n.done?s(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(o,l)}d((i=i.apply(n,e||[])).next())}))};import*as Utils from"../../../utils.js";import*as Event from"../../../event.js";import*as Events from"../../events.js";import*as Entity from"../../entity.js";import*as Filter from"../../selector.js";import*as Expression from"./expression.js";import*as Info from"./info.js";import*as Results from"./results.js";export class Instance extends Entity.Instance{constructor({finder:n,model:e}){super({element:"div",parent:n,event_grid:n.Event_Grid()}),this.model=e,this.Live()}On_Life(){return this.Add_This_CSS("\n                .Body {\n                    display: grid;\n                    grid-template-rows: auto auto auto 1fr;\n                    grid-template-columns: 1fr;\n                    justify-content: start;\n\n                    position: relative;\n\n                    width: 100%;\n                    height: 100%;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                }\n            "),this.Add_Children_CSS("\n                .Filter {\n                    position: absolute;\n                    left: 0;\n                    top: 0;\n                    z-index: 1;\n\n                    height: 100%;\n\n                    background-color: hsl(0, 0%, 0%, 0.7);\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                }\n\n                .Expression {\n                    display: grid;\n                    grid-template-rows: 1fr auto;\n                    grid-template-columns: 1fr;\n\n                    width: 100%;\n                    height: 100%;\n                    padding: 2px;\n\n                    position: relative;\n\n                    border-style: solid;\n                    border-width: 0 0 1px 0;\n                    border-color: white;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                }\n\n                .Expression_Placeholder {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    z-index: -1;\n\n                    width: 100%;\n                    height: 100%;\n\n                    color: hsl(255, 100%, 100%, 0.8);\n                    text-align: center;\n                }\n\n                .Expression_Input {\n                    width: 100%;\n                    height: 100%;\n\n                    background-color: transparent;\n\n                    text-align: center;\n                }\n\n                .Expression_Help {\n                    width: 100%;\n                    height: 100%;\n\n                    color: #ffcbcb;\n                    text-align: center;\n                }\n\n                .Info {\n                    width: 100%;\n                    height: 100%;\n                    padding: 2px;\n\n                    border-style: solid;\n                    border-width: 0 0 1px 0;\n                    border-color: white;\n\n                    color: white;\n                    text-align: center;\n                    font-size: 0.8em;\n                }\n\n                .Results {\n                    display: grid;\n                    grid-template-rows: 1fr;\n                    grid-template-columns: auto 1fr;\n                    justify-content: start;\n\n                    position: relative;\n\n                    width: 100%;\n                    height: 100%;\n\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                }\n\n                .Tree {\n                    overflow-x: auto;\n                    overflow-y: auto;\n                }\n\n                .List {\n                    overflow-x: auto;\n                    overflow-y: auto;\n                }\n\n                .Invisible {\n                    display: none;\n                }\n            "),[new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.AFTER,Events.SELECTOR_TOGGLE,this.Finder().ID()),event_handler:this.After_Selector_Toggle,event_priority:0}),new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.ON,Events.FINDER_BODY_EXPRESSION_ENTER,this.Finder().ID()),event_handler:this.On_Finder_Body_Expression_Enter,event_priority:10}),new Event.Listener_Info({event_name:new Event.Name(Event.Prefix.ON,Events.FINDER_BODY_TREE_LEAF_SELECT,this.Finder().ID()),event_handler:this.On_Finder_Body_Tree_Leaf_Select,event_priority:10})]}On_Refresh(){this.Has_Filter()&&this.Has_Expression()&&this.Has_Info()&&this.Has_Results()||(this.Abort_All_Children(),new Filter.Instance({parent:this,model:()=>this.Model().Filter(),event_grid_hook:()=>this.Finder().ID(),is_visible:()=>this.Model().Finder().Commander().Filter_Visibility().Is_Toggled()}),new Expression.Instance({body:this,model:()=>this.Model().Expression()}),new Info.Instance({body:this,model:()=>this.Model()}),new Results.Instance({body:this,model:()=>this.Model().Results()}))}On_Reclass(){return["Body"]}After_Selector_Toggle(){return __awaiter(this,void 0,void 0,(function*(){this.Filter().Refresh()}))}On_Finder_Body_Expression_Enter(){return __awaiter(this,void 0,void 0,(function*(){this.Model().Set_Is_Info_Waiting(!0),yield this.Send(new Event.Info({affix:Events.FINDER_BODY_BEFORE_SEARCH,suffixes:[this.Finder().ID()],type:Event.Type.EXCLUSIVE,data:{}})),yield this.Model().Search(),this.Model().Set_Is_Info_Waiting(!1),yield this.Send(new Event.Info({affix:Events.FINDER_BODY_AFTER_SEARCH,suffixes:[this.Finder().ID()],type:Event.Type.EXCLUSIVE,data:{}})),this.Refresh()}))}On_Finder_Body_Tree_Leaf_Select(){return __awaiter(this,void 0,void 0,(function*(){this.Refresh()}))}Model(){return this.model()}Finder(){return this.Parent()}Has_Filter(){return this.Has_Child(0)&&this.Child(0)instanceof Filter.Instance}Filter(){return 0,this.Child(0)}Has_Expression(){return this.Has_Child(1)&&this.Child(1)instanceof Expression.Instance}Expression(){return 0,this.Child(1)}Has_Info(){return this.Has_Child(2)&&this.Child(2)instanceof Info.Instance}Info(){return 0,this.Child(2)}Has_Results(){return this.Has_Child(3)&&this.Child(3)instanceof Results.Instance}Results(){return 0,this.Child(3)}}