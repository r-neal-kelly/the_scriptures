import*as Utils from"../../../../utils.js";import*as Entity from"../../../entity.js";import*as Tree from"./tree.js";import*as List from"./list.js";export class Instance extends Entity.Instance{constructor({model:t,parent:e}){super({element:"div",parent:e,event_grid:e.Event_Grid()}),this.model=t}On_Life(){return[]}On_Refresh(){this.Has_Tree()&&this.Has_List()||(this.Abort_All_Children(),new Tree.Instance({model:()=>this.Model(),parent:this}),new List.Instance({model:()=>this.Model(),parent:this}))}On_Reclass(){return["Results"]}Model(){return this.model()}Has_Tree(){return this.Has_Child(0)&&this.Child(0)instanceof Tree.Instance}Tree(){return Utils.Assert(this.Has_Tree(),"Does not have Tree."),this.Child(0)}Has_List(){return this.Has_Child(1)&&this.Child(1)instanceof List.Instance}List(){return Utils.Assert(this.Has_List(),"Does not have List."),this.Child(1)}}