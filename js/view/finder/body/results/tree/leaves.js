import*as Entity from"../../../../entity.js";import*as Tree from"./instance.js";import*as Leaf from"./leaf.js";export class Instance extends Entity.Instance{constructor({branch:e,model:t}){super({element:"div",parent:e,event_grid:e.Event_Grid()}),this.model=t,this.Live()}On_Refresh(){const e=this.Model().Leaf_Count(),t=this.Child_Count(),n=e-t;if(n<0)for(let e=t,s=t+n;e>s;)e-=1,this.Abort_Child(this.Child(e));else if(n>0)for(let e=t,s=t+n;e<s;e+=1)new Leaf.Instance({parent:this,model:()=>this.Model().Leaf_At(e)})}On_Reclass(){return["Leaves"]}Model(){return this.model()}Tree(){let e=this.Parent();for(;!(e instanceof Tree.Instance);)e=e.Parent();return e}}