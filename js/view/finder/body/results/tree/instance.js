import*as Utils from"../../../../../utils.js";import*as Entity from"../../../../entity.js";import*as Root from"./branch.js";export class Instance extends Entity.Instance{constructor({results:n,model:e}){super({element:"div",parent:n,event_grid:n.Event_Grid()}),this.model=e,this.Live()}On_Life(){return this.Add_CSS("\n                .Tree {\n                    border-style: solid;\n                    border-width: 0 1px 1px 0;\n                    border-color: hsl(255, 100%, 100%, 0.7);\n                }\n\n                .Branches, .Leaves {\n                    margin-bottom: 3px;\n                    padding-top: 3px;\n                    padding-bottom: 3px;\n                    padding-left: 6px;\n\n                    border-style: solid;\n                    border-width: 0 0 1px 1px;\n                    border-color: hsl(255, 100%, 100%, 0.7);\n                }\n\n                .Branch_Name {\n                    padding: 2px 2px;\n\n                    border-style: solid;\n                    border-width: 0 0 1px 0;\n                    border-color: hsl(255, 100%, 100%, 0.7);\n\n                    color: hsl(255, 100%, 100%, 0.8);\n                    font-size: 0.8em;\n                    font-variant: small-caps;\n\n                    cursor: default;\n                    -webkit-user-select: none;\n                    -moz-user-select: none;\n                    -ms-user-select: none;\n                    user-select: none;\n                }\n\n                .Leaf {\n                    width: 100%;\n                    padding: 2px 2px;\n\n                    font-size: 0.8em;\n\n                    cursor: pointer;\n                    -webkit-user-select: none;\n                    -moz-user-select: none;\n                    -ms-user-select: none;\n                    user-select: none;\n                }\n\n                .Selected {\n                    color: black;\n\n                    background-color: white;\n                }\n\n                .Hidden {\n                    display: none;\n                }\n            "),[]}On_Refresh(){this.Has_Root()||(this.Abort_All_Children(),new Root.Instance({parent:this,model:()=>this.Model().Root()}))}On_Reclass(){const n=[];return n.push("Tree"),this.Model().Root().Is_Empty()&&n.push("Hidden"),n}Model(){return this.model()}Results(){return this.Parent()}Has_Root(){return this.Has_Child(0)&&this.Child(0)instanceof Root.Instance}Root(){return 0,this.Child(0)}}