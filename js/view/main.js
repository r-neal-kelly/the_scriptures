var __awaiter=this&&this.__awaiter||function(n,e,t,o){return new(t||(t=Promise))((function(r,s){function i(n){try{l(o.next(n))}catch(n){s(n)}}function a(n){try{l(o.throw(n))}catch(n){s(n)}}function l(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,a)}l((o=o.apply(n,e||[])).next())}))};import*as Utils from"../utils.js";import*as Event from"../event.js";import*as Entity from"./entity.js";import*as Model from"../model/layout.js";import*as View from"./layout.js";import*as Data_Model from"../model/data.js";import*as Selector_Model from"../model/selector.js";import*as Browser_Model from"../model/browser.js";import*as Browser_View from"./browser.js";import*as Finder_Model from"../model/finder.js";import*as Finder_View from"./finder.js";class Body extends Entity.Instance{constructor({model:n}){super({element:document.body,parent:null,event_grid:new Event.Grid}),this.model=n,this.Live()}On_Life(){return Utils.Create_Style_Element(`\n                /* Hebrew */\n                @font-face {\n                    font-family: "Ezra SIL";\n                    src: url("${Utils.Resolve_Path("fonts/Hebrew/Ezra/SILEOT.ttf")}");\n                }\n                @font-face {\n                    font-family: "Ezra SIL SR";\n                    src: url("${Utils.Resolve_Path("fonts/Hebrew/Ezra/SILEOTSR.ttf")}");\n                }\n\n                /* Greek */\n                @font-face {\n                    font-family: "Galatia SIL";\n                    src: url("${Utils.Resolve_Path("fonts/Greek/Galatia/GalSILR.ttf")}");\n                }\n                @font-face {\n                    font-family: "Galatia SIL Bold";\n                    src: url("${Utils.Resolve_Path("fonts/Greek/Galatia/GalSILB.ttf")}");\n                }\n\n                @font-face {\n                    font-family: "Cardo";\n                    src: url("${Utils.Resolve_Path("fonts/Greek/Cardo/Cardo-Regular.ttf")}");\n                }\n                @font-face {\n                    font-family: "Cardo Bold";\n                    src: url("${Utils.Resolve_Path("fonts/Greek/Cardo/Cardo-Bold.ttf")}");\n                }\n                @font-face {\n                    font-family: "Cardo Italic";\n                    src: url("${Utils.Resolve_Path("fonts/Greek/Cardo/Cardo-Italic.ttf")}");\n                }\n\n                /* Latin */\n                @font-face {\n                    font-family: "Gentium Plus";\n                    src: url("${Utils.Resolve_Path("fonts/Latin/Gentium/GentiumPlus-R.ttf")}");\n                }\n                @font-face {\n                    font-family: "Gentium Plus Italic";\n                    src: url("${Utils.Resolve_Path("fonts/Latin/Gentium/GentiumPlus-I.ttf")}");\n                }\n\n                /* English */\n                @font-face {\n                    font-family: "Quivira";\n                    src: url("${Utils.Resolve_Path("fonts/English/Quivira/Quivira.otf")}");\n                }\n\n                @font-face {\n                    font-family: "Orkney-Regular";\n                    src: url("${Utils.Resolve_Path("fonts/English/Orkney/Orkney Regular.ttf")}");\n                }\n            `),this.Add_CSS("\n                * {\n                    box-sizing: border-box;\n                    margin: 0;\n                    padding: 0;\n                }\n\n                *:focus {\n                    outline: 0;\n                }\n            "),this.Add_This_CSS("\n                .Body {\n                    width: 100vw;\n                    height: 100vh;\n\n                    background-color: black;\n\n                    font-family: sans-serif;\n                }\n            "),this.Window().addEventListener("beforeunload",function(n){this.Die()}.bind(this)),[]}On_Refresh(){this.Has_View()||(this.Abort_All_Children(),new View.Instance({model:()=>this.Model(),root:this}))}On_Reclass(){return["Body"]}Model(){return this.model}Window(){return window}Document(){return document}Has_View(){return this.Has_Child(0)&&this.Child(0)instanceof View.Instance}View(){return Utils.Assert(this.Has_View(),"Does not have a view."),this.Child(0)}}function Main(){return __awaiter(this,void 0,void 0,(function*(){const n=new Model.Instance,e=new Body({model:n}),t=[[Selector_Model.Slot.Order.BOOKS_LANGUAGES_VERSIONS,"Genesis","English","KJV 1872-1888+","Chapter 01"]];for(const[e,o,r,s,i]of t)n.Add_Program(new Model.Window.Program.Instance({model_class:Browser_Model.Instance,model_data:{selection:new Data_Model.Selection.Name({book:o,language:r,version:s,file:i}),selector_slot_order:e,is_selector_open:!1},view_class:Browser_View.Instance}));n.Add_Program(new Model.Window.Program.Instance({model_class:Finder_Model.Instance,model_data:void 0,view_class:Finder_View.Instance})),e.Refresh()}))}Main();